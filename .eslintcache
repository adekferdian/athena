[{"/Users/adekferdian/Documents/Edot/new/athena-web/src/index.tsx":"1","/Users/adekferdian/Documents/Edot/new/athena-web/src/setup/redux/Store.ts":"2","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/App.tsx":"3","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/i18n/Metronici18n.tsx":"4","/Users/adekferdian/Documents/Edot/new/athena-web/src/setup/index.ts":"5","/Users/adekferdian/Documents/Edot/new/athena-web/src/setup/redux/RootReducer.ts":"6","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/i18n/i18nProvider.tsx":"7","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/routing/Routes.tsx":"8","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/redux/AuthInit.tsx":"9","/Users/adekferdian/Documents/Edot/new/athena-web/src/setup/axios/MockAxios.ts":"10","/Users/adekferdian/Documents/Edot/new/athena-web/src/setup/axios/SetupAxios.ts":"11","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/redux/AuthRedux.ts":"12","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/core/index.ts":"13","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/queries/redux/QueriesRedux.tsx":"14","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/screens.ts":"15","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/routing/PrivateRoutes.tsx":"16","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/MasterLayout.tsx":"17","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/components/VerificationSuccess.tsx":"18","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/errors/ErrorsPage.tsx":"19","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/components/CreateNewPassword.tsx":"20","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/components/EmailVerification.tsx":"21","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/components/EmailCustomerVerification.tsx":"22","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/redux/AuthCRUD.ts":"23","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/core/LayoutModels.ts":"24","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/core/DefaultLayoutConfig.ts":"25","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/core/LayoutSetup.ts":"26","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/index.ts":"27","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/core/PageData.tsx":"28","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/core/LayoutProvider.tsx":"29","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/core/MetronicSplashScreen.tsx":"30","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/MasterInit.tsx":"31","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/utils/api-utils.ts":"32","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/language/LanguageRoutes.tsx":"33","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/VoucherRoutes.tsx":"34","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/components/Content.tsx":"35","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/ToastComponent.tsx":"36","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/components/header/HeaderWrapper.tsx":"37","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/components/ScrollTop.tsx":"38","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/components/aside/AsideDefault.tsx":"39","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/components/Footer.tsx":"40","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/components/GuestWrapper.tsx":"41","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Limit/MasterLimitRoutes.tsx":"42","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BenefitType/MasterBenefitTypeRoutes.tsx":"43","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/CampaignType/MasterCampaignTypeRoutes.tsx":"44","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/ConditionType/MasterConditionTypeRoutes.tsx":"45","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherRules/VoucherRulesRoute.tsx":"46","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Component/MasterComponentRoutes.tsx":"47","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Rules/MasterRulesRoutes.tsx":"48","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Condition/MasterConditionRoutes.tsx":"49","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherUsage/MasterVoucherUsageRoutes.tsx":"50","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BusinessUnit/MasterBusinessUnitRoutes.tsx":"51","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Benefit/MasterBenefitRoutes.tsx":"52","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/InputPassword.tsx":"53","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/utils/title-utils.ts":"54","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/errors/components/Error404.tsx":"55","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/errors/components/Error500.tsx":"56","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/Logout.tsx":"57","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/AuthPage.tsx":"58","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/index.ts":"59","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/language/Screens.ts":"60","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/Screens.ts":"61","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Benefit/Screens.ts":"62","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherUsage/Screens.ts":"63","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BusinessUnit/Screens.ts":"64","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/hooks/selector-hook.ts":"65","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/components/aside/AsideMenu.tsx":"66","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/components/header/Topbar.tsx":"67","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/language/page/LanguageList.tsx":"68","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/language/page/AddLanguage.tsx":"69","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/page/VoucherList.tsx":"70","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/components/header/page-title/DefaultTitle.tsx":"71","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/helpers/index.ts":"72","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Benefit/page/AddMasterBenefit.tsx":"73","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Benefit/page/ListMasterBenefit.tsx":"74","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Benefit/page/EditMasterBenefit.tsx":"75","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherUsage/page/ListTypeTransaction.tsx":"76","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BusinessUnit/page/AddBusinessUnit.tsx":"77","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherUsage/page/ListTypeVoucher.tsx":"78","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherUsage/page/ListHowTo.tsx":"79","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BusinessUnit/page/ListBusinessUnit.tsx":"80","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BusinessUnit/page/EditBusinessUnit.tsx":"81","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/components/LoginEmail.tsx":"82","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/components/ForgotPassword.tsx":"83","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/index.ts":"84","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/editor/EditorToolbar.ts":"85","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/chat/ChatInner.tsx":"86","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/fallback-view/FallbackView.tsx":"87","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/portal/Portal.tsx":"88","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/dropdown/Dropdown1.tsx":"89","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/code-highlight/CodeBlock.tsx":"90","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/dropdown/Dropdown2.tsx":"91","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/modals/upgrade-plan/UpgradePlan.tsx":"92","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/modals/invite-users/InviteUsers.tsx":"93","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/modals/create-app/Main.tsx":"94","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/page/AddVoucher/index.tsx":"95","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/page/EditVoucher/index.tsx":"96","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/create-app/CreateApp.tsx":"97","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/user-menu/UserMenu.tsx":"98","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/activity-drawer/ActivityDrawer.tsx":"99","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/helpers/dataExamples.ts":"100","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/helpers/RouterHelpers.ts":"101","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/redux/VoucherCRUD.ts":"102","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/hooks/pagination-hook.ts":"103","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/hooks/debounce-hook.ts":"104","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/DateRangePicker.tsx":"105","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BusinessUnit/redux/BusinessUnitCRUD.ts":"106","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherUsage/redux/MasterVoucherUsageCRUD.ts":"107","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/components/PreviewVoucherModal.tsx":"108","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/components/ApproveCampaignModal.tsx":"109","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/components/DeclineCampaignModal.tsx":"110","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/AlertSuccess.tsx":"111","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/CustomReactSelect.tsx":"112","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/Pagination.tsx":"113","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/helpers/components/KTSVG.tsx":"114","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BusinessUnit/components/DeleteMasterBusinessUnitModal.tsx":"115","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/InputPhone.tsx":"116","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/SearchComponent.ts":"117","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/MenuComponent.ts":"118","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/_PasswordMeterComponent.ts":"119","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/_PlaceComponent.ts":"120","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/_ScrollTopComponent.ts":"121","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/_StickyComponent.ts":"122","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/_StepperComponent.ts":"123","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/_ToggleComponent.ts":"124","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/utils/hook-utils.ts":"125","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/activity/Item3.tsx":"126","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/activity/Item7.tsx":"127","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/activity/Item8.tsx":"128","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/activity/Item5.tsx":"129","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/activity/Item2.tsx":"130","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/activity/Item4.tsx":"131","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/activity/Item6.tsx":"132","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/activity/Item1.tsx":"133","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/helpers/AssetHelpers.ts":"134","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/page/EditVoucher/CampaignInfoForm.tsx":"135","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/page/AddVoucher/DiscountUsageForm.tsx":"136","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/page/AddVoucher/RulesForm.tsx":"137","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/page/EditVoucher/DiscountUsageForm.tsx":"138","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/page/AddVoucher/CampaignInfoForm.tsx":"139","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/utils/input-utils.ts":"140","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/_CookieComponent.ts":"141","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/_utils/index.ts":"142","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/InputCheckBox.tsx":"143","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/utils/rule-list-utils.tsx":"144","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/CheckboxSwitch.tsx":"145","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/LabelAlert.tsx":"146","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/RadioButtonCard.tsx":"147","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/InputPercentage.tsx":"148","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/InputMoney.tsx":"149","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/TextEditor.tsx":"150","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/InputNumber.tsx":"151","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/ImageDropZone.tsx":"152","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/components/TargetUserModal.tsx":"153","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/InputText.tsx":"154","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/InputRadio.tsx":"155","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/_utils/EventHandlerUtil.ts":"156","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/_utils/ElementAnimateUtil.ts":"157","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/_utils/_TypesHelpers.ts":"158","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/_utils/DomHelpers.ts":"159","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/_utils/_ElementStyleUtil.ts":"160","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/_utils/_DOMEventHandlerUtil.ts":"161","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/_utils/_DataUtil.ts":"162","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/_utils/models/OffsetModel.ts":"163","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/_utils/models/ViewPortModel.ts":"164","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/_ScrollComponent.ts":"165","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/_ImageInputComponent.ts":"166","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/_FeedbackComponent.ts":"167","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/_DrawerComponent.ts":"168","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BenefitType/redux/MasterBenefitTypeCRUD.ts":"169","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Benefit/redux/MasterBenefitCRUD.ts":"170","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/language/redux/LanguageCRUD.ts":"171","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/components/DeleteVoucherModal.tsx":"172","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/components/aside/AsideMenuMain.tsx":"173","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Benefit/components/DeleteMasterBenefitModal.tsx":"174","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/language/components/DeleteLanguageModal.tsx":"175","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Condition/Screens.ts":"176","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/InboxCompose.tsx":"177","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/MenuModal.tsx":"178","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/SearchModal.tsx":"179","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Rules/Screens.ts":"180","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/explore/ExploreMain.tsx":"181","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/drawer-messenger/DrawerMessenger.tsx":"182","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/sidebar-partials/SidebarUser.tsx":"183","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/header-menus/HeaderUserMenu.tsx":"184","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/quick-links/QuicLinks.tsx":"185","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/header-menus/HeaderNotificationsMenu.tsx":"186","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/sidebar-partials/SidebarGeneral.tsx":"187","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Component/Screens.ts":"188","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/search/Search.tsx":"189","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Condition/page/AddMasterCondition.tsx":"190","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Condition/page/ListMasterCondition.tsx":"191","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Condition/page/EditMasterCondition.tsx":"192","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Rules/page/AddMasterRules.tsx":"193","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Rules/page/EditMasterRules.tsx":"194","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Rules/page/ListMasterRules.tsx":"195","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherRules/Screens.ts":"196","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/ConditionType/Screens.ts":"197","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Component/page/AddMasterComponent.tsx":"198","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Component/page/EditMasterComponent.tsx":"199","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Component/page/ListMasterComponent.tsx":"200","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/CampaignType/Screens.ts":"201","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BenefitType/Screens.ts":"202","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherRules/page/EditVoucherRules.tsx":"203","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherRules/page/ListVoucherRules.tsx":"204","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherRules/page/AddVoucherRules.tsx":"205","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/ConditionType/page/AddMasterConditionType.tsx":"206","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/ConditionType/page/ListMasterConditionType.tsx":"207","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/CampaignType/page/EditMasterCampaignType.tsx":"208","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/ConditionType/page/EditMasterConditionType.tsx":"209","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/CampaignType/page/AddMasterCampaignType.tsx":"210","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/CampaignType/page/ListMasterCampaignType.tsx":"211","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BenefitType/page/EditMasterBenefitType.tsx":"212","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BenefitType/page/AddMasterBenefitType.tsx":"213","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/AsideMenuData.tsx":"214","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Limit/Screens.ts":"215","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BenefitType/page/ListMasterBenefitType.tsx":"216","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Limit/page/AddLimit.tsx":"217","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Limit/page/ListLimit.tsx":"218","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Limit/page/EditLimit.tsx":"219","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/profile/Screens.ts":"220","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/explore/Toggle.tsx":"221","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/explore/Demos.tsx":"222","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/LogoutModal.tsx":"223","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Condition/redux/MasterConditionCRUD.ts":"224","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/ConditionType/redux/MasterConditionTypeCRUD.ts":"225","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Rules/redux/MasterRulesCRUD.ts":"226","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Component/redux/MasterComponentCRUD.ts":"227","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Rules/components/DeleteMasterRulesModal.tsx":"228","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Condition/components/DeleteMasterConditionModal.tsx":"229","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherRules/redux/VoucherRulesCRUD.ts":"230","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Component/components/DeleteMasterComponentModal.tsx":"231","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/CampaignType/redux/MasterCampaignTypeCRUD.ts":"232","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherRules/components/DeleteVoucherRulesModal.tsx":"233","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/components/aside/AsideMenuItemWithSub.tsx":"234","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/components/aside/AsideMenuItem.tsx":"235","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/ConditionType/components/DeleteMasterConditionTypeModal.tsx":"236","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/CampaignType/components/DeleteMasterCampaignTypeModal.tsx":"237","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Limit/redux/LimitCRUD.ts":"238","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BenefitType/components/DeleteMasterBenefitTypeModal.tsx":"239","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Limit/components/DeleteLimitModal.tsx":"240","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/dashboard/DashboardRoutes.tsx":"241","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/dashboard/Screen.ts":"242","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/dashboard/page/Dashboard/index.tsx":"243","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/hooks/width-hook.ts":"244","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/dashboard/Gmv/index.tsx":"245","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/cards/Summary.tsx":"246","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/helpers/convertToRupiah.ts":"247","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/dashboard/Revenue/index.tsx":"248","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/dashboard/Transaction/index.tsx":"249","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/dashboard/BuContribution/index.tsx":"250","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/charts/apex/ApexRadiarChart.tsx":"251","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/charts/apex/ApexLineChart.tsx":"252","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/dashboard/VisualizationData/index.tsx":"253","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/charts/apex/ApexColumnCharts.tsx":"254"},{"size":1793,"mtime":1701253938124,"results":"255","hashOfConfig":"256"},{"size":908,"mtime":1701253938126,"results":"257","hashOfConfig":"256"},{"size":734,"mtime":1701253938099,"results":"258","hashOfConfig":"256"},{"size":979,"mtime":1701253938079,"results":"259","hashOfConfig":"256"},{"size":148,"mtime":1701253938125,"results":"260","hashOfConfig":"256"},{"size":547,"mtime":1701253938125,"results":"261","hashOfConfig":"256"},{"size":1145,"mtime":1701253938079,"results":"262","hashOfConfig":"256"},{"size":2154,"mtime":1701253938123,"results":"263","hashOfConfig":"256"},{"size":1727,"mtime":1701253938105,"results":"264","hashOfConfig":"256"},{"size":216,"mtime":1701253938125,"results":"265","hashOfConfig":"256"},{"size":3637,"mtime":1701253938125,"results":"266","hashOfConfig":"256"},{"size":6945,"mtime":1701253938105,"results":"267","hashOfConfig":"256"},{"size":198,"mtime":1701253938083,"results":"268","hashOfConfig":"256"},{"size":2352,"mtime":1701253938119,"results":"269","hashOfConfig":"256"},{"size":492,"mtime":1701253938105,"results":"270","hashOfConfig":"256"},{"size":3042,"mtime":1701259996955,"results":"271","hashOfConfig":"256"},{"size":1608,"mtime":1701269737924,"results":"272","hashOfConfig":"256"},{"size":1089,"mtime":1701253938104,"results":"273","hashOfConfig":"256"},{"size":2746,"mtime":1701253938105,"results":"274","hashOfConfig":"256"},{"size":5691,"mtime":1701253938103,"results":"275","hashOfConfig":"256"},{"size":2167,"mtime":1701253938104,"results":"276","hashOfConfig":"256"},{"size":1956,"mtime":1701253938103,"results":"277","hashOfConfig":"256"},{"size":2757,"mtime":1701253938105,"results":"278","hashOfConfig":"256"},{"size":3468,"mtime":1701253938083,"results":"279","hashOfConfig":"256"},{"size":2092,"mtime":1701253938083,"results":"280","hashOfConfig":"256"},{"size":8370,"mtime":1701253938083,"results":"281","hashOfConfig":"256"},{"size":155,"mtime":1701253938104,"results":"282","hashOfConfig":"256"},{"size":2371,"mtime":1701265324293,"results":"283","hashOfConfig":"256"},{"size":2374,"mtime":1701253938083,"results":"284","hashOfConfig":"256"},{"size":1594,"mtime":1701253938083,"results":"285","hashOfConfig":"256"},{"size":893,"mtime":1701253938080,"results":"286","hashOfConfig":"256"},{"size":4146,"mtime":1701253938123,"results":"287","hashOfConfig":"256"},{"size":648,"mtime":1701253938105,"results":"288","hashOfConfig":"256"},{"size":757,"mtime":1701253938120,"results":"289","hashOfConfig":"256"},{"size":520,"mtime":1701267063536,"results":"290","hashOfConfig":"256"},{"size":3324,"mtime":1701253938102,"results":"291","hashOfConfig":"256"},{"size":3009,"mtime":1701270401529,"results":"292","hashOfConfig":"256"},{"size":1551,"mtime":1701253938081,"results":"293","hashOfConfig":"256"},{"size":2742,"mtime":1701259424798,"results":"294","hashOfConfig":"256"},{"size":823,"mtime":1701253938081,"results":"295","hashOfConfig":"256"},{"size":1389,"mtime":1701253938104,"results":"296","hashOfConfig":"256"},{"size":747,"mtime":1701253938114,"results":"297","hashOfConfig":"256"},{"size":993,"mtime":1701253938108,"results":"298","hashOfConfig":"256"},{"size":1016,"mtime":1701253938110,"results":"299","hashOfConfig":"256"},{"size":1039,"mtime":1701253938112,"results":"300","hashOfConfig":"256"},{"size":915,"mtime":1701253938117,"results":"301","hashOfConfig":"256"},{"size":941,"mtime":1701253938111,"results":"302","hashOfConfig":"256"},{"size":837,"mtime":1701253938115,"results":"303","hashOfConfig":"256"},{"size":941,"mtime":1701253938111,"results":"304","hashOfConfig":"256"},{"size":764,"mtime":1701253938118,"results":"305","hashOfConfig":"256"},{"size":891,"mtime":1701253938108,"results":"306","hashOfConfig":"256"},{"size":925,"mtime":1701253938106,"results":"307","hashOfConfig":"256"},{"size":1290,"mtime":1701253938100,"results":"308","hashOfConfig":"256"},{"size":217,"mtime":1701253938124,"results":"309","hashOfConfig":"256"},{"size":341,"mtime":1701253938105,"results":"310","hashOfConfig":"256"},{"size":314,"mtime":1701253938105,"results":"311","hashOfConfig":"256"},{"size":425,"mtime":1701253938103,"results":"312","hashOfConfig":"256"},{"size":700,"mtime":1701253938103,"results":"313","hashOfConfig":"256"},{"size":1192,"mtime":1701253938086,"results":"314","hashOfConfig":"256"},{"size":228,"mtime":1701253938105,"results":"315","hashOfConfig":"256"},{"size":298,"mtime":1701253938120,"results":"316","hashOfConfig":"256"},{"size":372,"mtime":1701253938106,"results":"317","hashOfConfig":"256"},{"size":483,"mtime":1701253938118,"results":"318","hashOfConfig":"256"},{"size":403,"mtime":1701253938109,"results":"319","hashOfConfig":"256"},{"size":2109,"mtime":1701253938103,"results":"320","hashOfConfig":"256"},{"size":1637,"mtime":1701258999756,"results":"321","hashOfConfig":"256"},{"size":2149,"mtime":1701253938082,"results":"322","hashOfConfig":"256"},{"size":10790,"mtime":1701253938106,"results":"323","hashOfConfig":"256"},{"size":8834,"mtime":1701253938106,"results":"324","hashOfConfig":"256"},{"size":49570,"mtime":1701253938122,"results":"325","hashOfConfig":"256"},{"size":2831,"mtime":1701253938082,"results":"326","hashOfConfig":"256"},{"size":129,"mtime":1701253938079,"results":"327","hashOfConfig":"256"},{"size":9452,"mtime":1701253938107,"results":"328","hashOfConfig":"256"},{"size":9105,"mtime":1701253938107,"results":"329","hashOfConfig":"256"},{"size":10597,"mtime":1701253938107,"results":"330","hashOfConfig":"256"},{"size":6319,"mtime":1701253938118,"results":"331","hashOfConfig":"256"},{"size":8465,"mtime":1701253938109,"results":"332","hashOfConfig":"256"},{"size":6325,"mtime":1701253938118,"results":"333","hashOfConfig":"256"},{"size":6301,"mtime":1701253938118,"results":"334","hashOfConfig":"256"},{"size":9063,"mtime":1701253938109,"results":"335","hashOfConfig":"256"},{"size":9438,"mtime":1701253938109,"results":"336","hashOfConfig":"256"},{"size":5232,"mtime":1701253938104,"results":"337","hashOfConfig":"256"},{"size":5430,"mtime":1701253938104,"results":"338","hashOfConfig":"256"},{"size":506,"mtime":1701253938079,"results":"339","hashOfConfig":"256"},{"size":1436,"mtime":1701253938086,"results":"340","hashOfConfig":"256"},{"size":6469,"mtime":1701253938084,"results":"341","hashOfConfig":"256"},{"size":426,"mtime":1701253938086,"results":"342","hashOfConfig":"256"},{"size":725,"mtime":1701253938086,"results":"343","hashOfConfig":"256"},{"size":2717,"mtime":1701253938085,"results":"344","hashOfConfig":"256"},{"size":2214,"mtime":1701253938085,"results":"345","hashOfConfig":"256"},{"size":2124,"mtime":1701253938085,"results":"346","hashOfConfig":"256"},{"size":11833,"mtime":1701253938091,"results":"347","hashOfConfig":"256"},{"size":7048,"mtime":1701253938091,"results":"348","hashOfConfig":"256"},{"size":37637,"mtime":1701253938091,"results":"349","hashOfConfig":"256"},{"size":6313,"mtime":1701253938121,"results":"350","hashOfConfig":"256"},{"size":59552,"mtime":1701253938122,"results":"351","hashOfConfig":"256"},{"size":100,"mtime":1701253938087,"results":"352","hashOfConfig":"256"},{"size":98,"mtime":1701253938089,"results":"353","hashOfConfig":"256"},{"size":2582,"mtime":1701253938087,"results":"354","hashOfConfig":"256"},{"size":6945,"mtime":1701253938079,"results":"355","hashOfConfig":"256"},{"size":360,"mtime":1701253938079,"results":"356","hashOfConfig":"256"},{"size":1430,"mtime":1701253938122,"results":"357","hashOfConfig":"256"},{"size":1905,"mtime":1701253938103,"results":"358","hashOfConfig":"256"},{"size":2325,"mtime":1701253938103,"results":"359","hashOfConfig":"256"},{"size":4047,"mtime":1701253938100,"results":"360","hashOfConfig":"256"},{"size":1167,"mtime":1701253938109,"results":"361","hashOfConfig":"256"},{"size":849,"mtime":1701253938119,"results":"362","hashOfConfig":"256"},{"size":17638,"mtime":1701253938120,"results":"363","hashOfConfig":"256"},{"size":2571,"mtime":1701253938120,"results":"364","hashOfConfig":"256"},{"size":2830,"mtime":1701253938120,"results":"365","hashOfConfig":"256"},{"size":916,"mtime":1701253938099,"results":"366","hashOfConfig":"256"},{"size":919,"mtime":1701253938099,"results":"367","hashOfConfig":"256"},{"size":3353,"mtime":1701253938102,"results":"368","hashOfConfig":"256"},{"size":428,"mtime":1701256796776,"results":"369","hashOfConfig":"256"},{"size":1676,"mtime":1701253938109,"results":"370","hashOfConfig":"256"},{"size":1516,"mtime":1701253938101,"results":"371","hashOfConfig":"256"},{"size":12309,"mtime":1701253938077,"results":"372","hashOfConfig":"256"},{"size":29409,"mtime":1701253938077,"results":"373","hashOfConfig":"256"},{"size":7254,"mtime":1701253938078,"results":"374","hashOfConfig":"256"},{"size":4705,"mtime":1701253938078,"results":"375","hashOfConfig":"256"},{"size":3762,"mtime":1701253938078,"results":"376","hashOfConfig":"256"},{"size":8196,"mtime":1701253938079,"results":"377","hashOfConfig":"256"},{"size":8671,"mtime":1701253938078,"results":"378","hashOfConfig":"256"},{"size":4974,"mtime":1701253938079,"results":"379","hashOfConfig":"256"},{"size":289,"mtime":1701253938124,"results":"380","hashOfConfig":"256"},{"size":2875,"mtime":1701253938084,"results":"381","hashOfConfig":"256"},{"size":2219,"mtime":1701253938084,"results":"382","hashOfConfig":"256"},{"size":1196,"mtime":1701253938084,"results":"383","hashOfConfig":"256"},{"size":3061,"mtime":1701253938084,"results":"384","hashOfConfig":"256"},{"size":1300,"mtime":1701253938084,"results":"385","hashOfConfig":"256"},{"size":1572,"mtime":1701253938084,"results":"386","hashOfConfig":"256"},{"size":1288,"mtime":1701253938084,"results":"387","hashOfConfig":"256"},{"size":3938,"mtime":1701253938084,"results":"388","hashOfConfig":"256"},{"size":85,"mtime":1701253938079,"results":"389","hashOfConfig":"256"},{"size":14497,"mtime":1701253938121,"results":"390","hashOfConfig":"256"},{"size":13042,"mtime":1701253938121,"results":"391","hashOfConfig":"256"},{"size":15584,"mtime":1701253938121,"results":"392","hashOfConfig":"256"},{"size":12867,"mtime":1701253938122,"results":"393","hashOfConfig":"256"},{"size":23460,"mtime":1701253938121,"results":"394","hashOfConfig":"256"},{"size":6142,"mtime":1701253938124,"results":"395","hashOfConfig":"256"},{"size":1734,"mtime":1701253938077,"results":"396","hashOfConfig":"256"},{"size":341,"mtime":1701253938077,"results":"397","hashOfConfig":"256"},{"size":671,"mtime":1701253938100,"results":"398","hashOfConfig":"256"},{"size":4141,"mtime":1701253938124,"results":"399","hashOfConfig":"256"},{"size":619,"mtime":1701253938099,"results":"400","hashOfConfig":"256"},{"size":866,"mtime":1701253938101,"results":"401","hashOfConfig":"256"},{"size":712,"mtime":1701253938102,"results":"402","hashOfConfig":"256"},{"size":1750,"mtime":1701253938101,"results":"403","hashOfConfig":"256"},{"size":1767,"mtime":1701253938100,"results":"404","hashOfConfig":"256"},{"size":1065,"mtime":1701253938102,"results":"405","hashOfConfig":"256"},{"size":510,"mtime":1701253938100,"results":"406","hashOfConfig":"256"},{"size":2554,"mtime":1701253938100,"results":"407","hashOfConfig":"256"},{"size":2635,"mtime":1701253938120,"results":"408","hashOfConfig":"256"},{"size":651,"mtime":1701253938101,"results":"409","hashOfConfig":"256"},{"size":953,"mtime":1701253938101,"results":"410","hashOfConfig":"256"},{"size":3336,"mtime":1701253938076,"results":"411","hashOfConfig":"256"},{"size":3149,"mtime":1701253938076,"results":"412","hashOfConfig":"256"},{"size":1302,"mtime":1701253938077,"results":"413","hashOfConfig":"256"},{"size":13153,"mtime":1701253938076,"results":"414","hashOfConfig":"256"},{"size":535,"mtime":1701253938076,"results":"415","hashOfConfig":"256"},{"size":1767,"mtime":1701253938076,"results":"416","hashOfConfig":"256"},{"size":1311,"mtime":1701253938076,"results":"417","hashOfConfig":"256"},{"size":62,"mtime":1701253938077,"results":"418","hashOfConfig":"256"},{"size":68,"mtime":1701253938077,"results":"419","hashOfConfig":"256"},{"size":8576,"mtime":1701253938078,"results":"420","hashOfConfig":"256"},{"size":6925,"mtime":1701253938078,"results":"421","hashOfConfig":"256"},{"size":3664,"mtime":1701253938078,"results":"422","hashOfConfig":"256"},{"size":10389,"mtime":1701253938078,"results":"423","hashOfConfig":"256"},{"size":1057,"mtime":1701253938108,"results":"424","hashOfConfig":"256"},{"size":1293,"mtime":1701253938107,"results":"425","hashOfConfig":"256"},{"size":1210,"mtime":1701253938106,"results":"426","hashOfConfig":"256"},{"size":1658,"mtime":1701253938120,"results":"427","hashOfConfig":"256"},{"size":152,"mtime":1701253938081,"results":"428","hashOfConfig":"256"},{"size":1671,"mtime":1701253938106,"results":"429","hashOfConfig":"256"},{"size":1649,"mtime":1701253938106,"results":"430","hashOfConfig":"256"},{"size":397,"mtime":1701253938111,"results":"431","hashOfConfig":"256"},{"size":8313,"mtime":1701253938086,"results":"432","hashOfConfig":"256"},{"size":6983,"mtime":1701253938086,"results":"433","hashOfConfig":"256"},{"size":6427,"mtime":1701253938087,"results":"434","hashOfConfig":"256"},{"size":350,"mtime":1701253938115,"results":"435","hashOfConfig":"256"},{"size":2509,"mtime":1701253938087,"results":"436","hashOfConfig":"256"},{"size":1972,"mtime":1701253938087,"results":"437","hashOfConfig":"256"},{"size":11232,"mtime":1701253938089,"results":"438","hashOfConfig":"256"},{"size":2619,"mtime":1701253938088,"results":"439","hashOfConfig":"256"},{"size":2862,"mtime":1701253938088,"results":"440","hashOfConfig":"256"},{"size":5322,"mtime":1701253938088,"results":"441","hashOfConfig":"256"},{"size":50043,"mtime":1701253938088,"results":"442","hashOfConfig":"256"},{"size":380,"mtime":1701253938111,"results":"443","hashOfConfig":"256"},{"size":94,"mtime":1701253938088,"results":"444","hashOfConfig":"256"},{"size":8464,"mtime":1701253938112,"results":"445","hashOfConfig":"256"},{"size":9020,"mtime":1701253938112,"results":"446","hashOfConfig":"256"},{"size":9392,"mtime":1701253938112,"results":"447","hashOfConfig":"256"},{"size":6567,"mtime":1701253938116,"results":"448","hashOfConfig":"256"},{"size":7457,"mtime":1701253938116,"results":"449","hashOfConfig":"256"},{"size":8798,"mtime":1701253938116,"results":"450","hashOfConfig":"256"},{"size":361,"mtime":1701253938117,"results":"451","hashOfConfig":"256"},{"size":447,"mtime":1701253938112,"results":"452","hashOfConfig":"256"},{"size":7615,"mtime":1701253938111,"results":"453","hashOfConfig":"256"},{"size":8615,"mtime":1701253938111,"results":"454","hashOfConfig":"256"},{"size":9001,"mtime":1701253938111,"results":"455","hashOfConfig":"256"},{"size":436,"mtime":1701253938110,"results":"456","hashOfConfig":"256"},{"size":425,"mtime":1701253938108,"results":"457","hashOfConfig":"256"},{"size":11354,"mtime":1701253938117,"results":"458","hashOfConfig":"256"},{"size":8917,"mtime":1701253938117,"results":"459","hashOfConfig":"256"},{"size":10104,"mtime":1701253938117,"results":"460","hashOfConfig":"256"},{"size":6685,"mtime":1701253938114,"results":"461","hashOfConfig":"256"},{"size":9029,"mtime":1701253938114,"results":"462","hashOfConfig":"256"},{"size":6559,"mtime":1701253938110,"results":"463","hashOfConfig":"256"},{"size":7628,"mtime":1701253938114,"results":"464","hashOfConfig":"256"},{"size":5745,"mtime":1701253938110,"results":"465","hashOfConfig":"256"},{"size":8878,"mtime":1701253938110,"results":"466","hashOfConfig":"256"},{"size":6506,"mtime":1701253938108,"results":"467","hashOfConfig":"256"},{"size":5668,"mtime":1701253938108,"results":"468","hashOfConfig":"256"},{"size":5666,"mtime":1701258517433,"results":"469","hashOfConfig":"256"},{"size":338,"mtime":1701253938114,"results":"470","hashOfConfig":"256"},{"size":8850,"mtime":1701253938108,"results":"471","hashOfConfig":"256"},{"size":8487,"mtime":1701253938115,"results":"472","hashOfConfig":"256"},{"size":8942,"mtime":1701253938115,"results":"473","hashOfConfig":"256"},{"size":9457,"mtime":1701253938115,"results":"474","hashOfConfig":"256"},{"size":148,"mtime":1701253938119,"results":"475","hashOfConfig":"256"},{"size":487,"mtime":1701253938087,"results":"476","hashOfConfig":"256"},{"size":8290,"mtime":1701253938087,"results":"477","hashOfConfig":"256"},{"size":1522,"mtime":1701253938101,"results":"478","hashOfConfig":"256"},{"size":1156,"mtime":1701253938112,"results":"479","hashOfConfig":"256"},{"size":1167,"mtime":1701253938114,"results":"480","hashOfConfig":"256"},{"size":1038,"mtime":1701253938117,"results":"481","hashOfConfig":"256"},{"size":1193,"mtime":1701253938111,"results":"482","hashOfConfig":"256"},{"size":1664,"mtime":1701253938115,"results":"483","hashOfConfig":"256"},{"size":1672,"mtime":1701253938112,"results":"484","hashOfConfig":"256"},{"size":1374,"mtime":1701253938118,"results":"485","hashOfConfig":"256"},{"size":1677,"mtime":1701253938111,"results":"486","hashOfConfig":"256"},{"size":1074,"mtime":1701253938110,"results":"487","hashOfConfig":"256"},{"size":1671,"mtime":1701253938117,"results":"488","hashOfConfig":"256"},{"size":1469,"mtime":1701254720815,"results":"489","hashOfConfig":"256"},{"size":1612,"mtime":1701256547924,"results":"490","hashOfConfig":"256"},{"size":1685,"mtime":1701253938113,"results":"491","hashOfConfig":"256"},{"size":1681,"mtime":1701253938110,"results":"492","hashOfConfig":"256"},{"size":1139,"mtime":1701253938115,"results":"493","hashOfConfig":"256"},{"size":1678,"mtime":1701253938108,"results":"494","hashOfConfig":"256"},{"size":1653,"mtime":1701253938114,"results":"495","hashOfConfig":"256"},{"size":352,"mtime":1701260016797,"results":"496","hashOfConfig":"256"},{"size":143,"mtime":1701259771198,"results":"497","hashOfConfig":"256"},{"size":14330,"mtime":1701360727635,"results":"498","hashOfConfig":"256"},{"size":399,"mtime":1701253938103,"results":"499","hashOfConfig":"256"},{"size":617,"mtime":1701359672868,"results":"500","hashOfConfig":"256"},{"size":3012,"mtime":1701353461973,"results":"501","hashOfConfig":"256"},{"size":597,"mtime":1701315229595,"results":"502","hashOfConfig":"256"},{"size":621,"mtime":1701359687335,"results":"503","hashOfConfig":"256"},{"size":631,"mtime":1701359701112,"results":"504","hashOfConfig":"256"},{"size":4306,"mtime":1701360829482,"results":"505","hashOfConfig":"256"},{"size":2253,"mtime":1701360851953,"results":"506","hashOfConfig":"256"},{"size":1922,"mtime":1701342076520,"results":"507","hashOfConfig":"256"},{"size":5024,"mtime":1701348873358,"results":"508","hashOfConfig":"256"},{"size":2150,"mtime":1701342881446,"results":"509","hashOfConfig":"256"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},"1wyuk90",{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"529","messages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"537","messages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"512"},{"filePath":"544","messages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"546","messages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"548","messages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"550","messages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"552","messages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"554","messages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"556","messages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"558","messages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"560","messages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"562","messages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"564","messages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"566","messages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"568","messages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"570","messages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"572","messages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"574","messages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"576","messages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"578","messages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"580","messages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"582","usedDeprecatedRules":"512"},{"filePath":"583","messages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"585","messages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"587","usedDeprecatedRules":"512"},{"filePath":"588","messages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"590","messages":"591","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"592","messages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"594","messages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"596","messages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"598","messages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"600","messages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"602","messages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"604","messages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"606","messages":"607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"608","messages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"610","messages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"612","messages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"614","messages":"615","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"616","messages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"618","messages":"619","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"620","messages":"621","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"622","messages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"624","messages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"626","messages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"628","messages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"630","messages":"631","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"632","messages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"634","messages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"636","messages":"637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"638","messages":"639","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"640","messages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"642","messages":"643","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"644","messages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"646","messages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"648","messages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"650","messages":"651","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"652","messages":"653","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"654","usedDeprecatedRules":"512"},{"filePath":"655","messages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"657","messages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"659","messages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"661","messages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"663","messages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"665","usedDeprecatedRules":"512"},{"filePath":"666","messages":"667","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"668","messages":"669","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"670","messages":"671","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"672","messages":"673","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"674","messages":"675","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"676","messages":"677","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"678","usedDeprecatedRules":"512"},{"filePath":"679","messages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"681","messages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"683","messages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"685","messages":"686","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"687","messages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"689","messages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"691","messages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"693","messages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"695","messages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"697","messages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"699","messages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"701","messages":"702","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"703","messages":"704","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"705","messages":"706","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"707","messages":"708","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709","usedDeprecatedRules":"512"},{"filePath":"710","messages":"711","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"712","messages":"713","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"714","messages":"715","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"716","messages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"718","messages":"719","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"720","messages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"722","messages":"723","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"724","messages":"725","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"726","messages":"727","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"728","messages":"729","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"730","messages":"731","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"732","messages":"733","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"734","messages":"735","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"736","messages":"737","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"738","messages":"739","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"740","messages":"741","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"742","messages":"743","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"744","messages":"745","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"746","messages":"747","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"748","messages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"750","messages":"751","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"752","messages":"753","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"754","messages":"755","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"756","messages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"758","messages":"759","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"760","messages":"761","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"762","messages":"763","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"764","messages":"765","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"766","messages":"767","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"768","messages":"769","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"770","messages":"771","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"772","messages":"773","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"774","messages":"775","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"776","messages":"777","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"778","messages":"779","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"780","messages":"781","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"782","messages":"783","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"784","messages":"785","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"786","messages":"787","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"788","messages":"789","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"790","messages":"791","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"792","messages":"793","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"794","usedDeprecatedRules":"512"},{"filePath":"795","messages":"796","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"797","usedDeprecatedRules":"512"},{"filePath":"798","messages":"799","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"800","messages":"801","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"802","messages":"803","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"804","messages":"805","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"806","messages":"807","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"808","messages":"809","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"810","messages":"811","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"812","messages":"813","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"814","messages":"815","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"816","messages":"817","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"818","messages":"819","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"820","messages":"821","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"822","messages":"823","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"824","messages":"825","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"826","messages":"827","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"828","messages":"829","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"830","messages":"831","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"832","messages":"833","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"834","messages":"835","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"836","messages":"837","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"838","messages":"839","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"840","messages":"841","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"842","messages":"843","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"844","messages":"845","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"846","messages":"847","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"848","messages":"849","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"850","messages":"851","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"852","messages":"853","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"854","messages":"855","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"856","messages":"857","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"858","messages":"859","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"860","messages":"861","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"862","messages":"863","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"864","messages":"865","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"866","messages":"867","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"868","messages":"869","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"870","messages":"871","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"872","messages":"873","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"874","messages":"875","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"876","messages":"877","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"878","messages":"879","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"880","messages":"881","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"882","messages":"883","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"884","messages":"885","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"886","messages":"887","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"888","messages":"889","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"890","messages":"891","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"892","messages":"893","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"894","messages":"895","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"896","messages":"897","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"898","messages":"899","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"900","messages":"901","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"902","messages":"903","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"904","messages":"905","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"906","messages":"907","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"908","usedDeprecatedRules":"512"},{"filePath":"909","messages":"910","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"911","messages":"912","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"913","messages":"914","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"915","messages":"916","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"917","messages":"918","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"919","usedDeprecatedRules":"512"},{"filePath":"920","messages":"921","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"922","messages":"923","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"924","messages":"925","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"926","messages":"927","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"928","usedDeprecatedRules":"512"},{"filePath":"929","messages":"930","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"931","messages":"932","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"933","messages":"934","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"935","messages":"936","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"937","messages":"938","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"939","usedDeprecatedRules":"512"},{"filePath":"940","messages":"941","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"942","usedDeprecatedRules":"512"},{"filePath":"943","messages":"944","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"945","messages":"946","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"947","messages":"948","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"949","usedDeprecatedRules":"512"},{"filePath":"950","messages":"951","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"952","messages":"953","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"954","messages":"955","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"956","messages":"957","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"958","messages":"959","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"960","messages":"961","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"962","messages":"963","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"964","usedDeprecatedRules":"512"},{"filePath":"965","messages":"966","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"967","messages":"968","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"969","messages":"970","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"971","messages":"972","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"973","messages":"974","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"975","messages":"976","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"977","messages":"978","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"979","messages":"980","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"981","messages":"982","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"983","messages":"984","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"985","messages":"986","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"987","messages":"988","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"989","messages":"990","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"991","messages":"992","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"993","messages":"994","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"995","messages":"996","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"997","messages":"998","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"999","messages":"1000","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"1001","messages":"1002","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"1003","messages":"1004","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"1005","messages":"1006","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"1007","messages":"1008","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"1009","messages":"1010","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"1011","messages":"1012","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1013","messages":"1014","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1015","messages":"1016","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1017","messages":"1018","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"1019","messages":"1020","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1021","usedDeprecatedRules":"512"},{"filePath":"1022","messages":"1023","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1024","messages":"1025","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1026","messages":"1027","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1028","messages":"1029","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1030","messages":"1031","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1032","messages":"1033","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"1034","messages":"1035","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},"/Users/adekferdian/Documents/Edot/new/athena-web/src/index.tsx",[],["1036","1037"],"/Users/adekferdian/Documents/Edot/new/athena-web/src/setup/redux/Store.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/App.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/i18n/Metronici18n.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/setup/index.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/setup/redux/RootReducer.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/i18n/i18nProvider.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/routing/Routes.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/redux/AuthInit.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/setup/axios/MockAxios.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/setup/axios/SetupAxios.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/redux/AuthRedux.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/core/index.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/queries/redux/QueriesRedux.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/screens.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/routing/PrivateRoutes.tsx",["1038","1039"],"import React, {Suspense, lazy} from 'react'\nimport {Redirect, Route, Switch} from 'react-router-dom'\nimport {FallbackView} from '../../_metronic/partials'\n// import {FaqScreens} from '../modules/faq/Screens'\n\nexport function PrivateRoutes() {\n  const VoucherRoutes = lazy(() => import('../modules/voucher/VoucherRoutes'))\n  const LanguageRoutes = lazy(() => import('../modules/language/LanguageRoutes'))\n  const MasterRulesRoutes = lazy(() => import('../modules/master/Rules/MasterRulesRoutes'))\n  const MasterVoucherRulesRoutes = lazy(() => import('../modules/master/VoucherRules/VoucherRulesRoute'))\n  const MasterLimitRoutes = lazy(() => import('../modules/master/Limit/MasterLimitRoutes'))\n  const MasterComponentRoutes = lazy(() => import('../modules/master/Component/MasterComponentRoutes'))\n  const MasterConditionRoutes = lazy(() => import('../modules/master/Condition/MasterConditionRoutes'))\n  const MasterConditionTypeRoutes = lazy(() => import('../modules/master/ConditionType/MasterConditionTypeRoutes'))\n  const MasterCampaignTypeRoutes = lazy(() => import('../modules/master/CampaignType/MasterCampaignTypeRoutes'))\n  const MasterBenefitTypeRoutes = lazy(() => import('../modules/master/BenefitType/MasterBenefitTypeRoutes'))\n  const MasterBenefitRoutes = lazy(() => import('../modules/master/Benefit/MasterBenefitRoutes'))\n  const MasterBusinessUnitRoutes = lazy(() => import('../modules/master/BusinessUnit/MasterBusinessUnitRoutes'))\n  const MasterVoucherUsageRoutes = lazy(() => import('../modules/master/VoucherUsage/MasterVoucherUsageRoutes'));\n  \n  {/* ATHENA MODEL START */}\n  const DashboardRoutes = lazy(() => import('../modules/dashboard/DashboardRoutes'));\n   {/* ATHENA MODEL END */}\n\n  return (\n    <Suspense fallback={<FallbackView />}>\n      <Switch>\n        <Redirect from='/auth' to='/' />\n        <Redirect exact from='/' to='/' />\n        <Route path='/voucher' component={VoucherRoutes} />\n        <Route path='/voucher-rules' component={MasterVoucherRulesRoutes} />\n        <Route path='/master-limit' component={MasterLimitRoutes} />\n        <Route path='/master-bu' component={MasterBusinessUnitRoutes} />\n        <Route path='/master-component' component={MasterComponentRoutes} />\n        <Route path='/master-rules' component={MasterRulesRoutes} />\n        <Route path='/master-benefit' component={MasterBenefitRoutes} />\n        <Route path='/master-condition' component={MasterConditionRoutes} />\n        <Route path='/master-type-condition' component={MasterConditionTypeRoutes} />\n        <Route path='/master-type-benefit' component={MasterBenefitTypeRoutes} />\n        <Route path='/master-type-campaign' component={MasterCampaignTypeRoutes} />\n        <Route path='/usage-voucher' component={MasterVoucherUsageRoutes} />\n        <Route path='/language' component={LanguageRoutes} />\n\n        {/* ATHENA ROUTES START */}\n        <Route path='/dashboard' component={DashboardRoutes} />\n\n        {/* ATHENA ROUTES END */}\n        <Redirect to='error/404' />\n      </Switch>\n    </Suspense>\n  )\n}\n","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/MasterLayout.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/components/VerificationSuccess.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/errors/ErrorsPage.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/components/CreateNewPassword.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/components/EmailVerification.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/components/EmailCustomerVerification.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/redux/AuthCRUD.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/core/LayoutModels.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/core/DefaultLayoutConfig.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/core/LayoutSetup.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/index.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/core/PageData.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/core/LayoutProvider.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/core/MetronicSplashScreen.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/MasterInit.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/utils/api-utils.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/language/LanguageRoutes.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/VoucherRoutes.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/components/Content.tsx",["1040"],"import React, {useEffect} from 'react'\nimport {useLocation} from 'react-router'\nimport {useLayout} from '../core'\nimport {DrawerComponent} from '../../assets/ts/components'\n\nconst Content: React.FC = ({children}) => {\n  console.log(children, 'children');\n  \n  const {classes} = useLayout()\n  const location = useLocation()\n  useEffect(() => {\n    DrawerComponent.hideAll()\n  }, [location])\n\n  return (\n    <div id='' style={{marginTop: -30,}} className=\"w-100 h-100\">\n      {children}\n    </div>\n  )\n}\n\nexport {Content}\n","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/ToastComponent.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/components/header/HeaderWrapper.tsx",["1041"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport clsx from 'clsx'\n// import React, {useEffect} from 'react'\nimport {Link, useLocation} from 'react-router-dom'\n// import {MenuComponent} from '../../../assets/ts/components'\nimport {KTSVG, toAbsoluteUrl} from '../../../helpers'\nimport {useLayout} from '../../core'\nimport {DefaultTitle} from './page-title/DefaultTitle'\nimport {Topbar} from './Topbar'\n\nexport function HeaderWrapper() {\n  const {pathname} = useLocation()\n  const {config, classes, attributes} = useLayout()\n  const {aside} = config\n\n  // useEffect(() => {\n  //   MenuComponent.reinitialization()\n  // }, [pathname])\n\n  return (\n    <div\n      id='kt_header'\n      className={clsx('header', classes.header.join(' '), 'align-items-stretch')}\n      {...attributes.headerMenu}\n    >\n      <div\n        className={clsx(\n          classes.headerContainer.join(' '),\n          'd-flex align-items-stretch justify-content-between'\n        )}\n      >\n        {/* begin::Aside mobile toggle */}\n        {aside.display && (\n          <div className='d-flex align-items-center d-lg-none ms-n3 me-1' title='Show aside menu'>\n            <div\n              className='btn btn-icon btn-active-light-primary w-30px h-30px w-md-40px h-md-40px'\n              id='kt_aside_mobile_toggle'\n            >\n              <KTSVG path='/media/icons/duotune/abstract/abs015.svg' className='svg-icon-2x mt-1' />\n            </div>\n          </div>\n        )}\n        {/* end::Aside mobile toggle */}\n        {/* begin::Logo */}\n        {!aside.display && (\n          <div className='d-flex align-items-center flex-grow-1 flex-lg-grow-0'>\n            <Link to='/dashboard' className='d-lg-none'>\n              <img\n                alt='Logo'\n                src={toAbsoluteUrl('/media/icons/efood/IconEfood.png')}\n                className='h-30px'\n              />\n            </Link>\n          </div>\n        )}\n        {/* end::Logo */}\n\n        {aside.display && (\n          <div className='d-flex align-items-center flex-grow-1 flex-lg-grow-0'>\n            <Link to='/' className='d-lg-none'>\n              <img\n                alt='Logo'\n                src={toAbsoluteUrl('/media/icons/efood/IconEfood.png')}\n                className='h-30px'\n              />\n            </Link>\n          </div>\n        )}\n\n        {/* begin::Wrapper */}\n        <div className='d-flex align-items-stretch justify-content-between flex-lg-grow-1'>\n          {/* begin::Navbar */}\n          {/* {header.left === 'menu' && (\n            <div className='d-flex align-items-stretch' id='kt_header_nav'>\n              <Header />\n            </div>\n          )} */}\n\n          {/* {header.left === 'page-title' && ( */}\n          <div className='d-flex align-items-center' id='kt_header_nav'>\n            <DefaultTitle />\n          </div>\n          {/* )} */}\n\n          <div className='d-flex align-items-stretch'>\n            <Topbar />\n          </div>\n        </div>\n        {/* end::Wrapper */}\n      </div>\n    </div>\n  )\n}\n","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/components/ScrollTop.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/components/aside/AsideDefault.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/components/Footer.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/components/GuestWrapper.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Limit/MasterLimitRoutes.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BenefitType/MasterBenefitTypeRoutes.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/CampaignType/MasterCampaignTypeRoutes.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/ConditionType/MasterConditionTypeRoutes.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherRules/VoucherRulesRoute.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Component/MasterComponentRoutes.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Rules/MasterRulesRoutes.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Condition/MasterConditionRoutes.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherUsage/MasterVoucherUsageRoutes.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BusinessUnit/MasterBusinessUnitRoutes.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Benefit/MasterBenefitRoutes.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/InputPassword.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/utils/title-utils.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/errors/components/Error404.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/errors/components/Error500.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/Logout.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/AuthPage.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/index.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/language/Screens.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/Screens.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Benefit/Screens.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherUsage/Screens.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BusinessUnit/Screens.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/hooks/selector-hook.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/components/aside/AsideMenu.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/components/header/Topbar.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/language/page/LanguageList.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/language/page/AddLanguage.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/page/VoucherList.tsx",["1042","1043","1044","1045","1046","1047","1048"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { ChangeEvent, FC, useCallback, useEffect, useState } from 'react'\nimport InlineSVG from 'react-inlinesvg/esm'\nimport { usePagination } from 'src/app/hooks/pagination-hook'\nimport { PageTitle } from 'src/_metronic/layout/core'\nimport { getTitle } from 'src/app/utils/title-utils'\nimport { Campaign } from '../models/Voucher'\nimport {\n  NavLink,\n  useHistory,\n} from 'react-router-dom'\nimport { useHeaderToast } from 'src/app/components/ToastComponent'\nimport { Link } from 'react-router-dom'\nimport DeleteVoucherModal from '../components/DeleteVoucherModal'\nimport PreviewVoucherModal from '../components/PreviewVoucherModal'\nimport VoucherScreens from '../Screens'\nimport DateRangePicker from 'src/app/components/DateRangePicker'\nimport ApproveCampaignModal from '../components/ApproveCampaignModal'\nimport DeclineCampaignModal from '../components/DeclineCampaignModal'\nimport { deleteCampaign, getVoucherList, updateRevision } from '../redux/VoucherCRUD'\nimport moment from 'moment'\nimport { getErrorMessage } from 'src/app/utils/api-utils'\n// import moment from 'moment'\n\nconst values = [\n  { id: 1, text: \"Active\" },\n  { id: 2, text: \"Need Approval\" },\n  { id: 3, text: \"Revision Required\" },\n  { id: 4, text: \"Inactive\" },\n  { id: 5, text: \"Draft\" }\n];\n\nconst VoucherList: FC = (props: any) => {\n  const { addPageToasts } = useHeaderToast()\n  const history = useHistory()\n\n  const [activeId, setActiveId] = useState(1);\n  const [lenghtActive, setLenghtActive] = useState(0);\n  const [lenghtApproval, setLenghtApproval] = useState(0);\n  const [lenghtRevision, setLenghtRevision] = useState(0);\n  const [lenghtInactive, setLenghtInactive] = useState(0);\n  const [lenghtDraft, setLenghtDraft] = useState(0);\n  const [showDeleteModal, setShowDeleteModal] = useState(false)\n  const [showApprovCampaign, setShowApprovCampaign] = useState(false)\n  const [valueNote, setValueNote] = useState('')\n  const [showDeclineCampaign, setShowDeclineCampaign] = useState(false)\n  const [handleDeleteData, setHandleDeleteData] = useState<any>(null)\n  const [handleApprovCampaign, setHandleApprovCampaign] = useState<any>(null)\n  const [handleDeclineCampaign, setHandleDeclineCampaign] = useState<any>(null)\n  const [showPreviewModal, setShowPreviewModal] = useState(false)\n  const [handleEditData, setHandleEditData] = useState<any>(null)\n  const [handlePreviewModal, setHandlePreviewModal] = useState<any>(null)\n\n  const { state, setPage, setQuery } = usePagination<Campaign, any>(\n    useCallback((state, setState, isActive, cancelToken) => {\n      const fetchCall = async () => {\n        console.log(\"QUeris \", state);\n\n        try {\n          const statuses: string[] = []\n          if (state.query.status) {\n            statuses.push(state.query.status)\n          } else {\n            statuses.push('ACTIVE')\n            statuses.push('INACTIVE')\n          }\n          const campaignActive = await getVoucherList({\n            search: state.query.search,\n            //@ts-ignore\n            status: 'active',\n            bu_id: state.query.bu_id\n            // cancelToken,\n          })\n          const campaignNeedApprove = await getVoucherList({\n            search: state.query.search,\n            //@ts-ignore\n            status: 'need-approval',\n            bu_id: state.query.bu_id\n            // cancelToken,\n          })\n          const campaignNeedRevision = await getVoucherList({\n            search: state.query.search,\n            //@ts-ignore\n            status: 'need-revision',\n            bu_id: state.query.bu_id\n            // cancelToken,\n          })\n          const campaignInactive = await getVoucherList({\n            search: state.query.search,\n            //@ts-ignore\n            status: 'inactive',\n            bu_id: state.query.bu_id\n            // cancelToken,\n          })\n          const campaignDraft = await getVoucherList({\n            search: state.query.search,\n            //@ts-ignore\n            status: 'draft',\n            bu_id: state.query.bu_id\n            // cancelToken,\n          })\n          //@ts-ignore\n          setLenghtActive(campaignActive?.data?.data?.length ?? 0)\n          //@ts-ignore\n          setLenghtApproval(campaignNeedApprove?.data?.data?.length ?? 0)\n          //@ts-ignore\n          setLenghtRevision(campaignNeedRevision?.data?.data?.length ?? 0)\n          //@ts-ignore\n          setLenghtInactive(campaignInactive?.data?.data?.length ?? 0)\n          //@ts-ignore\n          setLenghtDraft(campaignDraft?.data?.data?.length ?? 0)\n\n          // if (isActive()) {\n          //@ts-ignore\n          setState((prev) => ({\n            ...prev,\n            loading: false,\n            refreshing: false,\n            error: false,\n            data: {\n              active: campaignActive?.data?.data ?? [],\n              needApproval: campaignNeedApprove?.data?.data ?? [],\n              needRevision: campaignNeedRevision?.data?.data ?? [],\n              inactive: campaignInactive?.data?.data ?? [],\n              draft: campaignDraft?.data?.data ?? [],\n            }\n          }))\n\n          // }\n        } catch (e) {\n          //@ts-ignore\n          setLenghtActive(0)\n          //@ts-ignore\n          setLenghtApproval(0)\n          //@ts-ignore\n          setLenghtRevision(0)\n          //@ts-ignore\n          setLenghtInactive(0)\n          //@ts-ignore\n          setLenghtDraft(0)\n          // if (isActive()) {\n          setState((prev) => ({\n            ...prev,\n            loading: false,\n            error: true,\n            data: [],\n          }))\n          // }\n        }\n      }\n\n      fetchCall()\n    }, []),\n    {\n      loading: false,\n      refreshing: false,\n      error: false,\n      page: 0,\n      data: [] as Campaign[],\n      total: 0,\n      limit: 10,\n      query: {},\n    }\n  )\n\n  // const genderStatus = (label: any) => {\n  //   switch (label) {\n  //     case GenderStatus.INACTIVE:\n  //       return <span className='badge badge-light-dark text-gray-600'>Inactive</span>\n  //     default:\n  //       return <span className='badge badge-light-success'>Active</span>\n  //   }\n  // }\n  useEffect(() => {\n    document.title = getTitle('List of Verified')\n  }, [])\n\n  useEffect(() => {\n    setPage(1)\n  }, [setPage])\n\n\n  console.log(\"data \", handlePreviewModal);\n\n  return (\n    <>\n      <PageTitle>Manage Voucher</PageTitle>\n      <div className='card shadow-sm'>\n        {/* <AlertSuccess\n          // message={success}\n          message='success'\n          handleClose={() => {}}\n          // handleClose={() => dispatch(AdminRedux.actions.setSuccess(''))}\n        /> */}\n        <div className='card-tab d-flex align-items-center justify-content-between'>\n          <div className='flex-fill fs-2 fw-bolder'>{VoucherScreens.VOUCHER_LIST.TITLE}</div>\n          <div className='card-toolbar'>\n            <Link\n              to={{\n                pathname: `/voucher/add`,\n                // state: categoryDetail,\n              }}\n              className='btn btn-sm btn-secondary fw-bold fs-6'\n            >\n              <InlineSVG\n                src={'/media/icons/circleplus.svg'}\n              // className='position-absolute translate-middle-y top-50 ms-4 pe-none'\n              />\n              &nbsp;\n              Create Voucher\n            </Link>\n          </div>\n        </div>\n        <div className='card-header d-flex align-items-center justify-content-between' id='navbar'>\n          <ul className=\"nav\">\n            {values.map((val, index) => (\n              //@ts-ignore\n              <li key={index} className=\"nav-item\" onClick={() => setActiveId(val.id)}>\n                <NavLink exact activeClassName={activeId === val.id ? \"nav-active link-dark d-flex\" : \"nav-link link-dark d-flex\"} style={{ flexDirection: 'row' }} to='#' >\n                  <div className='circle' style={{ width: 10, height: 10, marginRight: 10, marginTop: 5, backgroundColor: val.id === 2 ? '#FFB400' : val.id === 3 ? '#FF4D53' : val.id === 4 ? '#888888' : val.id === 5 ? '#DDDDDD' : '#02EF8B' }} />\n                  {val.text + (val.id === 1 ? ` (${lenghtActive})` : val.id === 1 ? ` (${lenghtActive})` : val.id === 2 ? ` (${lenghtApproval})` : val.id === 3 ? ` (${lenghtRevision})` : val.id === 4 ? ` (${lenghtInactive})` : val.id === 5 ? ` (${lenghtDraft})` : null)}\n                </NavLink>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className='card-body'>\n          {/* begin::Search */}\n          <div className='d-flex flex-wrap align-items-center'>\n            <div className='w-lg-200px w-100 position-relative'>\n              <InlineSVG\n                src={'/media/icons/efood/IconSearch.svg'}\n                className='position-absolute translate-middle-y top-50 ms-4 pe-none'\n              />\n              <input\n                placeholder='Search'\n                className='form-control form-control-lg form-control-solid ps-13'\n                type='text'\n                autoComplete='off'\n                value={state.query.search}\n                onChange={(e) =>\n                  setQuery((prev) => ({\n                    ...prev,\n                    search: e.target.value,\n                  }))\n                }\n              // onChange={(e) => searchFn(e.currentTarget.value)}\n              />\n            </div>\n            <div className='w-lg-auto w-100 d-flex align-items-center'>\n              <span className='me-5 ms-lg-4 flex-shrink-0'>Platform</span>\n              <div className='position-relative w-lg-200px w-100'>\n                <InlineSVG\n                  src={'/media/icons/efood/IconChevronDown.svg'}\n                  className='position-absolute translate-middle-y top-50 me-4 end-0 pe-none'\n                />\n                <select\n                  className='form-control form-control-lg form-control-solid pe-13'\n                  autoComplete='off'\n                  value={state.query.bu_id}\n                  onChange={(e) =>\n                    setQuery((prev) => ({\n                      ...prev,\n                      bu_id: e.target.value,\n                    }))\n                  }\n                >\n                  <option value={''}>All</option>\n                  <option value={2}>FOOD</option>\n                  <option value={4}>SHOP</option>\n                  {/* {filterRole.map((data: any, index: any) => {\n                    return (\n                      <option key={index} value={data.value}>\n                        {data.label}\n                      </option>\n                    )\n                  })} */}\n                </select>\n              </div>\n            </div>\n            <div className='w-lg-auto w-200 d-flex align-items-center'>\n              <span className='me-5 ms-lg-4 flex-shrink-0'>Periode</span>\n              <div className='position-relative w-lg-250px w-200'>\n                <DateRangePicker className='' onChange={() => { }} format='DD MMM YYYY' />\n              </div>\n            </div>\n          </div>\n          {/* end::Search */}\n          {/* begin::Table */}\n          <div className='position-relative'>\n            <div className='table-responsive my-8'>\n              <table className='table table-striped table-hover gx-4 gy-4'>\n                <thead className='text-gray fw-700'>\n                  <tr>\n                    <th>NO</th>\n                    <th>VOUCHER NAME</th>\n                    <th>VOUCHER CODE</th>\n                    <th>PLATFORM</th>\n                    <th>PERIODE</th>\n                    <th>TOTAL QUOTA</th>\n                    <th>QUOTA @USER</th>\n                    <th>TOTAL USED</th>\n                    <th>TRANSACTION TYPE</th>\n                    <th>STATUS</th>\n                    <th>ACTION</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    //@ts-ignore\n                    state.data.length === 0 ? (\n                      <tr>\n                        <td colSpan={9} className='text-center'>\n                          {state.loading\n                            ? 'Loading'\n                            : state.error\n                              ? 'Error, try to refresh the page'\n                              : 'Data Kosong'}\n                        </td>\n                      </tr>\n                    ) : (\n                      activeId === 1 ?\n                        //@ts-ignore\n                        state.data.active.map((value, index) => (\n                          // console.log(\"value\", value)\n                          <tr key={index}>\n                            <td className='align-middle'>\n                              {(state.page - 1) * state.limit + index + 1}\n                            </td>\n                            <td className='align-middle'>{value.campaign_name}</td>\n                            <td className='align-middle'>{value?.voucher.length >= 1 && value?.voucher_type === 'manual' ? value?.voucher[0].voucher_code : value?.voucher.length >= 1 && value?.voucher_type === 'generate' ? 'Generated code ' + `(${value.voucher_quota})` : '-'}</td>\n                            <td className='align-middle'>{value.business_unit.bu_name}</td>\n                            <td className='align-middle'>{moment(value.valid_start).format('DD MMM YYYY') + ' - ' + moment(value.valid_end).format('DD MMM YYYY')}</td>\n                            <td className='align-middle'>{value.voucher_quota}</td>\n                            <td className='align-middle'>{value.voucher_quota_user}</td>\n                            <td className='align-middle'>{value.voucher_used}</td>\n                            <td className='align-middle'>{value.transaction_type.description}</td>\n                            <td className='align-middle'>\n                              {' '}\n                              <div className='d-flex p-1 status-badge' style={{ width: value.status === 'need-revision' || value.status === 'need-approval' ? 100 : 50, backgroundColor: value.status === 'active' ? '#DCFCE7' : value.status === 'need-approval' ? '#FFFBDF' : value.status === 'need-revision' ? '#FFE4E5' : '#DDDDDD', alignItems: 'center', justifyContent: 'center' }}>\n                                <span style={{ color: value.status === 'active' ? '#22C55E' : value.status === 'need-approval' ? '#B78101' : value.status === 'need-revision' ? '#ED1C24' : '#666666', textAlign: 'center', fontSize: 10, flexDirection: 'row' }}>\n                                  {value.status === 'active' ? 'Active' : value.status === 'need-approval' ? 'Need Approval' : value.status === 'need-revision' ? 'Revision Required' : 'Inactive'}\n                                </span>\n                              </div>\n                            </td>\n                            <td className='align-middle' style={{ minWidth: 125 }}>\n\n                              <div\n                                className='d-inline'\n                                data-bs-toggle=\"modal\"\n                                data-bs-target=\"#kt_modal_scrollable_2\"\n                                style={{ cursor: 'pointer' }}\n                                onClick={() => {\n                                  setHandlePreviewModal(value)\n                                  setShowPreviewModal(true)\n                                }}\n                              >\n                                <InlineSVG src={'/media/icons/eye.svg'} />\n                              </div>&nbsp;&nbsp;\n\n                              {\n                                value.status === 'need-approval' ?\n                                  <div\n                                    className='d-inline'\n                                    onClick={() => {\n                                      setHandleApprovCampaign(value)\n                                      setShowApprovCampaign(true)\n                                    }}\n                                    style={{ cursor: 'pointer' }}\n                                  >\n                                    <InlineSVG src='/media/icons/ceklis.svg' />\n                                  </div>\n                                  :\n                                  <button\n                                    type='button'\n                                    className='btn-transparent me-3'\n                                    onClick={() =>\n                                      // dispatch(AdminRedux.actions.getDetailAdmin('', ''))\n                                      history.push(`/voucher/edit/${value.campaign_id}`)\n                                    }\n                                  >\n                                    <InlineSVG src={'/media/icons/edit.svg'} />\n                                  </button>\n                              }\n\n                              {value.status === 'need-approval' ?\n                                <div\n                                  className='d-inline'\n                                  onClick={() => {\n                                    setHandleDeclineCampaign(value)\n                                    setShowDeclineCampaign(true)\n                                  }}\n                                  style={{ cursor: 'pointer' }}\n                                > &nbsp;\n                                  <InlineSVG src='/media/icons/closered.svg' />\n                                </div>\n                                :\n                                <div\n                                  className='d-inline'\n                                  onClick={() => {\n                                    setHandleDeleteData(value)\n                                    setShowDeleteModal(true)\n                                  }}\n                                  style={{ cursor: 'pointer' }}\n                                >\n                                  <InlineSVG src='/media/icons/trash.svg' />\n                                </div>}\n                              &nbsp;&nbsp;\n                              {value.status === 'need-revision' ?\n                                <div\n                                  className='d-inline'\n                                  onClick={() => {\n                                    setHandleDeleteData(value)\n                                    setShowDeleteModal(true)\n                                  }}\n                                  style={{ cursor: 'pointer' }}\n                                >\n                                  <InlineSVG src='/media/icons/note.svg' />\n                                </div> : null\n                              }\n                              {/* ) : null} */}\n                            </td>\n                          </tr>\n                        )) :\n\n                        activeId === 2 ?\n                          //@ts-ignore\n                          state.data.needApproval.map((value, index) => (\n                            <tr key={index}>\n                              <td className='align-middle'>\n                                {(state.page - 1) * state.limit + index + 1}\n                              </td>\n                              <td className='align-middle'>{value.campaign_name}</td>\n                              <td className='align-middle'>{value?.voucher.length >= 1 && value?.voucher_type === 'manual' ? value?.voucher[0].voucher_code : value?.voucher.length >= 1 && value?.voucher_type === 'generate' ? 'Generated code ' + `(${value.voucher_quota})` : '-'}</td>\n                              <td className='align-middle'>{value.business_unit.bu_name}</td>\n                              <td className='align-middle'>{moment(value.valid_start).format('DD MMM YYYY') + ' - ' + moment(value.valid_end).format('DD MMM YYYY')}</td>\n                              <td className='align-middle'>{value.voucher_quota}</td>\n                              <td className='align-middle'>{value.voucher_quota_user}</td>\n                              <td className='align-middle'>{value.voucher_used}</td>\n                              <td className='align-middle'>{value.transaction_type.description}</td>\n                              <td className='align-middle'>\n                                {' '}\n                                <div className='d-flex p-1 status-badge' style={{ width: value.status === 'need-revision' || value.status === 'need-approval' ? 100 : 50, backgroundColor: value.status === 'active' ? '#DCFCE7' : value.status === 'need-approval' ? '#FFFBDF' : value.status === 'need-revision' ? '#FFE4E5' : '#DDDDDD', alignItems: 'center', justifyContent: 'center' }}>\n                                  <span style={{ color: value.status === 'active' ? '#22C55E' : value.status === 'need-approval' ? '#B78101' : value.status === 'need-revision' ? '#ED1C24' : '#666666', textAlign: 'center', fontSize: 10, flexDirection: 'row' }}>\n                                    {value.status === 'active' ? 'Active' : value.status === 'need-approval' ? 'Need Approval' : value.status === 'need-revision' ? 'Revision Required' : 'Inactive'}\n                                  </span>\n                                </div>\n                              </td>\n                              <td className='align-middle' style={{ minWidth: 125 }}>\n\n                                <div\n                                  className='d-inline'\n                                  data-bs-toggle=\"modal\"\n                                  data-bs-target=\"#kt_modal_scrollable_2\"\n                                  style={{ cursor: 'pointer' }}\n                                  onClick={() => {\n                                    setHandlePreviewModal(value)\n                                    setShowPreviewModal(true)\n                                  }}\n                                >\n                                  <InlineSVG src={'/media/icons/eye.svg'} />\n                                </div>&nbsp;&nbsp;\n\n                                {\n                                  value.status === 'need-approval' ?\n                                    <div\n                                      className='d-inline'\n                                      onClick={() => {\n                                        setHandleApprovCampaign(value)\n                                        setShowApprovCampaign(true)\n                                      }}\n                                      style={{ cursor: 'pointer' }}\n                                    >\n                                      <InlineSVG src='/media/icons/ceklis.svg' />\n                                    </div>\n                                    :\n                                    <button\n                                      type='button'\n                                      className='btn-transparent me-3'\n                                      onClick={() =>\n                                        // dispatch(AdminRedux.actions.getDetailAdmin('', ''))\n                                        history.push(`/voucher/edit/${value.campaign_id}`)\n                                      }\n                                    >\n                                      <InlineSVG src={'/media/icons/edit.svg'} />\n                                    </button>\n                                }\n\n                                {value.status === 'need-approval' ?\n                                  <div\n                                    className='d-inline'\n                                    onClick={() => {\n                                      setHandleDeclineCampaign(value)\n                                      setShowDeclineCampaign(true)\n                                    }}\n                                    style={{ cursor: 'pointer' }}\n                                  > &nbsp;\n                                    <InlineSVG src='/media/icons/closered.svg' />\n                                  </div>\n                                  :\n                                  <div\n                                    className='d-inline'\n                                    onClick={() => {\n                                      setHandleDeleteData(value)\n                                      setShowDeleteModal(true)\n                                    }}\n                                    style={{ cursor: 'pointer' }}\n                                  >\n                                    <InlineSVG src='/media/icons/trash.svg' />\n                                  </div>}\n                                &nbsp;&nbsp;\n                                {value.status === 'need-revision' ?\n                                  <div\n                                    className='d-inline'\n                                    onClick={() => {\n                                      setHandleDeleteData(value)\n                                      setShowDeleteModal(true)\n                                    }}\n                                    style={{ cursor: 'pointer' }}\n                                  >\n                                    <InlineSVG src='/media/icons/note.svg' />\n                                  </div> : null\n                                }\n                                {/* ) : null} */}\n                              </td>\n                            </tr>\n                          )) :\n\n                          activeId === 3 ?\n                            //@ts-ignore\n                            state.data.needRevision.map((value, index) => (\n                              <tr key={index}>\n                                <td className='align-middle'>\n                                  {(state.page - 1) * state.limit + index + 1}\n                                </td>\n                                <td className='align-middle'>{value.campaign_name}</td>\n                                <td className='align-middle'>{value?.voucher.length >= 1 && value?.voucher_type === 'manual' ? value?.voucher[0].voucher_code : value?.voucher.length >= 1 && value?.voucher_type === 'generate' ? 'Generated code ' + `(${value.voucher_quota})` : '-'}</td>\n                                <td className='align-middle'>{value.business_unit.bu_name}</td>\n                                <td className='align-middle'>{moment(value.valid_start).format('DD MMM YYYY') + ' - ' + moment(value.valid_end).format('DD MMM YYYY')}</td>\n                                <td className='align-middle'>{value.voucher_quota}</td>\n                                <td className='align-middle'>{value.voucher_quota_user}</td>\n                                <td className='align-middle'>{value.voucher_used}</td>\n                                <td className='align-middle'>{value.transaction_type.description}</td>\n                                <td className='align-middle'>\n                                  {' '}\n                                  <div className='d-flex p-1 status-badge' style={{ width: value.status === 'need-revision' || value.status === 'need-approval' ? 100 : 50, backgroundColor: value.status === 'active' ? '#DCFCE7' : value.status === 'need-approval' ? '#FFFBDF' : value.status === 'need-revision' ? '#FFE4E5' : '#DDDDDD', alignItems: 'center', justifyContent: 'center' }}>\n                                    <span style={{ color: value.status === 'active' ? '#22C55E' : value.status === 'need-approval' ? '#B78101' : value.status === 'need-revision' ? '#ED1C24' : '#666666', textAlign: 'center', fontSize: 10, flexDirection: 'row' }}>\n                                      {value.status === 'active' ? 'Active' : value.status === 'need-approval' ? 'Need Approval' : value.status === 'need-revision' ? 'Revision Required' : 'Inactive'}\n                                    </span>\n                                  </div>\n                                </td>\n                                <td className='align-middle' style={{ minWidth: 125 }}>\n\n                                  <div\n                                    className='d-inline'\n                                    data-bs-toggle=\"modal\"\n                                    data-bs-target=\"#kt_modal_scrollable_2\"\n                                    style={{ cursor: 'pointer' }}\n                                    onClick={() => {\n                                      setHandlePreviewModal(value)\n                                      setShowPreviewModal(true)\n                                    }}\n                                  >\n                                    <InlineSVG src={'/media/icons/eye.svg'} />\n                                  </div>&nbsp;&nbsp;\n\n                                  {\n                                    value.status === 'need-approval' ?\n                                      <div\n                                        className='d-inline'\n                                        onClick={() => {\n                                          setHandleApprovCampaign(value)\n                                          setShowApprovCampaign(true)\n                                        }}\n                                        style={{ cursor: 'pointer' }}\n                                      >\n                                        <InlineSVG src='/media/icons/ceklis.svg' />\n                                      </div>\n                                      :\n                                      <button\n                                        type='button'\n                                        className='btn-transparent me-3'\n                                        onClick={() =>\n                                          // dispatch(AdminRedux.actions.getDetailAdmin('', ''))\n                                          history.push(`/voucher/edit/${value.campaign_id}`)\n                                        }\n                                      >\n                                        <InlineSVG src={'/media/icons/edit.svg'} />\n                                      </button>\n                                  }\n\n                                  {value.status === 'need-approval' ?\n                                    <div\n                                      className='d-inline'\n                                      onClick={() => {\n                                        setHandleDeclineCampaign(value)\n                                        setShowDeclineCampaign(true)\n                                      }}\n                                      style={{ cursor: 'pointer' }}\n                                    > &nbsp;\n                                      <InlineSVG src='/media/icons/closered.svg' />\n                                    </div>\n                                    :\n                                    <div\n                                      className='d-inline'\n                                      onClick={() => {\n                                        setHandleDeleteData(value)\n                                        setShowDeleteModal(true)\n                                      }}\n                                      style={{ cursor: 'pointer' }}\n                                    >\n                                      <InlineSVG src='/media/icons/trash.svg' />\n                                    </div>}\n                                  &nbsp;&nbsp;\n                                  {value.status === 'need-revision' ?\n                                    <div\n                                      className='d-inline'\n                                      onClick={() => {\n                                        setHandleDeleteData(value)\n                                        setShowDeleteModal(true)\n                                      }}\n                                      style={{ cursor: 'pointer' }}\n                                    >\n                                      <InlineSVG src='/media/icons/note.svg' />\n                                    </div> : null\n                                  }\n                                  {/* ) : null} */}\n                                </td>\n                              </tr>\n                            )) :\n\n                            activeId === 4 ?\n                              //@ts-ignore\n                              state.data.inactive.map((value, index) => (\n                                <tr key={index}>\n                                  <td className='align-middle'>\n                                    {(state.page - 1) * state.limit + index + 1}\n                                  </td>\n                                  <td className='align-middle'>{value.campaign_name}</td>\n                                  <td className='align-middle'>{value?.voucher.length >= 1 && value?.voucher_type === 'manual' ? value?.voucher[0].voucher_code : value?.voucher.length >= 1 && value?.voucher_type === 'generate' ? 'Generated code ' + `(${value.voucher_quota})` : '-'}</td>\n                                  <td className='align-middle'>{value.business_unit.bu_name}</td>\n                                  <td className='align-middle'>{moment(value.valid_start).format('DD MMM YYYY') + ' - ' + moment(value.valid_end).format('DD MMM YYYY')}</td>\n                                  <td className='align-middle'>{value.voucher_quota}</td>\n                                  <td className='align-middle'>{value.voucher_quota_user}</td>\n                                  <td className='align-middle'>{value.voucher_used}</td>\n                                  <td className='align-middle'>{value.transaction_type.description}</td>\n                                  <td className='align-middle'>\n                                    {' '}\n                                    <div className='d-flex p-1 status-badge' style={{ width: value.status === 'need-revision' || value.status === 'need-approval' ? 100 : 50, backgroundColor: value.status === 'active' ? '#DCFCE7' : value.status === 'need-approval' ? '#FFFBDF' : value.status === 'need-revision' ? '#FFE4E5' : '#DDDDDD', alignItems: 'center', justifyContent: 'center' }}>\n                                      <span style={{ color: value.status === 'active' ? '#22C55E' : value.status === 'need-approval' ? '#B78101' : value.status === 'need-revision' ? '#ED1C24' : '#666666', textAlign: 'center', fontSize: 10, flexDirection: 'row' }}>\n                                        {value.status === 'active' ? 'Active' : value.status === 'need-approval' ? 'Need Approval' : value.status === 'need-revision' ? 'Revision Required' : 'Inactive'}\n                                      </span>\n                                    </div>\n                                  </td>\n                                  <td className='align-middle' style={{ minWidth: 125 }}>\n\n                                    <div\n                                      className='d-inline'\n                                      data-bs-toggle=\"modal\"\n                                      data-bs-target=\"#kt_modal_scrollable_2\"\n                                      style={{ cursor: 'pointer' }}\n                                      onClick={() => {\n                                        setHandlePreviewModal(value)\n                                        setShowPreviewModal(true)\n                                      }}\n                                    >\n                                      <InlineSVG src={'/media/icons/eye.svg'} />\n                                    </div>&nbsp;&nbsp;\n\n                                    {\n                                      value.status === 'need-approval' ?\n                                        <div\n                                          className='d-inline'\n                                          onClick={() => {\n                                            setHandleApprovCampaign(value)\n                                            setShowApprovCampaign(true)\n                                          }}\n                                          style={{ cursor: 'pointer' }}\n                                        >\n                                          <InlineSVG src='/media/icons/ceklis.svg' />\n                                        </div>\n                                        :\n                                        <button\n                                          type='button'\n                                          className='btn-transparent me-3'\n                                          onClick={() =>\n                                            // dispatch(AdminRedux.actions.getDetailAdmin('', ''))\n                                            history.push(`/voucher/edit/${value.campaign_id}`)\n                                          }\n                                        >\n                                          <InlineSVG src={'/media/icons/edit.svg'} />\n                                        </button>\n                                    }\n\n                                    {value.status === 'need-approval' ?\n                                      <div\n                                        className='d-inline'\n                                        onClick={() => {\n                                          setHandleDeclineCampaign(value)\n                                          setShowDeclineCampaign(true)\n                                        }}\n                                        style={{ cursor: 'pointer' }}\n                                      > &nbsp;\n                                        <InlineSVG src='/media/icons/closered.svg' />\n                                      </div>\n                                      :\n                                      <div\n                                        className='d-inline'\n                                        onClick={() => {\n                                          setHandleDeleteData(value)\n                                          setShowDeleteModal(true)\n                                        }}\n                                        style={{ cursor: 'pointer' }}\n                                      >\n                                        <InlineSVG src='/media/icons/trash.svg' />\n                                      </div>}\n                                    &nbsp;&nbsp;\n                                    {value.status === 'need-revision' ?\n                                      <div\n                                        className='d-inline'\n                                        onClick={() => {\n                                          setHandleDeleteData(value)\n                                          setShowDeleteModal(true)\n                                        }}\n                                        style={{ cursor: 'pointer' }}\n                                      >\n                                        <InlineSVG src='/media/icons/note.svg' />\n                                      </div> : null\n                                    }\n                                    {/* ) : null} */}\n                                  </td>\n                                </tr>\n                              )) :\n\n                              activeId === 5 ?\n                                //@ts-ignore\n                                state.data.inactive.map((value, index) => (\n                                  <tr key={index}>\n                                    <td className='align-middle'>\n                                      {(state.page - 1) * state.limit + index + 1}\n                                    </td>\n                                    <td className='align-middle'>{value.campaign_name}</td>\n                                    <td className='align-middle'>{value?.voucher.length >= 1 && value?.voucher_type === 'manual' ? value?.voucher[0].voucher_code : value?.voucher.length >= 1 && value?.voucher_type === 'generate' ? 'Generated code ' + `(${value.voucher_quota})` : '-'}</td>\n                                    <td className='align-middle'>{value.business_unit.bu_name}</td>\n                                    <td className='align-middle'>{moment(value.valid_start).format('DD MMM YYYY') + ' - ' + moment(value.valid_end).format('DD MMM YYYY')}</td>\n                                    <td className='align-middle'>{value.voucher_quota}</td>\n                                    <td className='align-middle'>{value.voucher_quota_user}</td>\n                                    <td className='align-middle'>{value.voucher_used}</td>\n                                    <td className='align-middle'>{value.transaction_type.description}</td>\n                                    <td className='align-middle'>\n                                      {' '}\n                                      <div className='d-flex p-1 status-badge' style={{ width: value.status === 'need-revision' || value.status === 'need-approval' ? 100 : 50, backgroundColor: value.status === 'active' ? '#DCFCE7' : value.status === 'need-approval' ? '#FFFBDF' : value.status === 'need-revision' ? '#FFE4E5' : '#DDDDDD', alignItems: 'center', justifyContent: 'center' }}>\n                                        <span style={{ color: value.status === 'active' ? '#22C55E' : value.status === 'need-approval' ? '#B78101' : value.status === 'need-revision' ? '#ED1C24' : '#666666', textAlign: 'center', fontSize: 10, flexDirection: 'row' }}>\n                                          {value.status === 'active' ? 'Active' : value.status === 'need-approval' ? 'Need Approval' : value.status === 'need-revision' ? 'Revision Required' : 'Inactive'}\n                                        </span>\n                                      </div>\n                                    </td>\n                                    <td className='align-middle' style={{ minWidth: 125 }}>\n\n                                      <div\n                                        className='d-inline'\n                                        data-bs-toggle=\"modal\"\n                                        data-bs-target=\"#kt_modal_scrollable_2\"\n                                        style={{ cursor: 'pointer' }}\n                                        onClick={() => {\n                                          setHandlePreviewModal(value)\n                                          setShowPreviewModal(true)\n                                        }}\n                                      >\n                                        <InlineSVG src={'/media/icons/eye.svg'} />\n                                      </div>&nbsp;&nbsp;\n\n                                      {\n                                        value.status === 'need-approval' ?\n                                          <div\n                                            className='d-inline'\n                                            onClick={() => {\n                                              setHandleApprovCampaign(value)\n                                              setShowApprovCampaign(true)\n                                            }}\n                                            style={{ cursor: 'pointer' }}\n                                          >\n                                            <InlineSVG src='/media/icons/ceklis.svg' />\n                                          </div>\n                                          :\n                                          <button\n                                            type='button'\n                                            className='btn-transparent me-3'\n                                            onClick={() =>\n                                              // dispatch(AdminRedux.actions.getDetailAdmin('', ''))\n                                              history.push(`/voucher/edit/${value.campaign_id}`)\n                                            }\n                                          >\n                                            <InlineSVG src={'/media/icons/edit.svg'} />\n                                          </button>\n                                      }\n\n                                      {value.status === 'need-approval' ?\n                                        <div\n                                          className='d-inline'\n                                          onClick={() => {\n                                            setHandleDeclineCampaign(value)\n                                            setShowDeclineCampaign(true)\n                                          }}\n                                          style={{ cursor: 'pointer' }}\n                                        > &nbsp;\n                                          <InlineSVG src='/media/icons/closered.svg' />\n                                        </div>\n                                        :\n                                        <div\n                                          className='d-inline'\n                                          onClick={() => {\n                                            setHandleDeleteData(value)\n                                            setShowDeleteModal(true)\n                                          }}\n                                          style={{ cursor: 'pointer' }}\n                                        >\n                                          <InlineSVG src='/media/icons/trash.svg' />\n                                        </div>}\n                                      &nbsp;&nbsp;\n                                      {value.status === 'need-revision' ?\n                                        <div\n                                          className='d-inline'\n                                          onClick={() => {\n                                            setHandleDeleteData(value)\n                                            setShowDeleteModal(true)\n                                          }}\n                                          style={{ cursor: 'pointer' }}\n                                        >\n                                          <InlineSVG src='/media/icons/note.svg' />\n                                        </div> : null\n                                      }\n                                      {/* ) : null} */}\n                                    </td>\n                                  </tr>\n                                )) : null\n                    )}\n                </tbody>\n              </table>\n            </div>\n            {/* start::Loader */}\n            {state.data.length > 0 && state.loading ? (\n              <div\n                className='position-absolute top-0 start-0 end-0 bottom-0'\n                style={{ backgroundColor: 'rgba(255,255,255,0.7)' }}\n              />\n            ) : null}\n            {/* end::Loader */}\n          </div>\n          {/* end::Table */}\n        </div>\n        <DeleteVoucherModal\n          onDelete={() => {\n            deleteCampaign(handleDeleteData?.campaign_id ?? '')\n              .then(() => {\n                // dispatch(AdminRedux.actions.setSuccess('User berhasil dihapus.'))\n                setShowDeleteModal(false)\n                setPage(state.page)\n              })\n              .catch((err) => {\n                setShowDeleteModal(false)\n                addPageToasts({ scheme: 'danger', text: getErrorMessage(err, true) })\n              })\n          }}\n          show={showDeleteModal}\n          handleClose={() => setShowDeleteModal(false)}\n          data={handleDeleteData}\n        />\n        <ApproveCampaignModal\n          onDelete={() => {\n            updateRevision(handleApprovCampaign.campaign_id, 'approve', '')\n              .then(() => {\n                // dispatch(GenderRedux.actions.setSuccess('Gender berhasil dihapus.'))\n                setShowApprovCampaign(false)\n                setPage(state.page)\n              })\n              .catch((err) => {\n                setShowApprovCampaign(false)\n                addPageToasts({ scheme: 'danger', text: getErrorMessage(err, true) })\n              })\n          }}\n          show={showApprovCampaign}\n          handleClose={() => setShowApprovCampaign(false)}\n          data={handleApprovCampaign}\n        />\n        <DeclineCampaignModal\n          onRevision={() => {\n            updateRevision(handleDeclineCampaign.campaign_id, 'decline', valueNote)\n              .then(() => {\n                // dispatch(GenderRedux.actions.setSuccess('Gender berhasil dihapus.'))\n                setShowDeclineCampaign(false)\n                setPage(state.page)\n              })\n              .catch((err) => {\n                setShowDeclineCampaign(false)\n                addPageToasts({ scheme: 'danger', text: getErrorMessage(err, true) })\n              })\n          }}\n          //@ts-ignore\n          onChange={(e: ChangeEvent<HTMLInputElement>) => setValueNote(e.target.value)\n          }\n          show={showDeclineCampaign}\n          handleClose={() => setShowDeclineCampaign(false)}\n          data={handleDeclineCampaign}\n        />\n        <PreviewVoucherModal\n          onPreview={() => {\n            // getCampaignDetail(handlePreviewModal?.campaign_id ?? '')\n            //   .then(() => {\n            //     // dispatch(AdminRedux.actions.setSuccess('User berhasil dihapus.'))\n            //     setShowDeleteModal(false)\n            //   })\n            //   .catch((err) => {\n            //     setShowDeleteModal(false)\n            //     addPageToasts({ scheme: 'danger', text: getErrorMessage(err, true) })\n            //   })\n          }}\n          show={showPreviewModal}\n          handleClose={() => setShowPreviewModal(false)}\n          data={handlePreviewModal}\n        />\n      </div>\n    </>\n  )\n}\n\nexport { VoucherList }\n","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/components/header/page-title/DefaultTitle.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/helpers/index.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Benefit/page/AddMasterBenefit.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Benefit/page/ListMasterBenefit.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Benefit/page/EditMasterBenefit.tsx",["1049","1050"],"import clsx from 'clsx'\nimport {useFormik} from 'formik'\nimport {FC, useEffect, useMemo, useState} from 'react'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {SelectComponentsConfig} from 'react-select'\nimport Select from 'react-select'\nimport {PageTitle} from 'src/_metronic/layout/core'\nimport AlertSuccess from 'src/app/components/AlertSuccess'\nimport {ReactSelectMetronicTheme} from 'src/app/components/CustomReactSelect'\nimport {getTitle} from 'src/app/utils/title-utils'\nimport * as Yup from 'yup'\nimport MasterBenefitScreens from '../Screens'\nimport {getMasterBenefitDetail, updateMasterBenefit} from '../redux/MasterBenefitCRUD'\nimport {getMasterBenefitTypeList} from '../../BenefitType/redux/MasterBenefitTypeCRUD'\n\nconst editSchema = Yup.object().shape({\n  benefit_type: Yup.string().required('This field is required'),\n  benefit_name: Yup.string().required('This field is required'),\n})\n\nconst initialValues = {\n  benefit_type: '',\n  benefit_name: '',\n  benefit_description: '',\n  meta_data: '',\n  status: '',\n}\n\nconst EditMasterBenefit: FC = (props: any) => {\n  // Variables\n  const {id} = useParams<any>()\n  const history = useHistory()\n\n  const [success, setSuccess] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [data, setData] = useState<any>()\n  const [save, setSave] = useState(false)\n  const [selectedBenefitType, setSelectedBenefitType] = useState<{label: string; value: number;} | undefined>()\n  const [benefitType, setBenefitType] = useState<any>([])\n\n  const [selectedStatus, setSelectedStatus] = useState<{label: string; value: string} | undefined>()\n  const statList = [\n    {label: 'Active', value: 'active'},\n    {label: 'Inactive', value: 'not_active'},\n  ]\n\n  const formik = useFormik({\n    initialValues,\n    validateOnBlur: false,\n    validateOnChange: false,\n    validationSchema: editSchema,\n    onSubmit: (values: any, {setStatus, setSubmitting}) => {\n      console.log(values)\n      updateBenefit(values)\n      setSave(true)\n    },\n  })\n\n  const updateBenefit = async (values: any) => {\n    formik.setSubmitting(true)\n    setLoading(true)\n    setTimeout(() => {\n      updateMasterBenefit(\n        id,\n        values.benefit_type,\n        values.benefit_name,\n        values.benefit_description,\n        values.meta_data,\n        selectedStatus?.value ?? values.status\n      )\n        .then(() => {\n          setLoading(false)\n          formik.setSubmitting(false)\n          history.goBack()\n        })\n        .catch(() => {\n          setSave(false)\n          setLoading(false)\n          formik.setSubmitting(false)\n          formik.setStatus('Update Master Benefit Failed.')\n        })\n    }, 1000)\n  }\n\n  //start::TITLE_FUNC\n  const pageTitle = useMemo(() => MasterBenefitScreens.EDIT_MASTER_BENEFIT.TITLE, [])\n\n  const breadcrumbs = useMemo(\n    () => [\n      {\n        isActive: false,\n        path: MasterBenefitScreens.LIST_MASTER_BENEFIT.PATH,\n        title: MasterBenefitScreens.LIST_MASTER_BENEFIT.TITLE,\n      },\n      {isActive: false, path: '', title: '', isSeparator: true},\n    ],\n    []\n  )\n\n  const getBenefitType = async () => {\n    try {\n      const {data} = await getMasterBenefitTypeList({})\n      setBenefitType(data.data)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const detail = await getMasterBenefitDetail(id)\n        setData(detail.data.data ?? null)\n        setSelectedBenefitType({\n          label: detail?.data?.data?.type.benefittype ?? '',\n          value: detail?.data?.data?.type?.benefittype_id ?? 0,\n        })\n        detail.data.data?.status === 'not_active'\n          ? setSelectedStatus({label: 'Inactive', value: detail.data.data?.status})\n          : setSelectedStatus({label: 'Active', value: detail.data.data?.status ?? 'active'})\n        formik.setFieldValue('benefit_type', detail.data.data?.benefit_type)\n        formik.setFieldValue('benefit_name', detail.data.data?.benefit_name)\n        formik.setFieldValue('benefit_description', detail.data.data?.benefit_description)\n        formik.setFieldValue('meta_data', detail.data.data?.meta_data)\n        formik.setFieldValue('status', selectedStatus)\n      } catch (error) {\n        console.log(error)\n      }\n    }\n\n    getData()\n    getBenefitType()\n  }, [id])\n\n  useEffect(() => {\n    document.title = getTitle(pageTitle)\n  }, [])\n  //end::TITLE_FUNC\n\n  return (\n    <div className='card'>\n      <PageTitle breadcrumbs={breadcrumbs}>{pageTitle}</PageTitle>\n      <div className='card-body'>\n        <AlertSuccess message={success} handleClose={() => setSuccess('')} />\n        <form className='form w-100' onSubmit={formik.handleSubmit} noValidate>\n          <div className='mb-10 col'>\n            <div className='col-12 col-md-6 mb-10 mb-md-0 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Benefit Name<span className='text-danger'>*</span>\n              </label>\n              <input\n                placeholder='Input Benefit Name'\n                {...formik.getFieldProps('benefit_name')}\n                className={clsx('form-control form-control-lg form-control-solid', {\n                  'border-danger': formik.touched.benefit_name && formik.errors.benefit_name,\n                })}\n                type='text'\n                name='benefit_name'\n                autoComplete='off'\n              />\n              {formik.touched.description && formik.errors.description && (\n                <div className='fv-plugins-message-container mt-2 text-danger'>\n                  <span role='alert'>{formik.errors.description}</span>\n                </div>\n              )}\n            </div>\n            <div className='col-12 col-md-6 mb-10 mb-md-0 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Benefit Description\n              </label>\n              <textarea\n                placeholder='Input Benefit Description'\n                {...formik.getFieldProps('benefit_description')}\n                className={clsx('form-control form-control-lg form-control-solid', {\n                  'border-danger':\n                    formik.touched.benefit_description && formik.errors.benefit_description,\n                })}\n                name='benefit_description'\n                autoComplete='off'\n              />\n              {formik.touched.description && formik.errors.description && (\n                <div className='fv-plugins-message-container mt-2 text-danger'>\n                  <span role='alert'>{formik.errors.description}</span>\n                </div>\n              )}\n            </div>\n            <div className='col-12 col-md-6 mb-10 mb-md-0 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>Meta Data</label>\n              <input\n                placeholder='Input Meta Data'\n                {...formik.getFieldProps('meta_data')}\n                className={clsx('form-control form-control-lg form-control-solid', {\n                  'border-danger': formik.touched.meta_data && formik.errors.meta_data,\n                })}\n                type='text'\n                name='meta_data'\n                autoComplete='off'\n              />\n              {formik.touched.description && formik.errors.description && (\n                <div className='fv-plugins-message-container mt-2 text-danger'>\n                  <span role='alert'>{formik.errors.description}</span>\n                </div>\n              )}\n            </div>\n            <div className='col-12 col-md-6 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Benefit Type<span className='text-danger'>*</span>\n              </label>\n              <Select\n                placeholder='Select'\n                cacheOptions\n                defaultOptions\n                components={ReactSelectMetronicTheme as SelectComponentsConfig<any, true>}\n                value={selectedBenefitType}\n                options={benefitType.map((data: any) => {\n                  return {label: data.benefittype, value: data.benefittype_id}\n                })}\n                onChange={(value: any) => {\n                  setSelectedBenefitType(value)\n                  formik.setFieldValue('benefit_type', value.value)\n                }}\n              />\n              {formik.touched.status && formik.errors.status && (\n                <div className='fv-plugins-message-container mt-3 text-danger'>\n                  <span role='alert'>{formik.errors.status}</span>\n                </div>\n              )}\n            </div>\n            <div className='col-12 col-md-6 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Status<span className='text-danger'>*</span>\n              </label>\n              <Select\n                placeholder='Select'\n                cacheOptions\n                defaultOptions\n                components={ReactSelectMetronicTheme as SelectComponentsConfig<any, true>}\n                value={selectedStatus}\n                options={statList}\n                onChange={(value: any) => {\n                  setSelectedStatus(value)\n                  formik.setFieldValue('status', value.value)\n                }}\n              />\n              {formik.touched.status && formik.errors.status && (\n                <div className='fv-plugins-message-container mt-3 text-danger'>\n                  <span role='alert'>{formik.errors.status}</span>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className='border-top pt-10 cardfooter-btns'>\n            <button\n              type='button'\n              className={`btn btn-lg btn-light fw-bolder me-4`}\n              onClick={() => history.goBack()}\n              tabIndex={8}\n            >\n              Cancel\n            </button>\n            <button\n              type='submit'\n              className='btn btn-lg btn-secondary fw-bolder me-4'\n              disabled={formik.isSubmitting}\n            >\n              {!loading && <span className='indicator-label'>Save</span>}\n              {loading && (\n                <span className='indicator-progress' style={{display: 'block'}}>\n                  Please wait...\n                  <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\n                </span>\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport {EditMasterBenefit}\n","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherUsage/page/ListTypeTransaction.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BusinessUnit/page/AddBusinessUnit.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherUsage/page/ListTypeVoucher.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherUsage/page/ListHowTo.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BusinessUnit/page/ListBusinessUnit.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BusinessUnit/page/EditBusinessUnit.tsx",["1051","1052"],"import clsx from 'clsx'\nimport {useFormik} from 'formik'\nimport {FC, useEffect, useMemo, useState} from 'react'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {SelectComponentsConfig} from 'react-select'\nimport Select from 'react-select'\nimport {PageTitle} from 'src/_metronic/layout/core'\nimport AlertSuccess from 'src/app/components/AlertSuccess'\nimport {ReactSelectMetronicTheme} from 'src/app/components/CustomReactSelect'\nimport {getTitle} from 'src/app/utils/title-utils'\nimport * as Yup from 'yup'\nimport BusinessUnitScreens from '../Screens'\nimport {getBusinessUnitDetail, updateBusinessUnit} from '../redux/BusinessUnitCRUD'\n\nconst editSchema = Yup.object().shape({\n  bu_name: Yup.string().required('This field is required'),\n})\n\nconst initialValues = {\n  bu_name: '',\n  api_url: '',\n  envinrontment: '',\n  description: '',\n  status: '',\n}\n\nconst EditBusinessUnit: FC = (props: any) => {\n  // Variables\n  const {id} = useParams<any>()\n  const history = useHistory()\n\n  const [success, setSuccess] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [data, setData] = useState<any>()\n  const [save, setSave] = useState(false)\n  const [selectedStatus, setSelectedStatus] = useState<{label: string; value: string} | undefined>()\n  const statList = [\n    {label: 'Active', value: 'active'},\n    {label: 'Inactive', value: 'not_active'},\n  ]\n\n  const formik = useFormik({\n    initialValues,\n    validateOnBlur: false,\n    validateOnChange: false,\n    validationSchema: editSchema,\n    onSubmit: (values: any, {setStatus, setSubmitting}) => {\n      updateMasterRule(values)\n      setSave(true)\n    },\n  })\n\n  const updateMasterRule = async (values:any) => {\n    formik.setSubmitting(true)\n    setLoading(true)\n    setTimeout(() => {\n      updateBusinessUnit(id, values.bu_name, values.api_url, values.environtment ,values.description, selectedStatus?.value ?? values.status)\n        .then(() => {\n          setLoading(false)\n          formik.setSubmitting(false)\n          history.goBack()\n        })\n        .catch(() => {\n          setSave(false)\n          setLoading(false)\n          formik.setSubmitting(false)\n          formik.setStatus('Update Master Rule Failed.')\n        })\n    }, 1000)\n  }\n\n  //start::TITLE_FUNC\n  const pageTitle = useMemo(() => BusinessUnitScreens.EDIT_MASTER_BUSINESS_UNIT.TITLE, [])\n\n  const breadcrumbs = useMemo(\n    () => [\n      {\n        isActive: false,\n        path: BusinessUnitScreens.LIST_MASTER_BUSINESS_UNIT.PATH,\n        title: BusinessUnitScreens.LIST_MASTER_BUSINESS_UNIT.TITLE,\n      },\n      {isActive: false, path: '', title: '', isSeparator: true},\n    ],\n    []\n  )\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const detail = await getBusinessUnitDetail(id)\n        setData(detail.data.data ?? null)\n        detail.data.data?.status === 'not_active'\n          ? setSelectedStatus({label: 'Inactive', value: detail.data.data?.status})\n          : setSelectedStatus({label: 'Active', value: detail.data.data?.status ?? 'active'})\n        formik.setFieldValue('bu_name', detail.data.data?.bu_name)\n        formik.setFieldValue('api_url', detail.data.data?.api_url)\n        formik.setFieldValue('environtment', detail.data.data?.environtment)\n        formik.setFieldValue('description', detail.data.data?.description)\n        formik.setFieldValue('status', selectedStatus)\n      } catch (error) {}\n    }\n\n    getData()\n  }, [id])\n\n  useEffect(() => {\n    document.title = getTitle(pageTitle)\n  }, [])\n  //end::TITLE_FUNC\n\n  return (\n    <div className='card'>\n      <PageTitle breadcrumbs={breadcrumbs}>{pageTitle}</PageTitle>\n      <div className='card-body'>\n        <AlertSuccess message={success} handleClose={() => setSuccess('')} />\n        <form className='form w-100' onSubmit={formik.handleSubmit} noValidate>\n          <div className='mb-10 col'>\n            <div className='col-12 col-md-6 mb-10 mb-md-0 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Business Name<span className='text-danger'>*</span>\n              </label>\n              <input\n                placeholder='Input Business Name'\n                {...formik.getFieldProps('bu_name')}\n                className={clsx('form-control form-control-lg form-control-solid', {\n                  'border-danger': formik.touched.bu_name && formik.errors.bu_name,\n                })}\n                type='text'\n                name='bu_name'\n                autoComplete='off'\n              />\n              {formik.touched.bu_name && formik.errors.bu_name && (\n                <div className='fv-plugins-message-container mt-2 text-danger'>\n                  <span role='alert'>{formik.errors.bu_name}</span>\n                </div>\n              )}\n            </div>\n            <div className='col-12 col-md-6 mb-10 mb-md-0 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                API URL\n              </label>\n              <input\n                placeholder='Input API URL'\n                {...formik.getFieldProps('api_url')}\n                className={clsx('form-control form-control-lg form-control-solid', {\n                  'border-danger': formik.touched.api_url && formik.errors.api_url,\n                })}\n                type='text'\n                name='api_url'\n                autoComplete='off'\n              />\n              {formik.touched.api_url && formik.errors.api_url && (\n                <div className='fv-plugins-message-container mt-2 text-danger'>\n                  <span role='alert'>{formik.errors.api_url}</span>\n                </div>\n              )}\n            </div>\n            <div className='col-12 col-md-6 mb-10 mb-md-0 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Description\n              </label>\n              <textarea\n                placeholder='Input Description'\n                {...formik.getFieldProps('description')}\n                className={clsx('form-control form-control-lg form-control-solid', {\n                  'border-danger': formik.touched.description && formik.errors.description,\n                })}\n                name='description'\n                autoComplete='off'\n              />\n              {formik.touched.description && formik.errors.description && (\n                <div className='fv-plugins-message-container mt-2 text-danger'>\n                  <span role='alert'>{formik.errors.description}</span>\n                </div>\n              )}\n            </div>\n            <div className='col-12 col-md-6 mb-10 mb-md-0 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                ENV\n              </label>\n              <input\n                placeholder='Input ENV'\n                {...formik.getFieldProps('environtment')}\n                className={clsx('form-control form-control-lg form-control-solid', {\n                  'border-danger': formik.touched.environtment && formik.errors.environtment,\n                })}\n                type='text'\n                name='environtment'\n                autoComplete='off'\n              />\n              {formik.touched.environtment && formik.errors.environtment && (\n                <div className='fv-plugins-message-container mt-2 text-danger'>\n                  <span role='alert'>{formik.errors.environtment}</span>\n                </div>\n              )}\n            </div>\n            <div className='col-12 col-md-6 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Status<span className='text-danger'>*</span>\n              </label>\n              <Select\n                placeholder='Select'\n                cacheOptions\n                defaultOptions\n                components={ReactSelectMetronicTheme as SelectComponentsConfig<any, true>}\n                value={selectedStatus}\n                options={statList}\n                onChange={(value: any) => {\n                  setSelectedStatus(value)\n                  formik.setFieldValue('status', value.value)\n                }}\n              />\n              {formik.touched.status && formik.errors.status && (\n                <div className='fv-plugins-message-container mt-3 text-danger'>\n                  <span role='alert'>{formik.errors.status}</span>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className='border-top pt-10 cardfooter-btns'>\n            <button\n              type='button'\n              className={`btn btn-lg btn-light fw-bolder me-4`}\n              onClick={() => history.goBack()}\n              tabIndex={8}\n            >\n              Cancel\n            </button>\n            <button\n              type='submit'\n              className='btn btn-lg btn-secondary fw-bolder me-4'\n              disabled={formik.isSubmitting}\n            >\n              {!loading && <span className='indicator-label'>Save</span>}\n              {loading && (\n                <span className='indicator-progress' style={{display: 'block'}}>\n                  Please wait...\n                  <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\n                </span>\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport {EditBusinessUnit}\n","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/components/LoginEmail.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/auth/components/ForgotPassword.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/index.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/editor/EditorToolbar.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/chat/ChatInner.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/fallback-view/FallbackView.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/portal/Portal.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/dropdown/Dropdown1.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/code-highlight/CodeBlock.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/dropdown/Dropdown2.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/modals/upgrade-plan/UpgradePlan.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/modals/invite-users/InviteUsers.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/modals/create-app/Main.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/page/AddVoucher/index.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/page/EditVoucher/index.tsx",["1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067"],"/* eslint-disable array-callback-return */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { useFormik } from 'formik'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { useHistory } from 'react-router'\nimport { PageTitle } from 'src/_metronic/layout/core'\nimport { getTitle } from 'src/app/utils/title-utils'\n// import {RolePlatform} from '../../role-management/models/Role'\nimport AlertSuccess from 'src/app/components/AlertSuccess'\nimport { NavLink, useParams } from 'react-router-dom'\n// import Select from 'react-select'\n// import {ReactSelectMetronicTheme} from 'src/app/components/CustomReactSelect'\n// import {SelectComponentsConfig} from 'react-select'\nimport VoucherScreens from '../../Screens'\nimport InlineSVG from 'react-inlinesvg/esm'\nimport { CampaignInfoForm } from './CampaignInfoForm'\nimport { DiscountUsageForm } from './DiscountUsageForm'\n//@ts-ignore\nimport DatePicker from \"react-datepicker\";\nimport 'react-times/css/material/default.css';\n// or you can use classic theme\nimport 'react-times/css/classic/default.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\n// import 'react-time-picker/dist/TimePicker.css';\n// import 'react-clock/dist/Clock.css';\n// import {getvoucherDetail, updatevoucher} from '../redux/voucherCRUD'\n\nconst initialValues = {\n  voucher: '',\n  status: '',\n}\n\nexport const EditVoucher = () => {\n  // States\n  // const [status, setStatus] = useState(false)\n\n  const [displayVoucher, setDisplayVoucher] = useState(1)\n  const [selectPlatform, setSelectPlatform] = useState('SHOP')\n  const [selectCampaign, setSelectCampaign] = useState('VOUCHER')\n  const [success, setSuccess] = useState('')\n  const [activeId, setActiveId] = useState(1);\n  const [startDate, setStartDate] = useState(new Date());\n  const [value, setValue] = useState('10:00');\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n  // const [role, setRole] = useState<{label: string; value: string}[]>([])\n  // const [sentData, setSentData] = useState<undefined | SentDataModel>(undefined)\n  // const [passwordModal, setPasswordModal] = useState(false)\n  // const [emailModal, setEmailModal] = useState(false)\n  // const [phoneModal, setPhoneModal] = useState(false)\n  const [selectedStatus, setSelectedStatus] = useState<{ label: string; value: number } | undefined>()\n  const statList = [\n    { label: 'active', value: 1 },\n    { label: 'inactive', value: 0 },\n  ]\n  // Variables\n  const { id } = useParams<any>()\n  const history = useHistory()\n  // const {data}: any = useSelector<RootState>(({admin}) => admin, shallowEqual)\n  const formik = useFormik({\n    initialValues,\n    validateOnBlur: false,\n    validateOnChange: false,\n    onSubmit: (values: any, { setStatus, setSubmitting }) => {\n      setSubmitting(true)\n      // setTimeout(() => {\n      //   updatevoucher(id, voucher, selectedStatus?.value ?? values.status)\n      //     .then(() => {\n      //       // dispatch(voucherRedux.actions.setSuccess('Data berhasil disimpan.'))\n      //       history.goBack()\n      //     })\n      //     .catch(() => {\n      //       setSubmitting(false)\n      //       setStatus('Update Sport gagal.')\n      //     })\n      // }, 1000)\n    },\n  })\n  useEffect(() => {\n    //   const getData = async () => {\n    //     try {\n    //       const detail = await getvoucherDetail(id)\n    //       setVoucher(detail.data.data?.description ?? '')\n    //       detail.data.data?.status === 0\n    setSelectedStatus({ label: 'inactive', value: 2 })\n    // setSelectedStatus({label: 'active', value: detail.data.data?.status ?? 1})\n\n    //       formik.setFieldValue('voucher', detail.data.data?.description)\n    //       formik.setFieldValue('status', selectedStatus)\n    //     } catch (error) {}\n    //   }\n\n    //   getData()\n  }, [])\n  //start::TITLE_FUNC\n  const pageTitle = useMemo(() => VoucherScreens.EDIT_VOUCHER.TITLE, [])\n\n  const breadcrumbs = useMemo(\n    () => [\n      {\n        isActive: false,\n        path: VoucherScreens.VOUCHER_LIST.PATH,\n        title: VoucherScreens.VOUCHER_LIST.TITLE,\n      },\n      { isActive: false, path: '', title: '', isSeparator: true },\n    ],\n    []\n  )\n\n  useEffect(() => {\n    document.title = getTitle(pageTitle)\n  }, [])\n  //end::TITLE_FUNC\n\n  const values = [\n    { id: 1, text: \"General information\" },\n    { id: 2, text: \"Discount & Usage\" },\n    { id: 3, text: \"Rules\" }\n  ];\n\n  const onValueChangePlatform = (event: any) => {\n    console.log('event ', event);\n\n    setSelectPlatform(event?.target?.defaultValue)\n  }\n\n  const onValueChangeCampaign = (event: any) => {\n    console.log('event ', event);\n\n    setSelectCampaign(event?.target?.defaultValue)\n  }\n\n  const onValueChangeDisplay = (event: any) => {\n    console.log('event ', event);\n\n    setDisplayVoucher(event?.target?.defaultValue == 1 ? 0 : 1)\n  }\n\n  const onChange = (timeValue: any) => {\n    setValue(timeValue);\n  }\n\n  const renderDiscount = () => {\n    return (\n      <div>\n        <div className='card mb-5'>\n          <div className='row mt-5 mb-5 p-5'>\n            <div className='col-2'>\n              <span className='text-gray-800 fw-bold' style={{ fontSize: 14 }}>Discount</span> <br />\n              <span className='text-gray-600 fw-bold' style={{ fontSize: 12 }}>Maksimal 2 strata</span>\n            </div>\n            <div className=\"col-2 form-check form-check-custom form-check-solid\" style={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n              <label className='text-gray-600 fw-bold' style={{ fontSize: 12 }}>\n                Minimum Transaction\n              </label>\n              <div className=\"input-group mb-5\">\n                <span className=\"input-group-text\" id=\"basic-addon1\">Rp</span>\n                <input type=\"text\" className=\"form-control\" placeholder=\"\" aria-label=\"\" aria-describedby=\"basic-addon1\" />\n              </div>\n            </div>\n            <div className=\"col-2 form-check form-check-custom form-check-solid\" style={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n              <label className='text-gray-600 fw-bold' style={{ fontSize: 12 }}>\n                Maximum Transaction (Optional)\n              </label>\n              <div className=\"input-group mb-5\">\n                <span className=\"input-group-text\" id=\"basic-addon1\">Rp</span>\n                <input type=\"text\" className=\"form-control\" placeholder=\"\" aria-label=\"\" aria-describedby=\"basic-addon1\" />\n              </div>\n            </div>\n            <div className=\"col-3 form-check form-check-custom form-check-solid\" style={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n              <label className='text-gray-600 fw-bold' style={{ fontSize: 12 }}>\n                Discount\n              </label>\n              <div className=\"input-group mb-5\">\n                <span className=\"input-group-text\" id=\"basic-addon1\">Rp</span>\n                <input type=\"text\" className=\"form-control\" placeholder=\"\" aria-label=\"\" aria-describedby=\"basic-addon1\" />\n                <select className=\"form-select form-select-solid\" aria-label=\"Select example\">\n                  <option value=\"1\" style={{ fontSize: 10 }}>Percentage %</option>\n                  <option value=\"2\">Inactive</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"col-3 form-check form-check-custom form-check-solid\" style={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n              <label className='text-gray-600 fw-bold' style={{ fontSize: 12 }}>\n                Maximum Discount (Optional)\n              </label>\n              <div className=\"input-group mb-5\">\n                <span className=\"input-group-text\" id=\"basic-addon1\">Rp</span>\n                <input type=\"text\" className=\"form-control\" placeholder=\"\" aria-label=\"\" aria-describedby=\"basic-addon1\" />\n                <select className=\"form-select form-select-solid\" aria-label=\"Select example\">\n                  <option value=\"1\">Percentage %</option>\n                  <option value=\"2\">Inactive</option>\n                </select>\n              </div>\n            </div>\n            <div className='col-2' />\n            <div className=\"col-2 form-check form-check-custom form-check-solid\" style={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n              <label className='text-gray-600 fw-bold' style={{ fontSize: 12 }}>\n                Minimum Transaction\n              </label>\n              <div className=\"input-group mb-5\">\n                <span className=\"input-group-text\" id=\"basic-addon1\">Rp</span>\n                <input type=\"text\" className=\"form-control\" placeholder=\"\" aria-label=\"\" aria-describedby=\"basic-addon1\" />\n              </div>\n            </div>\n            <div className=\"col-2 form-check form-check-custom form-check-solid\" style={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n              <label className='text-gray-600 fw-bold' style={{ fontSize: 12 }}>\n                Maximum Transaction (Optional)\n              </label>\n              <div className=\"input-group mb-5\">\n                <span className=\"input-group-text\" id=\"basic-addon1\">Rp</span>\n                <input type=\"text\" className=\"form-control\" placeholder=\"\" aria-label=\"\" aria-describedby=\"basic-addon1\" />\n              </div>\n            </div>\n            <div className=\"col-3 form-check form-check-custom form-check-solid\" style={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n              <label className='text-gray-600 fw-bold' style={{ fontSize: 12 }}>\n                Discount\n              </label>\n              <div className=\"input-group mb-5\">\n                <span className=\"input-group-text\" id=\"basic-addon1\">Rp</span>\n                <input type=\"text\" className=\"form-control\" placeholder=\"\" aria-label=\"\" aria-describedby=\"basic-addon1\" />\n                <select className=\"form-select form-select-solid\" aria-label=\"Select example\">\n                  <option value=\"1\" style={{ fontSize: 10 }}>Percentage %</option>\n                  <option value=\"2\">Inactive</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"col-3 form-check form-check-custom form-check-solid\" style={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n              <label className='text-gray-600 fw-bold' style={{ fontSize: 12 }}>\n                Maximum Discount (Optional)\n              </label>\n              <div className=\"input-group mb-5\">\n                <span className=\"input-group-text\" id=\"basic-addon1\">Rp</span>\n                <input type=\"text\" className=\"form-control\" placeholder=\"\" aria-label=\"\" aria-describedby=\"basic-addon1\" />\n                <select className=\"form-select form-select-solid\" aria-label=\"Select example\">\n                  <option value=\"1\">Percentage %</option>\n                  <option value=\"2\">Inactive</option>\n                </select>\n              </div>\n            </div>\n            <div className='col-2' />\n            <div className=\"col-2 form-check form-check-custom form-check-solid\" style={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n              <label className='text-gray-600 fw-bold' style={{ fontSize: 12 }}>\n                Minimum Transaction\n              </label>\n              <div className=\"input-group mb-5\">\n                <span className=\"input-group-text\" id=\"basic-addon1\">Rp</span>\n                <input type=\"text\" className=\"form-control\" placeholder=\"\" aria-label=\"\" aria-describedby=\"basic-addon1\" />\n              </div>\n            </div>\n            <div className=\"col-2 form-check form-check-custom form-check-solid\" style={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n              <label className='text-gray-600 fw-bold' style={{ fontSize: 12 }}>\n                Maximum Transaction (Optional)\n              </label>\n              <div className=\"input-group mb-5\">\n                <span className=\"input-group-text\" id=\"basic-addon1\">Rp</span>\n                <input type=\"text\" className=\"form-control\" placeholder=\"\" aria-label=\"\" aria-describedby=\"basic-addon1\" />\n              </div>\n            </div>\n            <div className=\"col-3 form-check form-check-custom form-check-solid\" style={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n              <label className='text-gray-600 fw-bold' style={{ fontSize: 12 }}>\n                Discount\n              </label>\n              <div className=\"input-group mb-5\">\n                <span className=\"input-group-text\" id=\"basic-addon1\">Rp</span>\n                <input type=\"text\" className=\"form-control\" placeholder=\"\" aria-label=\"\" aria-describedby=\"basic-addon1\" />\n                <select className=\"form-select form-select-solid\" aria-label=\"Select example\">\n                  <option value=\"1\" style={{ fontSize: 10 }}>Percentage %</option>\n                  <option value=\"2\">Inactive</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"col-3 form-check form-check-custom form-check-solid\" style={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n              <label className='text-gray-600 fw-bold' style={{ fontSize: 12 }}>\n                Maximum Discount (Optional)\n              </label>\n              <div className=\"input-group mb-5\">\n                <span className=\"input-group-text\" id=\"basic-addon1\">Rp</span>\n                <input type=\"text\" className=\"form-control\" placeholder=\"\" aria-label=\"\" aria-describedby=\"basic-addon1\" />\n                <select className=\"form-select form-select-solid\" aria-label=\"Select example\">\n                  <option value=\"1\">Percentage %</option>\n                  <option value=\"2\">Inactive</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='card mb-5'>\n          <div className='row mt-5 mb-5 p-5'>\n            <div className='col-2'>\n              <span className='text-gray-800 fw-bold' style={{ fontSize: 14 }}>Covered by</span> <br />\n            </div>\n            <div className=\"col-4 form-check form-check-custom form-check-solid\" style={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n              <label style={{ fontSize: 14 }}>\n                Seller/Merchant\n              </label>\n              <span className='text-gray-600 fw-bold'>Biaya diskon ditanggung oleh Seller/Merchant</span>\n              <div className=\"input-group mb-5\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"\" aria-label=\"\" aria-describedby=\"basic-addon1\" />\n                <span className=\"input-group-text\" id=\"basic-addon1\">Percentage %</span>\n              </div>\n            </div>\n            <div className=\"col-4 form-check form-check-custom form-check-solid\" style={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n              <label style={{ fontSize: 12 }}>\n                eDOT\n              </label>\n              <span className='text-gray-600 fw-bold'>Biaya diskon ditanggung oleh pihak eDOT</span>\n              <div className=\"input-group mb-5\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"\" aria-label=\"\" aria-describedby=\"basic-addon1\" />\n                <span className=\"input-group-text\" id=\"basic-addon1\">Percentage %</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='card mb-5'>\n          <div className='row mt-5 mb-5 p-5'>\n            <div className='col-2'>\n              <span className='text-gray-800 fw-bold' style={{ fontSize: 14 }}>Voucher Usage</span>\n            </div>\n            <div className='col-10' style={{ padding: 0 }}>\n              <span className='text-gray-600 fw-bold'>How to Use</span>\n            </div>\n            <div className='col-2'></div>\n            <div className=\"d-flex row col-4 mb-5 border border-gray-400\" style={{ borderRadius: 10, padding: 5, marginRight: 20, marginLeft: 0 }}>\n              <div className='col-10 d-flex' style={{ flexDirection: 'column' }}>\n                <label style={{ fontWeight: 'bold', fontSize: 12 }}>Auto Apply</label>\n                <span className='text-gray-600 fw-bold' style={{ fontSize: 10 }}>Jika T&C memenuhi syarat maka voucher secara otomatis terapply dan bisa diuncheck dan bisa memilih voucher lain yang lebih menguntungkan</span>\n              </div>\n              <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                <div className=\"form-check form-check-custom form-check-solid\">\n                  <input className=\"form-check-input\" type=\"radio\" value=\"\" id=\"flexRadioChecked\" checked={true} />\n                </div>\n              </div>\n            </div>\n            <div className=\"d-flex row col-4 mb-5 border border-gray-400\" style={{ borderRadius: 10, padding: 5, marginRight: 20, marginLeft: 0 }}>\n              <div className='col-10 d-flex' style={{ flexDirection: 'column' }}>\n                <label style={{ fontWeight: 'bold', fontSize: 12 }}>Manually</label>\n                <span className='text-gray-600 fw-bold' style={{ fontSize: 10 }}>User harus memilih sendiri voucher yang ingin dia gunakan</span>\n              </div>\n              <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                <div className=\"form-check form-check-custom form-check-solid\">\n                  <input className=\"form-check-input\" type=\"radio\" value=\"\" id=\"flexRadioChecked\" checked={true} />\n                </div>\n              </div>\n            </div>\n\n            <div className='col-2' />\n            <div className='col-10' style={{ padding: 0 }}>\n              <span className='text-gray-600 fw-bold'>Voucher type</span>\n            </div>\n            <div className='col-2'></div>\n            <div className=\"d-flex row col-3 mb-5 border border-gray-400\" style={{ borderRadius: 10, padding: 5, marginRight: 20, marginLeft: 0 }}>\n              <div className='col-10 d-flex' style={{ flexDirection: 'column' }}>\n                <label style={{ fontWeight: 'bold', fontSize: 12 }}>Shopping</label>\n                <span className='text-gray-600 fw-bold' style={{ fontSize: 10 }}>Diskon berlaku untuk pembelian produk </span>\n              </div>\n              <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                <div className=\"form-check form-check-custom form-check-solid\">\n                  <input className=\"form-check-input\" type=\"radio\" value=\"\" id=\"flexRadioChecked\" checked={true} />\n                </div>\n              </div>\n            </div>\n            <div className=\"d-flex row col-3 mb-5 border border-gray-400\" style={{ borderRadius: 10, padding: 5, marginRight: 20, marginLeft: 0 }}>\n              <div className='col-10 d-flex' style={{ flexDirection: 'column' }}>\n                <label style={{ fontWeight: 'bold', fontSize: 12 }}>Shipment</label>\n                <span className='text-gray-600 fw-bold' style={{ fontSize: 10 }}>Berlaku untuk potongan ongkos kirim </span>\n              </div>\n              <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                <div className=\"form-check form-check-custom form-check-solid\">\n                  <input className=\"form-check-input\" type=\"radio\" value=\"\" id=\"flexRadioChecked\" checked={true} />\n                </div>\n              </div>\n            </div>\n            <div className=\"d-flex row col-3 mb-5 border border-gray-400\" style={{ borderRadius: 10, padding: 5, marginRight: 20, marginLeft: 0 }}>\n              <div className='col-10 d-flex' style={{ flexDirection: 'column' }}>\n                <label style={{ fontWeight: 'bold', fontSize: 12 }}>Cashback</label>\n                <span className='text-gray-600 fw-bold' style={{ fontSize: 10 }}>Berlaku sebagai cashback </span>\n              </div>\n              <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                <div className=\"form-check form-check-custom form-check-solid\">\n                  <input className=\"form-check-input\" type=\"radio\" value=\"\" id=\"flexRadioChecked\" checked={true} />\n                </div>\n              </div>\n            </div>\n\n            <div className='col-2' />\n            <div className='col-10' style={{ padding: 0 }}>\n              <span className='text-gray-600 fw-bold'>Applies to</span>\n            </div>\n            <div className='col-2'></div>\n            <div className=\"d-flex row col-3 mb-5 border border-gray-400\" style={{ borderRadius: 10, padding: 5, marginRight: 20, marginLeft: 0 }}>\n              <div className='col-10 d-flex' style={{ flexDirection: 'column' }}>\n                <label style={{ fontWeight: 'bold', fontSize: 12 }}>Total Cart</label>\n                <span className='text-gray-600 fw-bold' style={{ fontSize: 10 }}>Total harga semua produk di keranjang sebelum biaya ongkir, transaksi, diskon dll</span>\n              </div>\n              <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                <div className=\"form-check form-check-custom form-check-solid\">\n                  <input className=\"form-check-input\" type=\"radio\" value=\"\" id=\"flexRadioChecked\" checked={true} />\n                </div>\n              </div>\n            </div>\n            <div className=\"d-flex row col-3 mb-5 border border-gray-400\" style={{ borderRadius: 10, padding: 5, marginRight: 20, marginLeft: 0 }}>\n              <div className='col-10 d-flex' style={{ flexDirection: 'column' }}>\n                <label style={{ fontWeight: 'bold', fontSize: 12 }}>Total payment before discount</label>\n                <span className='text-gray-600 fw-bold' style={{ fontSize: 10 }}>Termasuk ongkir, biaya transaksi. Sebelum dikurangi diskon yang ada, seperti SKU, IPT dll</span>\n              </div>\n              <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                <div className=\"form-check form-check-custom form-check-solid\">\n                  <input className=\"form-check-input\" type=\"radio\" value=\"\" id=\"flexRadioChecked\" checked={true} />\n                </div>\n              </div>\n            </div>\n            <div className=\"d-flex row col-3 mb-5 border border-gray-400\" style={{ borderRadius: 10, padding: 5, marginRight: 20, marginLeft: 0 }}>\n              <div className='col-10 d-flex' style={{ flexDirection: 'column' }}>\n                <label style={{ fontWeight: 'bold', fontSize: 12 }}>Total payment after discount</label>\n                <span className='text-gray-600 fw-bold' style={{ fontSize: 10 }}>Termasuk ongkir, biaya transaksi. Setelah dikurangi diskon yang ada, seperti SKU, IPT dll</span>\n              </div>\n              <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                <div className=\"form-check form-check-custom form-check-solid\">\n                  <input className=\"form-check-input\" type=\"radio\" value=\"\" id=\"flexRadioChecked\" checked={true} />\n                </div>\n              </div>\n            </div>\n\n            <div className='col-2' />\n            <div className='col-10' style={{ padding: 0 }}>\n              <span className='text-gray-600 fw-bold'>Transaction Type</span>\n            </div>\n            <div className='col-2'></div>\n            <div className=\"d-flex row col-3 mb-5 border border-gray-400\" style={{ borderRadius: 10, padding: 5, marginRight: 20, marginLeft: 0 }}>\n              <div className='col-10 d-flex' style={{ flexDirection: 'column' }}>\n                <label style={{ fontWeight: 'bold', fontSize: 12 }}>All Transaction</label>\n                <span className='text-gray-600 fw-bold' style={{ fontSize: 10 }}>Diskon berlaku untuk semua transaksi</span>\n              </div>\n              <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                <div className=\"form-check form-check-custom form-check-solid\">\n                  <input className=\"form-check-input\" type=\"radio\" value=\"\" id=\"flexRadioChecked\" checked={true} />\n                </div>\n              </div>\n            </div>\n            <div className=\"d-flex row col-3 mb-5 border border-gray-400\" style={{ borderRadius: 10, padding: 5, marginRight: 20, marginLeft: 0 }}>\n              <div className='col-10 d-flex' style={{ flexDirection: 'column' }}>\n                <label style={{ fontWeight: 'bold', fontSize: 12 }}>First Transaction</label>\n                <span className='text-gray-600 fw-bold' style={{ fontSize: 10 }}>Diskon hanya berlaku untuk  transaksi pertama</span>\n              </div>\n              <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                <div className=\"form-check form-check-custom form-check-solid\">\n                  <input className=\"form-check-input\" type=\"radio\" value=\"\" id=\"flexRadioChecked\" checked={true} />\n                </div>\n              </div>\n            </div>\n            <div className=\"d-flex row col-3 mb-5 border border-gray-400\" style={{ borderRadius: 10, padding: 5, marginRight: 20, marginLeft: 0 }}>\n              <div className='col-10 d-flex' style={{ flexDirection: 'column' }}>\n                <label style={{ fontWeight: 'bold', fontSize: 12 }}>Second and Following</label>\n                <span className='text-gray-600 fw-bold' style={{ fontSize: 10 }}>Diskon berlaku untuk transaksi kedua dan berikutnya</span>\n              </div>\n              <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                <div className=\"form-check form-check-custom form-check-solid\">\n                  <input className=\"form-check-input\" type=\"radio\" value=\"\" id=\"flexRadioChecked\" checked={true} />\n                </div>\n              </div>\n            </div>\n\n            <div className='col-2'></div>\n            <div className='col-10 mb-5 row'>\n              <div className='col-5 mt-5 p-0'>\n                <label className=\"form-label text-gray-800\" style={{ fontWeight: 'bold', fontSize: 12 }}>OTP Validation Required</label>\n              </div>\n              <div className='col-2 mt-5 p-0 d-flex'>\n                <div className=\"form-check form-switch form-check-custom form-check-solid\">\n                  <input className=\"form-check-input\" type=\"checkbox\" value={displayVoucher} id=\"flexSwitchChecked\" checked={displayVoucher == 1} onChange={onValueChangeDisplay} />\n                </div>\n              </div>\n              <div className='col-8 p-0'>\n                <span className=\"text-gray-600 fs-7\">Jika Aktif, maka untuk menggunakan voucher akan tampil permintaan OTP</span>\n              </div>\n            </div>\n\n            <div className='col-2'></div>\n            <div className='col-10 mb-5 row'>\n              <div className='col-5 mt-5 p-0'>\n                <label className=\"form-label text-gray-800\" style={{ fontWeight: 'bold', fontSize: 12 }}>Allow Combination with Other Voucher</label>\n              </div>\n              <div className='col-2 mt-5 p-0 d-flex'>\n                <div className=\"form-check form-switch form-check-custom form-check-solid\">\n                  <input className=\"form-check-input\" type=\"checkbox\" value={displayVoucher} id=\"flexSwitchChecked\" checked={displayVoucher == 1} onChange={onValueChangeDisplay} />\n                </div>\n              </div>\n              <div className='col-8 p-0'>\n                <span className=\"text-gray-600 fs-7\">Pilih jenis voucher yang bisa dipakai bersama voucher ini</span>\n              </div>\n            </div>\n\n            <div className='col-2' />\n            <div className=\"d-flex row col-3 mb-5 border border-gray-400\" style={{ borderRadius: 10, padding: 5, marginRight: 20, marginLeft: 0 }}>\n              <div className='col-10 d-flex' style={{ flexDirection: 'column' }}>\n                <label style={{ fontWeight: 'bold', fontSize: 12 }}>Shopping</label>\n                <span className='text-gray-600 fw-bold' style={{ fontSize: 10 }}>Kombinasi dengan voucher pembelian produk</span>\n              </div>\n              <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                <div className=\"form-check form-check-custom form-check-solid\">\n                  <input className=\"form-check-input\" type=\"radio\" value=\"\" id=\"flexRadioChecked\" checked={true} />\n                </div>\n              </div>\n            </div>\n            <div className=\"d-flex row col-3 mb-5 border border-gray-400\" style={{ borderRadius: 10, padding: 5, marginRight: 20, marginLeft: 0 }}>\n              <div className='col-10 d-flex' style={{ flexDirection: 'column' }}>\n                <label style={{ fontWeight: 'bold', fontSize: 12 }}>Shipment</label>\n                <span className='text-gray-600 fw-bold' style={{ fontSize: 10 }}>Kombinasi dengan voucher ongkos kirim</span>\n              </div>\n              <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                <div className=\"form-check form-check-custom form-check-solid\">\n                  <input className=\"form-check-input\" type=\"radio\" value=\"\" id=\"flexRadioChecked\" checked={true} />\n                </div>\n              </div>\n            </div>\n            <div className=\"d-flex row col-3 mb-5 border border-gray-400\" style={{ borderRadius: 10, padding: 5, marginRight: 20, marginLeft: 0 }}>\n              <div className='col-10 d-flex' style={{ flexDirection: 'column' }}>\n                <label style={{ fontWeight: 'bold', fontSize: 12 }}>Cashback</label>\n                <span className='text-gray-600 fw-bold' style={{ fontSize: 10 }}>Kombinasi dengan voucher cashback </span>\n              </div>\n              <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                <div className=\"form-check form-check-custom form-check-solid\">\n                  <input className=\"form-check-input\" type=\"radio\" value=\"\" id=\"flexRadioChecked\" checked={true} />\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  const renderRules = () => {\n    return (\n      <div>\n        <div className='card mb-5'>\n          <div className='row mt-5 mb-5 p-5'>\n            {/* VIA KURIR */}\n            <div className='col-4 row'>\n              <span className='text-gray-800 fw-bold' style={{ fontSize: 14 }}>Choose which rule</span>\n            </div>\n            <div className='col-8' style={{ padding: 0 }}>\n              <span className='text-gray-600 fw-bold'>Via Courier</span>\n            </div>\n\n            <div className='col-4 row'>\n              <div className=\"d-flex row col-7 mb-5 border border-gray-400\" style={{ borderRadius: 8, padding: 10, marginRight: 10, marginLeft: 0 }}>\n                <select className=\"form-select form-select-white mr-5\" aria-label=\"Select example\" style={{ width: '100%', height: 20, padding: 0, paddingRight: 30 }}>\n                  <option value=\"1\">Payment Method</option>\n                  <option value=\"2\">Logistic</option>\n                  <option value=\"3\">Time can be claimed</option>\n                </select>\n              </div>\n              <div className=\"d-flex row col-4 mb-5\" >\n                <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center', marginRight: 10, marginLeft: 20 }}>\n                  <div className=\"form-check form-check-custom form-check-solid\">\n                    <InlineSVG src='/media/icons/setting.svg' />\n                  </div>\n                </div>\n                <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <div className=\"form-check form-check-custom form-check-solid\">\n                    <InlineSVG src='/media/icons/trash.svg' />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className='col-8 row p-0' style={{ marginLeft: 0 }}>\n              <div className=\"d-flex row col-4 mb-5 border border-gray-400\" style={{ borderRadius: 8, padding: 10, marginRight: 20, marginLeft: 0 }}>\n                <div className='col-2 d-flex' style={{ alignItems: 'center' }}>\n                  <img src=\"/media/icons/payment/cod.png\" alt=\"\" className='image-voucher' style={{ width: 20, height: 10 }} />\n                </div>\n                <div className='col-8 d-flex' style={{ alignItems: 'center' }}>\n                  <span className='text-gray-800 fw-bold' style={{ fontSize: 10 }}>Bayar cash di tempat</span>\n                </div>\n                <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <div className=\"form-check form-check-custom form-check-solid\">\n                    <InlineSVG src='/media/icons/close.svg' />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* VIRTUAL */}\n            <div className='col-4 row' />\n            <div className='col-8' style={{ padding: 0 }}>\n              <span className='text-gray-600 fw-bold'>Virtual Account</span>\n            </div>\n\n            <div className='col-4 row' />\n            <div className='col-8 row p-0' style={{ marginLeft: 0 }}>\n              <div className=\"d-flex row col-4 mb-5 border border-gray-400\" style={{ borderRadius: 8, padding: 10, marginRight: 20, marginLeft: 0 }}>\n                <div className='col-2 d-flex' style={{ alignItems: 'center' }}>\n                  <img src=\"/media/icons/payment/cod.png\" alt=\"\" className='image-voucher' style={{ width: 20, height: 10 }} />\n                </div>\n                <div className='col-8 d-flex' style={{ alignItems: 'center' }}>\n                  <span className='text-gray-800 fw-bold' style={{ fontSize: 10 }}>BCA Virtual Account</span>\n                </div>\n                <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <div className=\"form-check form-check-custom form-check-solid\">\n                    <InlineSVG src='/media/icons/close.svg' />\n                  </div>\n                </div>\n              </div>\n              <div className=\"d-flex row col-4 mb-5 border border-gray-400\" style={{ borderRadius: 8, padding: 10, marginRight: 20, marginLeft: 0 }}>\n                <div className='col-2 d-flex' style={{ alignItems: 'center' }}>\n                  <img src=\"/media/icons/payment/cod.png\" alt=\"\" className='image-voucher' style={{ width: 20, height: 10 }} />\n                </div>\n                <div className='col-8 d-flex' style={{ alignItems: 'center' }}>\n                  <span className='text-gray-800 fw-bold' style={{ fontSize: 10 }}>BNI Virtual Account</span>\n                </div>\n                <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <div className=\"form-check form-check-custom form-check-solid\">\n                    <InlineSVG src='/media/icons/close.svg' />\n                  </div>\n                </div>\n              </div>\n              <div className=\"d-flex row col-4 mb-5 border border-gray-400\" style={{ borderRadius: 8, padding: 10, marginRight: 20, marginLeft: 0 }}>\n                <div className='col-2 d-flex' style={{ alignItems: 'center' }}>\n                  <img src=\"/media/icons/payment/cod.png\" alt=\"\" className='image-voucher' style={{ width: 20, height: 10 }} />\n                </div>\n                <div className='col-8 d-flex' style={{ alignItems: 'center' }}>\n                  <span className='text-gray-800 fw-bold' style={{ fontSize: 10 }}>Mandiri Virtual Account</span>\n                </div>\n                <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <div className=\"form-check form-check-custom form-check-solid\">\n                    <InlineSVG src='/media/icons/close.svg' />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Pembayaran Instan */}\n            <div className='col-4 row' />\n            <div className='col-8' style={{ padding: 0 }}>\n              <span className='text-gray-600 fw-bold'>Pembayaran Instan</span>\n            </div>\n\n            <div className='col-4 row' />\n            <div className='col-8 row p-0' style={{ marginLeft: 0 }}>\n              <div className=\"d-flex row col-4 mb-5 border border-gray-400\" style={{ borderRadius: 8, padding: 10, marginRight: 20, marginLeft: 0 }}>\n                <div className='col-2 d-flex' style={{ alignItems: 'center' }}>\n                  <img src=\"/media/icons/payment/cod.png\" alt=\"\" className='image-voucher' style={{ width: 20, height: 10 }} />\n                </div>\n                <div className='col-8 d-flex' style={{ alignItems: 'center' }}>\n                  <span className='text-gray-800 fw-bold' style={{ fontSize: 10 }}>QRIS</span>\n                </div>\n                <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <div className=\"form-check form-check-custom form-check-solid\">\n                    <InlineSVG src='/media/icons/close.svg' />\n                  </div>\n                </div>\n              </div>\n              <div className=\"d-flex row col-4 mb-5 border border-gray-400\" style={{ borderRadius: 8, padding: 10, marginRight: 20, marginLeft: 0 }}>\n                <div className='col-2 d-flex' style={{ alignItems: 'center' }}>\n                  <img src=\"/media/icons/payment/cod.png\" alt=\"\" className='image-voucher' style={{ width: 20, height: 10 }} />\n                </div>\n                <div className='col-8 d-flex' style={{ alignItems: 'center' }}>\n                  <span className='text-gray-800 fw-bold' style={{ fontSize: 10 }}>OVO</span>\n                </div>\n                <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <div className=\"form-check form-check-custom form-check-solid\">\n                    <InlineSVG src='/media/icons/close.svg' />\n                  </div>\n                </div>\n              </div>\n              <div className=\"d-flex row col-4 mb-5 border border-gray-400\" style={{ borderRadius: 8, padding: 10, marginRight: 20, marginLeft: 0 }}>\n                <div className='col-2 d-flex' style={{ alignItems: 'center' }}>\n                  <img src=\"/media/icons/payment/cod.png\" alt=\"\" className='image-voucher' style={{ width: 20, height: 10 }} />\n                </div>\n                <div className='col-8 d-flex' style={{ alignItems: 'center' }}>\n                  <span className='text-gray-800 fw-bold' style={{ fontSize: 10 }}>DANA</span>\n                </div>\n                <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <div className=\"form-check form-check-custom form-check-solid\">\n                    <InlineSVG src='/media/icons/close.svg' />\n                  </div>\n                </div>\n              </div>\n              <div className=\"d-flex row col-4 mb-5 border border-gray-400\" style={{ borderRadius: 8, padding: 10, marginRight: 20, marginLeft: 0 }}>\n                <div className='col-2 d-flex' style={{ alignItems: 'center' }}>\n                  <img src=\"/media/icons/payment/cod.png\" alt=\"\" className='image-voucher' style={{ width: 20, height: 10 }} />\n                </div>\n                <div className='col-8 d-flex' style={{ alignItems: 'center' }}>\n                  <span className='text-gray-800 fw-bold' style={{ fontSize: 10 }}>Link Aja</span>\n                </div>\n                <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <div className=\"form-check form-check-custom form-check-solid\">\n                    <InlineSVG src='/media/icons/close.svg' />\n                  </div>\n                </div>\n              </div>\n              <div className=\"d-flex row col-4 mb-5 border border-gray-400\" style={{ borderRadius: 8, padding: 10, marginRight: 20, marginLeft: 0 }}>\n                <div className='col-2 d-flex' style={{ alignItems: 'center' }}>\n                  <img src=\"/media/icons/payment/cod.png\" alt=\"\" className='image-voucher' style={{ width: 20, height: 10 }} />\n                </div>\n                <div className='col-8 d-flex' style={{ alignItems: 'center' }}>\n                  <span className='text-gray-800 fw-bold' style={{ fontSize: 10 }}>Shopee Pay</span>\n                </div>\n                <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <div className=\"form-check form-check-custom form-check-solid\">\n                    <InlineSVG src='/media/icons/close.svg' />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n        <div className='card mb-5'>\n          <div className='row mt-5 mb-5 p-5'>\n            <div className='col-4 row'>\n              <span className='text-gray-800 fw-bold' style={{ fontSize: 14 }}>Choose which rule</span>\n            </div>\n            <div className='col-8' style={{ padding: 0 }}>\n              <span className='text-gray-600 fw-bold'>Instan</span>\n            </div>\n\n            <div className='col-4 row'>\n              <div className=\"d-flex row col-7 mb-5 border border-gray-400\" style={{ borderRadius: 8, padding: 10, marginRight: 10, marginLeft: 0 }}>\n                <select className=\"form-select form-select-white mr-5\" aria-label=\"Select example\" style={{ width: '100%', height: 20, padding: 0, paddingRight: 30 }}>\n                  <option value=\"1\">Logistic</option>\n                  <option value=\"2\">Payment Method</option>\n                  <option value=\"3\">Time can be claimed</option>\n                </select>\n              </div>\n              <div className=\"d-flex row col-4 mb-5\" >\n                <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center', marginRight: 10, marginLeft: 20 }}>\n                  <div className=\"form-check form-check-custom form-check-solid\">\n                    <InlineSVG src='/media/icons/setting.svg' />\n                  </div>\n                </div>\n                <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <div className=\"form-check form-check-custom form-check-solid\">\n                    <InlineSVG src='/media/icons/trash.svg' />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className='col-8 row p-0' style={{ marginLeft: 0 }}>\n              <div className=\"d-flex row col-4 mb-5 border border-gray-400\" style={{ borderRadius: 8, padding: 10, marginRight: 20, marginLeft: 0 }}>\n                <div className='col-2 d-flex' style={{ alignItems: 'center' }}>\n                  <img src=\"/media/icons/payment/cod.png\" alt=\"\" className='image-voucher' style={{ width: 20, height: 10 }} />\n                </div>\n                <div className='col-8 d-flex' style={{ alignItems: 'center' }}>\n                  <span className='text-gray-800 fw-bold' style={{ fontSize: 10 }}>LOG by eDOT</span>\n                </div>\n                <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <div className=\"form-check form-check-custom form-check-solid\">\n                    <InlineSVG src='/media/icons/close.svg' />\n                  </div>\n                </div>\n              </div>\n              <div className=\"d-flex row col-4 mb-5 border border-gray-400\" style={{ borderRadius: 8, padding: 10, marginRight: 20, marginLeft: 0 }}>\n                <div className='col-2 d-flex' style={{ alignItems: 'center' }}>\n                  <img src=\"/media/icons/payment/cod.png\" alt=\"\" className='image-voucher' style={{ width: 20, height: 10 }} />\n                </div>\n                <div className='col-8 d-flex' style={{ alignItems: 'center' }}>\n                  <span className='text-gray-800 fw-bold' style={{ fontSize: 10 }}>Gojek</span>\n                </div>\n                <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <div className=\"form-check form-check-custom form-check-solid\">\n                    <InlineSVG src='/media/icons/close.svg' />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Next Day */}\n            <div className='col-4 row' />\n            <div className='col-8' style={{ padding: 0 }}>\n              <span className='text-gray-600 fw-bold'>Next Day</span>\n            </div>\n\n            <div className='col-4 row' />\n            <div className='col-8 row p-0' style={{ marginLeft: 0 }}>\n              <div className=\"d-flex row col-4 mb-5 border border-gray-400\" style={{ borderRadius: 8, padding: 10, marginRight: 20, marginLeft: 0 }}>\n                <div className='col-2 d-flex' style={{ alignItems: 'center' }}>\n                  <img src=\"/media/icons/payment/cod.png\" alt=\"\" className='image-voucher' style={{ width: 20, height: 10 }} />\n                </div>\n                <div className='col-8 d-flex' style={{ alignItems: 'center' }}>\n                  <span className='text-gray-800 fw-bold' style={{ fontSize: 10 }}>AnterAja</span>\n                </div>\n                <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <div className=\"form-check form-check-custom form-check-solid\">\n                    <InlineSVG src='/media/icons/close.svg' />\n                  </div>\n                </div>\n              </div>\n              <div className=\"d-flex row col-4 mb-5 border border-gray-400\" style={{ borderRadius: 8, padding: 10, marginRight: 20, marginLeft: 0 }}>\n                <div className='col-2 d-flex' style={{ alignItems: 'center' }}>\n                  <img src=\"/media/icons/payment/cod.png\" alt=\"\" className='image-voucher' style={{ width: 20, height: 10 }} />\n                </div>\n                <div className='col-8 d-flex' style={{ alignItems: 'center' }}>\n                  <span className='text-gray-800 fw-bold' style={{ fontSize: 10 }}>JNE</span>\n                </div>\n                <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <div className=\"form-check form-check-custom form-check-solid\">\n                    <InlineSVG src='/media/icons/close.svg' />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Reguler */}\n            <div className='col-4 row' />\n            <div className='col-8' style={{ padding: 0 }}>\n              <span className='text-gray-600 fw-bold'>Reguler</span>\n            </div>\n\n            <div className='col-4 row' />\n            <div className='col-8 row p-0' style={{ marginLeft: 0 }}>\n              <div className=\"d-flex row col-4 mb-5 border border-gray-400\" style={{ borderRadius: 8, padding: 10, marginRight: 20, marginLeft: 0 }}>\n                <div className='col-2 d-flex' style={{ alignItems: 'center' }}>\n                  <img src=\"/media/icons/payment/cod.png\" alt=\"\" className='image-voucher' style={{ width: 20, height: 10 }} />\n                </div>\n                <div className='col-8 d-flex' style={{ alignItems: 'center' }}>\n                  <span className='text-gray-800 fw-bold' style={{ fontSize: 10 }}>AnterAja</span>\n                </div>\n                <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <div className=\"form-check form-check-custom form-check-solid\">\n                    <InlineSVG src='/media/icons/close.svg' />\n                  </div>\n                </div>\n              </div>\n              <div className=\"d-flex row col-4 mb-5 border border-gray-400\" style={{ borderRadius: 8, padding: 10, marginRight: 20, marginLeft: 0 }}>\n                <div className='col-2 d-flex' style={{ alignItems: 'center' }}>\n                  <img src=\"/media/icons/payment/cod.png\" alt=\"\" className='image-voucher' style={{ width: 20, height: 10 }} />\n                </div>\n                <div className='col-8 d-flex' style={{ alignItems: 'center' }}>\n                  <span className='text-gray-800 fw-bold' style={{ fontSize: 10 }}>JNE Reg</span>\n                </div>\n                <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <div className=\"form-check form-check-custom form-check-solid\">\n                    <InlineSVG src='/media/icons/close.svg' />\n                  </div>\n                </div>\n              </div>\n              <div className=\"d-flex row col-4 mb-5 border border-gray-400\" style={{ borderRadius: 8, padding: 10, marginRight: 20, marginLeft: 0 }}>\n                <div className='col-2 d-flex' style={{ alignItems: 'center' }}>\n                  <img src=\"/media/icons/payment/cod.png\" alt=\"\" className='image-voucher' style={{ width: 20, height: 10 }} />\n                </div>\n                <div className='col-8 d-flex' style={{ alignItems: 'center' }}>\n                  <span className='text-gray-800 fw-bold' style={{ fontSize: 10 }}>J&T</span>\n                </div>\n                <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <div className=\"form-check form-check-custom form-check-solid\">\n                    <InlineSVG src='/media/icons/close.svg' />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Kargo */}\n            <div className='col-4 row' />\n            <div className='col-8' style={{ padding: 0 }}>\n              <span className='text-gray-600 fw-bold'>Kargo</span>\n            </div>\n\n            <div className='col-4 row' />\n            <div className='col-8 row p-0' style={{ marginLeft: 0 }}>\n              <div className=\"d-flex row col-4 mb-5 border border-gray-400\" style={{ borderRadius: 8, padding: 10, marginRight: 20, marginLeft: 0 }}>\n                <div className='col-2 d-flex' style={{ alignItems: 'center' }}>\n                  <img src=\"/media/icons/payment/cod.png\" alt=\"\" className='image-voucher' style={{ width: 20, height: 10 }} />\n                </div>\n                <div className='col-8 d-flex' style={{ alignItems: 'center' }}>\n                  <span className='text-gray-800 fw-bold' style={{ fontSize: 10 }}>AnterAja</span>\n                </div>\n                <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <div className=\"form-check form-check-custom form-check-solid\">\n                    <InlineSVG src='/media/icons/close.svg' />\n                  </div>\n                </div>\n              </div>\n              <div className=\"d-flex row col-4 mb-5 border border-gray-400\" style={{ borderRadius: 8, padding: 10, marginRight: 20, marginLeft: 0 }}>\n                <div className='col-2 d-flex' style={{ alignItems: 'center' }}>\n                  <img src=\"/media/icons/payment/cod.png\" alt=\"\" className='image-voucher' style={{ width: 20, height: 10 }} />\n                </div>\n                <div className='col-8 d-flex' style={{ alignItems: 'center' }}>\n                  <span className='text-gray-800 fw-bold' style={{ fontSize: 10 }}>JNE</span>\n                </div>\n                <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <div className=\"form-check form-check-custom form-check-solid\">\n                    <InlineSVG src='/media/icons/close.svg' />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n        <div className='card mb-5'>\n          <div className='row mt-5 mb-5 p-5'>\n            <div className='col-4 row'>\n              <span className='text-gray-800 fw-bold' style={{ fontSize: 14 }}>Choose which rule</span>\n              {/* </div> */}\n              {/* <div className='col-8' style={{ padding: 0 }}>\n              <span className='text-gray-600 fw-bold'>Instan</span>\n            </div> */}\n\n              {/* <div className='col-4 row'> */}\n              <div className=\"d-flex row col-7 mb-5 border border-gray-400\" style={{ borderRadius: 8, padding: 10, marginRight: 10, marginLeft: 0 }}>\n                <select className=\"form-select form-select-white mr-5\" aria-label=\"Select example\" style={{ width: '100%', height: 20, padding: 0, paddingRight: 30 }}>\n                  <option value=\"1\">Time can be claimed</option>\n                  <option value=\"2\">Payment Method</option>\n                  <option value=\"3\">Logistic</option>\n                </select>\n              </div>\n              <div className=\"d-flex row col-4 mb-5\" >\n                <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center', marginRight: 10, marginLeft: 20 }}>\n                  <div className=\"form-check form-check-custom form-check-solid\">\n                    <InlineSVG src='/media/icons/setting.svg' />\n                  </div>\n                </div>\n                <div className='col-2 d-flex' style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <div className=\"form-check form-check-custom form-check-solid\">\n                    <InlineSVG src='/media/icons/trash.svg' />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className='col-8 row p-0'>\n              <div className='col-4'>\n                <span className='text-gray-600 fw-bold'>Instan</span>\n                <div className=\"d-flex row col-12 mb-5 border border-gray-400\" style={{ borderRadius: 8, padding: 10, marginRight: 10, marginLeft: 0 }}>\n                  <select className=\"form-select form-select-white mr-5\" aria-label=\"Select example\" style={{ width: '100%', height: 20, padding: 0, paddingRight: 30 }}>\n                    <option value=\"1\">Rush Hour</option>\n                  </select>\n                </div>\n              </div>\n\n              <div className='col-3'>\n                <span className='text-gray-600 fw-bold'>Instan</span>\n                <div className=\"input-group\">\n                  <DatePicker\n                    className=\"form-control\"\n                    selected={startTime}\n                    onChange={(time: any) => setStartTime(time)}\n                    showTimeSelect\n                    showTimeSelectOnly\n                    timeIntervals={15}\n                    timeCaption=\"Time\"\n                    dateFormat=\"h:mm aa\"\n                  />\n                  <div className=\"custom-content-input\">\n                    <InlineSVG src=\"/media/icons/time.svg\" />\n                  </div>\n                </div>\n              </div>\n\n              <div className='col-3'>\n                <span className='text-gray-600 fw-bold'>Instan</span>\n                <div className=\"input-group\">\n                  <DatePicker\n                    className=\"form-control\"\n                    selected={endTime}\n                    onChange={(time: any) => setEndTime(time)}\n                    showTimeSelect\n                    showTimeSelectOnly\n                    timeIntervals={15}\n                    timeCaption=\"Time\"\n                    dateFormat=\"h:mm aa\"\n                  />\n                  <div className=\"custom-content-input\">\n                    <InlineSVG src=\"/media/icons/time.svg\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n        <div className='card mb-5'>\n          <div className='row mt-5 mb-5 p-5'>\n            <div className='col-12 border-grey-300 border-dashed p-2 d-flex' style={{ borderRadius: 2, alignItems: 'center', justifyContent: 'center' }}>\n              <span className='text-secondary'>Add New Rule</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  return (\n    <div className='body-edit-campaign'>\n      <PageTitle breadcrumbs={breadcrumbs}>{pageTitle}</PageTitle>\n      {/* <div className='card-body'> */}\n      <AlertSuccess message={success} handleClose={() => setSuccess('')} />\n      <form className='form w-100' onSubmit={formik.handleSubmit} noValidate>\n        <div className='mb-10 row'>\n          <div className='card mb-5 pt-5' style={{ paddingLeft: 25 }}>\n            <div className='fv-row'>\n              <div className='mb-4'>\n                <h2>Diskon April Seru 20%</h2>\n              </div>\n              <div className='d-flex'>\n                <span className='mt-2 text-gray-600'>Voucher Status</span>\n                &nbsp;&nbsp;&nbsp;&nbsp;\n                <div className='d-flex border p-2 status-badge' style={{ display: 'inline-block' }}>\n                  <div className='d-flex' style={{ width: 20, alignItems: 'center', justifyContent: 'center', marginLeft: 5 }}>\n                    <div className='circle' style={{ width: 10, height: 10, marginRight: 5 }} />\n                  </div>\n                  {/* <span className=\"text-success\">\n                    Active\n                  </span> */}\n                  <select className=\"form-select form-select-white mr-5\" aria-label=\"Select example\" style={{ width: '100%', height: 20, padding: 0, paddingRight: 30, color: '#01874E' }}>\n                    <option value=\"1\">Active</option>\n                    <option value=\"2\">Inactive</option>\n                  </select>\n                </div>\n              </div>\n              <div className='d-flex align-items-center justify-content-between margin-tab-modal' id='navbar'>\n                <ul className=\"nav\">\n                  {values.map((val, index) => (\n                    //@ts-ignore\n                    <li key={index} className=\"nav-item\" onClick={() => setActiveId(val.id)}>\n                      <NavLink exact activeClassName={activeId === val.id ? \"nav-active-modal\" : \"nav-link text-gray-600\"} to='#' >{val.text}</NavLink>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n          {\n            activeId === 1 ? <CampaignInfoForm /> :\n              activeId === 2 ? <DiscountUsageForm /> :\n                activeId === 3 ? renderRules() : null\n          }\n        </div>\n\n        <div className='card border-top pt-10 cardfooter-btns'>\n          <button\n            type='button'\n            className={`btn btn-lg btn-light fw-bolder me-4`}\n            onClick={() => history.goBack()}\n            tabIndex={8}\n          >\n            Cancel\n          </button>\n          <button\n            type='submit'\n            className='btn btn-lg btn-secondary fw-bolder me-4'\n            disabled={formik.isSubmitting}\n            tabIndex={9}\n          >\n            <span className='indicator-label'>Save</span>\n            {formik.isSubmitting && (\n              <span className='indicator-progress'>\n                Mohon Tunggu...\n                <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\n              </span>\n            )}\n          </button>\n        </div>\n      </form>\n      {/* </div> */}\n    </div>\n  )\n}\n","/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/create-app/CreateApp.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/user-menu/UserMenu.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/activity-drawer/ActivityDrawer.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/helpers/dataExamples.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/helpers/RouterHelpers.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/redux/VoucherCRUD.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/hooks/pagination-hook.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/hooks/debounce-hook.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/DateRangePicker.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BusinessUnit/redux/BusinessUnitCRUD.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherUsage/redux/MasterVoucherUsageCRUD.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/components/PreviewVoucherModal.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/components/ApproveCampaignModal.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/components/DeclineCampaignModal.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/AlertSuccess.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/CustomReactSelect.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/Pagination.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/helpers/components/KTSVG.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BusinessUnit/components/DeleteMasterBusinessUnitModal.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/InputPhone.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/SearchComponent.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/MenuComponent.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/_PasswordMeterComponent.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/_PlaceComponent.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/_ScrollTopComponent.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/_StickyComponent.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/_StepperComponent.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/_ToggleComponent.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/utils/hook-utils.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/activity/Item3.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/activity/Item7.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/activity/Item8.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/activity/Item5.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/activity/Item2.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/activity/Item4.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/activity/Item6.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/content/activity/Item1.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/helpers/AssetHelpers.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/page/EditVoucher/CampaignInfoForm.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/page/AddVoucher/DiscountUsageForm.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/page/AddVoucher/RulesForm.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/page/EditVoucher/DiscountUsageForm.tsx",["1068","1069","1070","1071","1072","1073","1074","1075"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {\n  useState,\n  // useContext,\n} from 'react';\n\n// import InputMoney from 'src/app/components/InputMoney';\nimport InputPercentage from 'src/app/components/InputPercentage';\nimport RadioButtonCard from 'src/app/components/RadioButtonCard';\nimport CheckboxSwitch from 'src/app/components/CheckboxSwitch';\nimport LabelAlert from 'src/app/components/LabelAlert';\nimport InlineSVG from 'react-inlinesvg/esm';\n// import { FormContext } from './index';\n\nexport const DiscountUsageForm = () => {\n  const [minTransaction, setMinTransaction] = useState('');\n  const [maxTransaction, setMaxTransaction] = useState('');\n  const [discount, setDiscount] = useState('');\n  const [maxDiscount, setMaxDiscount] = useState('');\n  const [discountMerchantCovered, setDiscountMerchantCovered] = useState('');\n  const [discountCompanyCovered, setDiscountCompanyCovered] = useState('');\n  const [usageHowTo, setUsageHowTo] = useState('');\n  const [usageVoucher, setUsageVoucher] = useState('');\n  const [usageTransaction, setUsageTransaction] = useState('');\n  const [OTPRequired, setOTPRequired] = useState(false);\n  const [voucherCombine, setVoucherCombine] = useState(false);\n  const [voucherCombineType, setVoucherCombineType] = useState('');\n\n  // Use for passing form values\n  // const contextState = useContext(FormContext);\n\n  const renderSectionDiscount = () => (\n    <div className=\"card mb-4 py-12 px-8\">\n      <div className=\"d-flex\">\n        <div className='col-2'>\n          <span className='text-gray-800 fw-bold' style={{ fontSize: 14 }}>Discount</span> <br />\n          <span className='text-gray-600 fw-bold' style={{ fontSize: 12 }}>Maksimal 2 strata</span>\n        </div>\n        <div className=\"col-9\">\n          <div className=\"d-flex gap-2\">\n            <div className=\"col-2 form-check form-check-custom input-group-sm\" style={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n              <label className='text-gray-600 fw-bold' style={{ fontSize: 10 }}>\n                Minimum Transaction\n              </label>\n              <div className=\"input-group mb-5\">\n                <span className=\"input-group-text\" id=\"basic-addon1\" style={{ fontSize: 10 }}>Rp</span>\n                <input type=\"text\" className=\"form-control\" placeholder=\"\" aria-label=\"\" aria-describedby=\"basic-addon1\" />\n              </div>\n            </div>\n            <div className=\"col-3 form-check form-check-custom input-group-sm\" style={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n              <label className='text-gray-600 fw-bold' style={{ fontSize: 10 }}>\n                Maximum Transaction (Optional)\n              </label>\n              <div className=\"input-group mb-5\">\n                <span className=\"input-group-text\" id=\"basic-addon1\" style={{ fontSize: 10 }}>Rp</span>\n                <input type=\"text\" className=\"form-control\" placeholder=\"\" aria-label=\"\" aria-describedby=\"basic-addon1\" />\n              </div>\n            </div>\n            <div className=\"col-3 form-check form-check-custom input-group-sm\" style={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n              <label className='text-gray-600 fw-bold' style={{ fontSize: 10 }}>\n                Discount\n              </label>\n              <div className=\"input-group mb-5\">\n                <span className=\"input-group-text\" id=\"basic-addon1\" style={{ fontSize: 10 }}>Rp</span>\n                <input type=\"text\" className=\"form-control\" placeholder=\"\" aria-label=\"\" aria-describedby=\"basic-addon1\" />\n                <select className=\"form-select form-select-solid\" aria-label=\"Select example\">\n                <option value=\"1\">%</option>\n                  <option value=\"2\">Fix</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"col-4 form-check form-check-custom input-group-sm\" style={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n              <label className='text-gray-600 fw-bold' style={{ fontSize: 10 }}>\n                Maximum Discount (Optional)\n              </label>\n              <div className=\"input-group mb-5\">\n                <span className=\"input-group-text\" id=\"basic-addon1\" style={{ fontSize: 10 }}>Rp</span>\n                <input type=\"text\" className=\"form-control\" placeholder=\"\" aria-label=\"\" aria-describedby=\"basic-addon1\" />\n                <select className=\"form-select form-select-solid\" aria-label=\"Select example\">\n                  <option value=\"1\">%</option>\n                  <option value=\"2\">Fix</option>\n                </select>\n              </div>\n            </div>\n          </div>\n          {/* <div className=\"dashed-button mt-4\">\n            <p className=\"m-0\">Add Strata Discount</p>\n          </div> */}\n        </div>\n        <div className='col-1 d-flex align-items-center justify-content-center' style={{marginRight: 0}}>\n          <InlineSVG\n            src='/media/icons/trash.svg'\n            className='cursor-pointer'\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderSectionCoveredBy = () => (\n    <div className=\"card mb-4 py-12 px-8\">\n      <div className=\"d-flex\">\n        <label className=\"col-2 text-gray-800 fw-bold fs-6\">Covered By</label>\n        <div className=\"d-flex col-10 gap-2\">\n          <div className=\"col-4\">\n            <p className=\"m-0\"><b>Seller/Merchant</b></p>\n            <small className=\"text-gray-600\">Biaya diskon ditanggung oleh Seller/Merchant</small>\n            <InputPercentage\n              onChangeValue={(value) => setDiscountMerchantCovered(value)}\n              value={discountMerchantCovered}\n              className=\"col-3 form-control\"\n            />\n          </div>\n          <div className=\"col-4\">\n            <p className=\"m-0\"><b>eDOT</b></p>\n            <small className=\"text-gray-600\">Biaya diskon ditanggung oleh pihak eDOT</small>\n            <InputPercentage\n              onChangeValue={(value) => setDiscountCompanyCovered(value)}\n              value={discountCompanyCovered}\n              className=\"col-3 form-control\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderSectionVoucherUsage = () => (\n    <div className=\"card mb-4 py-12 px-8\">\n      <div className=\"d-flex\">\n        <label className=\"col-2 text-gray-800 fw-bold fs-6\">Voucher Usage</label>\n        <div className=\"col-10\">\n          <div className=\"mb-8\">\n            <p>How to Use</p>\n            <div className=\"d-flex col-12 gap-2 align-items-stretch\">\n              <div className=\"d-flex col-5\">\n                <RadioButtonCard\n                  label=\"Auto Apply\"\n                  description=\"Jika T&C memenuhi syarat maka voucher secara otomatis terapply dan bisa diuncheck dan bisa memilih voucher lain yang lebih menguntungkan\"\n                  checked={usageHowTo === 'auto'}\n                  onClick={() => setUsageHowTo('auto')}\n                />\n              </div>\n              <div className=\"d-flex col-5\">\n                <RadioButtonCard\n                  label=\"Manually\"\n                  description=\"User harus memilih sendiri voucher yang ingin dia gunakan\"\n                  checked={usageHowTo === 'manual'}\n                  onClick={() => setUsageHowTo('manual')}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"mb-8\">\n            <p>Voucher Type</p>\n            <div className=\"d-flex col-11 gap-2 align-items-stretch\">\n              <div className=\"d-flex col-4\">\n                <RadioButtonCard\n                  label=\"Shopping\"\n                  description=\"Diskon berlaku untuk pembelian produk\"\n                  checked={usageVoucher === 'shopping'}\n                  onClick={() => setUsageVoucher('shopping')}\n                />\n              </div>\n              <div className=\"d-flex col-4\">\n                <RadioButtonCard\n                  label=\"Shipment\"\n                  description=\"Berlaku untuk potongan ongkos kirim\"\n                  checked={usageVoucher === 'shipment'}\n                  onClick={() => setUsageVoucher('shipment')}\n                />\n              </div>\n              <div className=\"d-flex col-4\">\n                <RadioButtonCard\n                  label=\"Cashback\"\n                  description=\"Berlaku sebagai cashback\"\n                  checked={usageVoucher === 'cashback'}\n                  onClick={() => setUsageVoucher('cashback')}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"mb-12\">\n            <p>Transaction Type</p>\n            <div className=\"d-flex col-11 gap-2 align-items-stretch\">\n              <div className=\"d-flex col-4\">\n                <RadioButtonCard\n                  label=\"All Transaction\"\n                  description=\"Diskon berlaku untuk semua transaksi\"\n                  checked={usageTransaction === 'all'}\n                  onClick={() => setUsageTransaction('all')}\n                />\n              </div>\n              <div className=\"d-flex col-4\">\n                <RadioButtonCard\n                  label=\"First Transaction\"\n                  description=\"Diskon hanya berlaku untuk transaksi pertama\"\n                  checked={usageTransaction === 'first'}\n                  onClick={() => setUsageTransaction('first')}\n                />\n              </div>\n              <div className=\"d-flex col-4\">\n                <RadioButtonCard\n                  label=\"Second and Following\"\n                  description=\"Diskon berlaku untuk transaksi kedua dan berikutnya\"\n                  checked={usageTransaction === 'second'}\n                  onClick={() => setUsageTransaction('second')}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"d-flex col-12\">\n            <div className=\"col-5\">\n              <CheckboxSwitch\n                label=\"OTP Validation Required\"\n                wrapperClass=\"flex-row-reverse w-100 mb-2\"\n                labelClass=\"m-0 fw-bold flex-fill\"\n                checked={OTPRequired}\n                onClick={() => setOTPRequired(!OTPRequired)}\n              />\n              <p className=\"text-gray-600 mb-6 pe-4\">\n                Jika aktif, maka untuk menggunakan voucher akan tampil permintaan OTP\n              </p>\n            </div>\n            {OTPRequired && (\n              <div className=\"col-6\">\n                <LabelAlert\n                  message=\"Akan ada permintaan OTP untuk menggunakan voucher\"\n                  className=\"ms-4\"\n                  alertType=\"success\"\n                />\n              </div>\n            )}\n          </div>\n          <div className=\"col-12\">\n            <div className=\"col-5\">\n              <CheckboxSwitch\n                label=\"Allow Combination with Other Voucher\"\n                wrapperClass=\"flex-row-reverse w-100 mb-2\"\n                labelClass=\"m-0 fw-bold flex-fill\"\n                checked={voucherCombine}\n                onClick={() => setVoucherCombine(!voucherCombine)}\n              />\n              {voucherCombine && (\n                <p className=\"text-gray-600 mb-6 pe-4\">\n                  Pilih jenis voucher yang bisa dipakai bersama voucher ini\n                </p>\n              )}\n            </div>\n          </div>\n\n          {voucherCombine && (\n            <div className=\"mb-12\">\n              <p>Transaction Type</p>\n              <div className=\"d-flex col-11 gap-2 align-items-stretch\">\n                <div className=\"d-flex col-4\">\n                  <RadioButtonCard\n                    label=\"Shopping\"\n                    description=\"Kombinasi dengan voucher pembelian produk\"\n                    checked={voucherCombineType === 'shopping'}\n                    onClick={() => setVoucherCombineType('shopping')}\n                  />\n                </div>\n                <div className=\"d-flex col-4\">\n                  <RadioButtonCard\n                    label=\"Shipment\"\n                    description=\"Kombinasi dengan voucher ongkos kirim\"\n                    checked={voucherCombineType === 'shipment'}\n                    onClick={() => setVoucherCombineType('shipment')}\n                  />\n                </div>\n                <div className=\"d-flex col-4\">\n                  <RadioButtonCard\n                    label=\"Cashback\"\n                    description=\"Kombinasi dengan voucher cashback\"\n                    checked={voucherCombineType === 'cashback'}\n                    onClick={() => setVoucherCombineType('cashback')}\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <div className=\"mb-10 row\">\n        {renderSectionDiscount()}\n        {renderSectionCoveredBy()}\n        {renderSectionVoucherUsage()}\n      </div>\n    </>\n  )\n}\n","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/page/AddVoucher/CampaignInfoForm.tsx",["1076","1077","1078","1079","1080","1081","1082"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {\n  useState,\n  ChangeEvent,\n  HTMLProps,\n  useEffect,\n  useContext,\n} from 'react';\nimport InlineSVG from 'react-inlinesvg/esm';\n//@ts-ignore\nimport DatePicker from \"react-datepicker\";\n//@ts-ignore\n\nimport InputRadio from 'src/app/components/InputRadio';\nimport InputText from 'src/app/components/InputText';\nimport InputNumber from 'src/app/components/InputNumber';\nimport TextEditor from 'src/app/components/TextEditor';\nimport CheckboxSwitch from 'src/app/components/CheckboxSwitch';\nimport LabelAlert from 'src/app/components/LabelAlert';\nimport InputCheckBox from 'src/app/components/InputCheckBox';\nimport ImageDropZone from 'src/app/components/ImageDropZone';\nimport Select from 'react-select';\nimport TargetUserModal from '../../components/TargetUserModal';\nimport { FormContext } from '.';\nimport moment from 'moment';\nimport { generateVoucher } from '../../redux/VoucherCRUD';\nimport { getErrorMessage } from 'src/app/utils/api-utils';\nimport { useHeaderToast } from 'src/app/components/ToastComponent';\nvar dragula = require('react-dragula');\n\n\ninterface CampaignInfoFormProps extends HTMLProps<HTMLInputElement> {\n  nextStep?: (value: any) => void\n}\n\nexport const CampaignInfoForm = (props: CampaignInfoFormProps) => {\n  const [voucherCode, setVoucherCode] = useState('');\n  const [voucherQuotaTotal, setVoucherQuotaTotal] = useState('');\n  const [voucherQuotaEach, setVoucherQuotaEach] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [startTime, setStartTime] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [endTime, setEndTime] = useState('');\n  const [chosenUser, setChosenUser] = useState({ value: 'All User', label: 'All User' });\n  const [showTargetUserModal, setShowTargetUserModal] = useState(false)\n  const [handleTargetUserData, setHandleTargetUserData] = useState<any>(null)\n  const [targetUser, setTargetUser] = useState([\n    {\n      id: 0,\n      name: 'Name user',\n      phone: '0821548625168',\n    }\n  ]);\n\n  const options = [\n    { value: 'All User', label: 'All User' },\n    { value: 'specific', label: 'Specific User' },\n    { value: 'existing', label: 'Existing User' },\n  ];\n\n  const { addPageToasts } = useHeaderToast()\n\n  // Use for passing form values\n  const { voucherForm, setVoucherForm } = useContext(FormContext);\n\n  const renderSectionSelectPlatform = () => (\n    <div className=\"card mb-4 py-12 px-8\">\n      <div className=\"d-flex\">\n        <label className=\"col-2 text-gray-800 fw-bold fs-6\">Select Platform</label>\n        <InputRadio\n          label=\"SHOP\"\n          //@ts-ignore\n          checked={voucherForm?.bu_id === 4}\n          onClick={() => setVoucherForm({\n            ...voucherForm,\n            bu_id: 4\n          })}\n          wrapperClass=\"col-2\"\n        />\n        <InputRadio\n          label=\"FOOD\"\n          //@ts-ignore\n          checked={voucherForm?.bu_id === 2}\n          onClick={() => setVoucherForm({\n            ...voucherForm,\n            bu_id: 2\n          })}\n          wrapperClass=\"col-2\"\n        />\n      </div>\n    </div>\n  );\n\n  const renderSectionCampaignType = () => (\n    <div className=\"card mb-4 py-12 px-8\">\n      <div className=\"d-flex\">\n        <label className=\"col-2 text-gray-800 fw-bold fs-6\">Campaign Type</label>\n        <InputRadio\n          label=\"Voucher\"\n          //@ts-ignore\n          checked={voucherForm?.campaigntype_id === 1}\n          onClick={() => setVoucherForm({\n            ...voucherForm,\n            campaigntype_id: 1\n          })}\n          wrapperClass=\"col-2\"\n        />\n        <InputRadio\n          label=\"Discount\"\n          //@ts-ignore\n          checked={voucherForm?.campaigntype_id === 2}\n          onClick={() => setVoucherForm({\n            ...voucherForm,\n            campaigntype_id: 2\n          })}\n          wrapperClass=\"col-2\"\n        />\n      </div>\n    </div>\n  );\n\n  const renderSectionIdentification = () => (\n    <div className=\"card mb-4 p-8\">\n      <div className=\"d-flex\">\n        <label className=\"col-2 text-gray-800 fw-bold fs-6\">Identification</label>\n        <div className=\"col-8\">\n          <div className=\"mb-8\">\n            <InputText\n              label=\"Campaign Name\"\n              //@ts-ignore\n              value={voucherForm?.campaign_name}\n              onChange={(e: ChangeEvent<HTMLInputElement>) => setVoucherForm({\n                ...voucherForm,\n                campaign_name: e.target.value\n              })}\n            />\n          </div>\n\n          <div className=\"mb-8\">\n            <TextEditor\n              label=\"Terms & Condition\"\n              editorHeight={200}\n              //@ts-ignore\n              value={voucherForm?.campaign_term}\n              onChange={(e) => setVoucherForm({\n                ...voucherForm,\n                campaign_term: e\n              })}\n            />\n          </div>\n\n          <div className=\"d-flex gap-3 mb-8\">\n            <div>\n              <InputNumber\n                label=\"Total Voucher Quota\"\n                //@ts-ignore\n                value={voucherForm.voucher_quota}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => setVoucherForm({\n                  ...voucherForm,\n                  voucher_quota: e.target.value\n                })}\n              />\n            </div>\n            <div>\n              <InputNumber\n                label=\"Quota for each User\"\n                //@ts-ignore\n                value={voucherForm.voucher_quota_user}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => setVoucherForm({\n                  ...voucherForm,\n                  voucher_quota_user: e.target.value\n                })}\n              />\n            </div>\n          </div>\n\n          <div className=\"col-8 pe-10\">\n            <div className=\"d-flex mb-2\">\n              <CheckboxSwitch\n                label=\"Display Voucher\"\n                wrapperClass=\"flex-row-reverse w-100\"\n                labelClass=\"m-0 fw-bold flex-fill\"\n                //@ts-ignore\n                checked={voucherForm?.display_voucher}\n                onClick={() => setVoucherForm({\n                  ...voucherForm,\n                  //@ts-ignore\n                  display_voucher: !voucherForm?.display_voucher\n                })}\n              />\n            </div>\n            <p className=\"text-gray-600 fs-7\">\n              Matikan jika voucher tidak ingin tampil di platform. Kode voucher akan tetap bisa dipakai.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderSectionVoucherCode = () => (\n    <div className=\"card mb-4 py-12 px-8\">\n      <div className=\"d-flex\">\n        <label className=\"col-2 text-gray-800 fw-bold fs-6\">Voucher Code</label>\n        <div className=\"col-8\">\n          <div className=\"d-flex\">\n            <InputRadio\n              label=\"Input Manually\"\n              //@ts-ignore\n              checked={voucherForm.voucher_type === 'manual'}\n              onClick={() => setVoucherForm({\n                ...voucherForm,\n                //@ts-ignore\n                voucher_type: 'manual'\n              })}\n              wrapperClass=\"col-4\"\n            />\n            <InputRadio\n              label=\"Autogenerate\"\n              //@ts-ignore\n              checked={voucherForm.voucher_type === 'generate'}\n              onClick={() => setVoucherForm({\n                ...voucherForm,\n                //@ts-ignore\n                voucher_type: 'generate'\n              })}\n              wrapperClass=\"col-4\"\n            />\n          </div>\n\n\n          {\n            //@ts-ignore\n            voucherForm.voucher_type === 'manual' && (\n              <div className=\"d-flex mt-6\">\n                <div className=\"col-8\">\n                  <InputText\n                    label=\"Input Voucher Code\"\n                    //@ts-ignore\n                    value={voucherForm?.voucher_code}\n                    onChange={(e: ChangeEvent<HTMLInputElement>) => setVoucherForm({\n                      ...voucherForm,\n                      //@ts-ignore\n                      voucher_code: e.target.value\n                    })}\n                    showCharacterCount\n                    maxLength={25}\n                  />\n                </div>\n                <div className=\"col-4\">\n                  <LabelAlert\n                    message=\"The code is available\"\n                    className=\"mt-8 ms-4\"\n                    alertType=\"success\"\n                  />\n                </div>\n              </div>\n            )}\n          {\n            //@ts-ignore\n            voucherForm.voucher_type === 'generate' && (\n              <div className=\"col-8 mt-6\">\n                <InputCheckBox\n                  label=\"Generate code based on Total Voucher Quota\"\n                />\n                <p className=\"text-gray-600 fs-7 mt-4\">\n                  Sistem akan generate kode voucher berdasarkan banyaknya Voucher Quota yang diisi\n                </p>\n                <button\n                  type=\"button\"\n                  className={`btn btn-md btn-light-secondary fw-bolder me-4`}\n                  onClick={() => {\n                    generateVoucher('2311FOOD', 100)\n                    .then((res) => {\n                      console.log(\"res generate\",res);\n                      setVoucherForm({\n                        ...voucherForm,\n                        //@ts-ignore\n                        campaign_mark: res.data.data.campaign_mark\n                      })\n                      // setVoucherCode(res.data.campaign_mark)\n                      // dispatch(GenderRedux.actions.setSuccess('Gender berhasil dihapus.'))\n                    })\n                    .catch((err) => {\n                      // setShowDeclineCampaign(false)\n                      addPageToasts({ scheme: 'danger', text: getErrorMessage(err, true) })\n                    })\n                    \n                  }}\n                  tabIndex={8}\n                >\n                  Generate Code\n                </button>\n                {\n                  //@ts-ignore\n                  voucherForm.campaign_mark && (\n                    <div className=\"mt-4\">\n                      <InputText\n                        label=\"Generated Code\"\n                        //@ts-ignore\n                        value={voucherForm.campaign_mark}\n                        showCharacterCount\n                        maxLength={25}\n                        disabled\n                      />\n                    </div>\n                  )}\n              </div>\n            )}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderSectionValidityPeriod = () => (\n    <div className=\"card mb-4 py-12 px-8\">\n      <div className=\"d-flex\">\n        <label className=\"col-2 text-gray-800 fw-bold fs-6\">Validity Period</label>\n        <div className=\"col-8\">\n          <div className=\"d-flex gap-6 mb-6\">\n            <div>\n              <label className=\"form-label text-gray-700 fs-7\">Start Date</label>\n              <div className=\"input-group\">\n                <DatePicker\n                  className=\"form-control\"\n                  selected={startDate}\n                  onChange={(date: any) => setStartDate(date)}\n                />\n                <div className=\"custom-content-input\">\n                  <InlineSVG src=\"/media/icons/date.svg\" />\n                </div>\n              </div>\n            </div>\n            <div>\n              <label className=\"form-label text-gray-700 fs-7\">Start Time</label>\n              <div className=\"input-group\">\n                <DatePicker\n                  className=\"form-control\"\n                  selected={startTime}\n                  onChange={(time: any) => {\n                    setStartTime(time)\n                    setVoucherForm({\n                      ...voucherForm,\n                      //@ts-ignore\n                      valid_start: moment(startDate).format('YYYY-MM-DD') + \" \" + moment(time).format('h:mm:ss')\n                    })\n                  }}\n                  showTimeSelect\n                  showTimeSelectOnly\n                  timeIntervals={15}\n                  timeCaption=\"Time\"\n                  dateFormat=\"h:mm:ss\"\n                />\n                <div className=\"custom-content-input\">\n                  <InlineSVG src=\"/media/icons/time.svg\" />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"d-flex gap-6\">\n            <div>\n              <label className=\"form-label text-gray-700 fs-7\">End Date</label>\n              <div className=\"input-group\">\n                <DatePicker\n                  className=\"form-control\"\n                  selected={endDate}\n                  onChange={(date: any) => setEndDate(date)}\n                />\n                <div className=\"custom-content-input\">\n                  <InlineSVG src=\"/media/icons/date.svg\" />\n                </div>\n              </div>\n            </div>\n            <div>\n              <label className=\"form-label text-gray-700 fs-7\">End Time</label>\n              <div className=\"input-group\">\n                <DatePicker\n                  className=\"form-control\"\n                  selected={endTime}\n                  onChange={(time: any) => {\n                    setEndTime(time)\n                    setVoucherForm({\n                      ...voucherForm,\n                      //@ts-ignore\n                      valid_end: moment(endDate).format('YYYY-MM-DD') + \" \" + moment(time).format('h:mm:ss')\n                    })\n                  }}\n                  showTimeSelect\n                  showTimeSelectOnly\n                  timeIntervals={15}\n                  timeCaption=\"Time\"\n                  dateFormat=\"h:mm aa\"\n                />\n                <div className=\"custom-content-input\">\n                  <InlineSVG src=\"/media/icons/time.svg\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderSectionTargetUser = () => (\n    <div className=\"card mb-4 py-12 px-8\">\n      <div className=\"d-flex\">\n        <label className=\"col-2 text-gray-800 fw-bold fs-6\">Target User</label>\n        <div className=\"col-10\">\n          <div className=\"col-4\">\n            <label className=\"form-label\">Choose User</label>\n            <Select\n              defaultValue={chosenUser}\n              onChange={(e: any) => {\n                setChosenUser(e)\n                // setVoucherForm({\n                //   ...voucherForm,\n                //   //@ts-ignore\n                //   target_user: e.value\n                // })\n              }}\n              options={options}\n              className=\"mb-4\"\n            />\n          </div>\n\n          {chosenUser.value !== 'All User' && (\n            <div className=\"col-12\">\n              <div\n                className=\"d-inline-flex align-items-center btn btn-light-secondary mb-4\"\n                onClick={() =>\n                // setShowTargetUserModal(true)\n                {\n                  setTargetUser([\n                    ...targetUser,\n                    {\n                      id: Math.random(),\n                      name: 'New user',\n                      phone: '0821548625168',\n                    },\n                  ])\n                  // setVoucherForm({\n                  //   ...voucherForm,\n                  //   //@ts-ignore\n                  //   target_user_ids: [\n                  //     //@ts-ignore\n                  //     ...voucherForm.target_user_ids,\n                  //     {\n                  //       id: Math.random(),\n                  //       name: 'New user',\n                  //       phone: '0821548625168',\n                  //     },\n                  //   ]\n                  // })\n                }\n                }\n              >\n                <InlineSVG src=\"/media/icons/user.svg\" />\n                <p className=\"mb-0 ms-2\">Add User</p>\n              </div>\n              <div className=\"row mx-0\">\n                {\n                  //@ts-ignore\n                  voucherForm.target_user_ids.length > 0 && voucherForm.target_user_ids.map((item, index) => (\n                    <div key={`key-${item?.id}`} className=\"col-3 ps-0 pb-4\">\n                      <div className=\"d-flex align-items-center form-card\">\n                        <div className=\"w-100\">\n                          <p className=\"m-0\">{item?.name}</p>\n                          <p className=\"text-gray-600 m-0\">{item?.phone}</p>\n                        </div>\n                        <InlineSVG\n                          src=\"/media/icons/close.svg\"\n                          onClick={() => {\n                            // setVoucherForm({\n                            //   ...voucherForm,\n                            //   //@ts-ignore\n                            //   target_user_ids: voucherForm.target_user_ids.filter((obj) => {\n                            //     return obj.id !== item?.id;\n                            //   })\n                            // })\n                            setTargetUser(\n                              targetUser.filter((obj) => {\n                                return obj.id !== item?.id;\n                              })\n                            );\n                          }}\n                          className=\"cursor-pointer\"\n                        />\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n\n  useEffect(() => {\n    let condition = document.getElementById('condition');\n    let limit = document.getElementById('limit');\n    let rules = document.getElementById('rules');\n    let result = document.getElementById('result');\n    dragula([condition, limit, rules, result], {\n      moves: function (el: any, source: any, handle: any, sibling: any) {\n        console.log(\"EL \", el);\n        console.log(\"handle \", handle);\n        console.log(\"source \", source);\n        console.log(\"sibling \", sibling);\n        return true; // elements are always draggable by default\n      },\n      accepts: function (el: any, target: any, source: any, sibling: any) {\n        console.log(\"EL accept \", el);\n        console.log(\"target accept \", target);\n        return true; // elements can be dropped in any of the `containers` by default\n      },\n    });\n    var drake = dragula({\n      copy: true\n    });\n    drake.containers.push(result);\n    document.getElementById('container-drag')\n  })\n\n  const renderSectionRule = () => (\n    <div className='row p-0'>\n      <div className='col-5' style={{ display: 'inline-block' }}>\n        <label className=\"text-gray-800 fw-bold fs-6 py-2\">Condition</label>\n        <div id=\"condition\" className=\"card mb-4 py-12 px-8 container-drag\" style={{ marginRight: 5 }}>\n          <div className=\"row py-2\">\n            <div className=\"col-12 pb-4\">\n              <div className=\"d-flex align-items-center form-card-draggable\">\n                <div className='col-3 py-8 px-8 d-flex align-items-center justify-content-center bg-primary' style={{ borderTopLeftRadius: 5, borderBottomLeftRadius: 5 }}>\n                  <InlineSVG\n                    src=\"/media/icons/close.svg\"\n                  />\n                </div>\n                <div className=\"w-100 px-4\">\n                  <p className=\"m-0\">efood</p>\n                  <p className=\"text-gray-600 m-0\">provider_corporate</p>\n                  <p className=\"text-gray-600 m-0\">VoucherID: MAKANGRATIS</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <label className=\"text-gray-800 fw-bold fs-6 py-2\">Limit</label>\n        <div id=\"limit\" className=\"card mb-4 py-12 px-8 container-drag\" style={{ marginRight: 5 }}>\n          <div className=\"row py-2\">\n            <div className=\"col-12 pb-4\">\n              <div className=\"d-flex align-items-center form-card-draggable\">\n                <div className='col-3 py-8 px-8 d-flex align-items-center justify-content-center bg-primary' style={{ borderTopLeftRadius: 5, borderBottomLeftRadius: 5 }}>\n                  <InlineSVG\n                    src=\"/media/icons/close.svg\"\n                  />\n                </div>\n                <div className=\"w-100 px-4\">\n                  {/* <p className=\"m-0\">efood</p> */}\n                  <p className=\"text-gray-500 m-0\">Min Belanja 20.000</p>\n                  <p className=\"text-gray-800 m-0 fs-16\">Min belanja sampai 20.000</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <label className=\"text-gray-800 fw-bold fs-6 py-2\">Rules</label>\n        <div id=\"rules\" className=\"card mb-4 py-12 px-8 container-drag\" style={{ marginRight: 5 }}>\n          <div className=\"row py-2\">\n            <div className=\"col-12 pb-4\">\n              <div className=\"d-flex align-items-center form-card-draggable\">\n                <div className='col-3 py-8 px-8 d-flex align-items-center justify-content-center bg-primary' style={{ borderTopLeftRadius: 5, borderBottomLeftRadius: 5 }}>\n                  <InlineSVG\n                    src=\"/media/icons/close.svg\"\n                  />\n                </div>\n                <div className=\"w-100 px-4\">\n                  <p className=\"m-0\">efood</p>\n                  <p className=\"text-gray-600 m-0\">provider_corporate</p>\n                  <p className=\"text-gray-600 m-0\">VoucherID: MAKANGRATIS</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className='col-5' style={{ display: 'inline-block' }}>\n        <label className=\"text-gray-800 fw-bold fs-6 py-2\">Result</label>\n        <div id=\"result\" className=\"card mb-4 py-12 px-8 container-drag\" style={{ marginLeft: 5 }}>\n\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderSectionImage = () => (\n    <div className=\"card mb-4 py-12 px-8\">\n      <div className=\"d-flex\">\n        <label className=\"col-2 text-gray-800 fw-bold fs-6\">Image</label>\n        <div className=\"col-8\">\n          <ImageDropZone\n            onDrop={() => { }}\n            onClear={() => { }}\n            preview=\"preview\"\n            title=\"title\"\n            message=\"message\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <div className=\"mt-12\">\n        <h4>General Information</h4>\n        <p className=\"text-gray-600\">Input your voucher information</p>\n      </div>\n\n      <div className=\"mb-10 row\">\n        {renderSectionSelectPlatform()}\n        {renderSectionCampaignType()}\n        {renderSectionIdentification()}\n        {renderSectionVoucherCode()}\n        {renderSectionValidityPeriod()}\n        {renderSectionTargetUser()}\n        {renderSectionRule()}\n        {renderSectionImage()}\n      </div>\n\n      <TargetUserModal\n        onSave={() => {\n          // deleteGender(handleDeleteData?.id ?? '')\n          //   .then(() => {\n          //     // dispatch(AdminRedux.actions.setSuccess('User berhasil dihapus.'))\n          //     setShowDeleteModal(false)\n          //   })\n          //   .catch((err) => {\n          //     setShowDeleteModal(false)\n          //     addPageToasts({ scheme: 'danger', text: getErrorMessage(err, true) })\n          //   })\n        }}\n        show={showTargetUserModal}\n        handleClose={() => setShowTargetUserModal(false)}\n        data={handleTargetUserData}\n      />\n    </>\n  )\n}\n","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/utils/input-utils.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/_CookieComponent.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/_utils/index.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/InputCheckBox.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/utils/rule-list-utils.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/CheckboxSwitch.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/LabelAlert.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/RadioButtonCard.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/InputPercentage.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/InputMoney.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/TextEditor.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/InputNumber.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/ImageDropZone.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/components/TargetUserModal.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/InputText.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/InputRadio.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/_utils/EventHandlerUtil.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/_utils/ElementAnimateUtil.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/_utils/_TypesHelpers.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/_utils/DomHelpers.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/_utils/_ElementStyleUtil.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/_utils/_DOMEventHandlerUtil.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/_utils/_DataUtil.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/_utils/models/OffsetModel.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/_utils/models/ViewPortModel.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/_ScrollComponent.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/_ImageInputComponent.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/_FeedbackComponent.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/assets/ts/components/_DrawerComponent.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BenefitType/redux/MasterBenefitTypeCRUD.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Benefit/redux/MasterBenefitCRUD.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/language/redux/LanguageCRUD.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/voucher/components/DeleteVoucherModal.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/components/aside/AsideMenuMain.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Benefit/components/DeleteMasterBenefitModal.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/language/components/DeleteLanguageModal.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Condition/Screens.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/InboxCompose.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/MenuModal.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/SearchModal.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Rules/Screens.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/explore/ExploreMain.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/drawer-messenger/DrawerMessenger.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/sidebar-partials/SidebarUser.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/header-menus/HeaderUserMenu.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/quick-links/QuicLinks.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/header-menus/HeaderNotificationsMenu.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/sidebar-partials/SidebarGeneral.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Component/Screens.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/search/Search.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Condition/page/AddMasterCondition.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Condition/page/ListMasterCondition.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Condition/page/EditMasterCondition.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Rules/page/AddMasterRules.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Rules/page/EditMasterRules.tsx",["1083","1084"],"import clsx from 'clsx'\nimport {useFormik} from 'formik'\nimport {FC, useEffect, useMemo, useState} from 'react'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {SelectComponentsConfig} from 'react-select'\nimport Select from 'react-select'\nimport {PageTitle} from 'src/_metronic/layout/core'\nimport AlertSuccess from 'src/app/components/AlertSuccess'\nimport {ReactSelectMetronicTheme} from 'src/app/components/CustomReactSelect'\nimport {getTitle} from 'src/app/utils/title-utils'\nimport * as Yup from 'yup'\nimport MasterRulesScreens from '../Screens'\nimport {getMasterRulesDetail, updateMasterRules} from '../redux/MasterRulesCRUD'\n\nconst editSchema = Yup.object().shape({\n  rule_name: Yup.string().required('This field is required'),\n  // status: Yup.string().required('This field is required'),\n})\n\nconst initialValues = {\n  rule_name: '',\n  description: '',\n  status: '',\n}\n\nconst EditMasterRules: FC = (props: any) => {\n  // Variables\n  const {id} = useParams<any>()\n  const history = useHistory()\n\n  const [success, setSuccess] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [data, setData] = useState<any>()\n  const [save, setSave] = useState(false)\n  const [selectedStatus, setSelectedStatus] = useState<{label: string; value: string} | undefined>()\n  const statList = [\n    {label: 'Active', value: 'active'},\n    {label: 'Inactive', value: 'not_active'},\n  ]\n\n  const formik = useFormik({\n    initialValues,\n    validateOnBlur: false,\n    validateOnChange: false,\n    validationSchema: editSchema,\n    onSubmit: (values: any, {setStatus, setSubmitting}) => {\n      updateMasterRule(values)\n      setSave(true)\n    },\n  })\n\n  const updateMasterRule = async (values:any) => {\n    formik.setSubmitting(true)\n    setLoading(true)\n    setTimeout(() => {\n      updateMasterRules(id, values.rule_name, values.description, selectedStatus?.value ?? values.status)\n        .then(() => {\n          setLoading(false)\n          formik.setSubmitting(false)\n          history.goBack()\n        })\n        .catch(() => {\n          setSave(false)\n          setLoading(false)\n          formik.setSubmitting(false)\n          formik.setStatus('Update Master Rule Failed.')\n        })\n    }, 1000)\n  }\n\n  //start::TITLE_FUNC\n  const pageTitle = useMemo(() => MasterRulesScreens.EDIT_MASTER_RULES.TITLE, [])\n\n  const breadcrumbs = useMemo(\n    () => [\n      {\n        isActive: false,\n        path: MasterRulesScreens.LIST_MASTER_RULES.PATH,\n        title: MasterRulesScreens.LIST_MASTER_RULES.TITLE,\n      },\n      {isActive: false, path: '', title: '', isSeparator: true},\n    ],\n    []\n  )\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const detail = await getMasterRulesDetail(id)\n        setData(detail.data.data ?? null)\n        detail.data.data?.status === 'not_active'\n          ? setSelectedStatus({label: 'Inactive', value: detail.data.data?.status})\n          : setSelectedStatus({label: 'Active', value: detail.data.data?.status ?? 'active'})\n        formik.setFieldValue('rule_name', detail.data.data?.rule_name)\n        formik.setFieldValue('description', detail.data.data?.description)\n        formik.setFieldValue('status', selectedStatus)\n      } catch (error) {}\n    }\n\n    getData()\n  }, [id])\n\n  useEffect(() => {\n    document.title = getTitle(pageTitle)\n  }, [])\n  //end::TITLE_FUNC\n\n  return (\n    <div className='card'>\n      <PageTitle breadcrumbs={breadcrumbs}>{pageTitle}</PageTitle>\n      <div className='card-body'>\n        <AlertSuccess message={success} handleClose={() => setSuccess('')} />\n        <form className='form w-100' onSubmit={formik.handleSubmit} noValidate>\n          <div className='mb-10 col'>\n            <div className='col-12 col-md-6 mb-10 mb-md-0 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Rule Name<span className='text-danger'>*</span>\n              </label>\n              <input\n                placeholder='Input Rule Name'\n                {...formik.getFieldProps('rule_name')}\n                className={clsx('form-control form-control-lg form-control-solid', {\n                  'border-danger': formik.touched.rule_name && formik.errors.rule_name,\n                })}\n                type='text'\n                name='rule_name'\n                autoComplete='off'\n              />\n              {formik.touched.rule_name && formik.errors.rule_name && (\n                <div className='fv-plugins-message-container mt-2 text-danger'>\n                  <span role='alert'>{formik.errors.rule_name}</span>\n                </div>\n              )}\n            </div>\n            <div className='col-12 col-md-6 mb-10 mb-md-0 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Description\n              </label>\n              <textarea\n                placeholder='Input Description'\n                {...formik.getFieldProps('description')}\n                className={clsx('form-control form-control-lg form-control-solid', {\n                  'border-danger': formik.touched.description && formik.errors.description,\n                })}\n                name='description'\n                autoComplete='off'\n              />\n              {formik.touched.description && formik.errors.description && (\n                <div className='fv-plugins-message-container mt-2 text-danger'>\n                  <span role='alert'>{formik.errors.description}</span>\n                </div>\n              )}\n            </div>\n            <div className='col-12 col-md-6 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Status<span className='text-danger'>*</span>\n              </label>\n              <Select\n                placeholder='Select'\n                cacheOptions\n                defaultOptions\n                components={ReactSelectMetronicTheme as SelectComponentsConfig<any, true>}\n                value={selectedStatus}\n                options={statList}\n                onChange={(value: any) => {\n                  setSelectedStatus(value)\n                  formik.setFieldValue('status', value.value)\n                }}\n              />\n              {formik.touched.status && formik.errors.status && (\n                <div className='fv-plugins-message-container mt-3 text-danger'>\n                  <span role='alert'>{formik.errors.status}</span>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className='border-top pt-10 cardfooter-btns'>\n            <button\n              type='button'\n              className={`btn btn-lg btn-light fw-bolder me-4`}\n              onClick={() => history.goBack()}\n              tabIndex={8}\n            >\n              Cancel\n            </button>\n            <button\n              type='submit'\n              className='btn btn-lg btn-secondary fw-bolder me-4'\n              disabled={formik.isSubmitting}\n            >\n              {!loading && <span className='indicator-label'>Save</span>}\n              {loading && (\n                <span className='indicator-progress' style={{display: 'block'}}>\n                  Please wait...\n                  <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\n                </span>\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport {EditMasterRules}\n","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Rules/page/ListMasterRules.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherRules/Screens.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/ConditionType/Screens.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Component/page/AddMasterComponent.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Component/page/EditMasterComponent.tsx",["1085","1086"],"import clsx from 'clsx'\nimport {useFormik} from 'formik'\nimport {FC, useEffect, useMemo, useState} from 'react'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {SelectComponentsConfig} from 'react-select'\nimport Select from 'react-select'\nimport {PageTitle} from 'src/_metronic/layout/core'\nimport AlertSuccess from 'src/app/components/AlertSuccess'\nimport {ReactSelectMetronicTheme} from 'src/app/components/CustomReactSelect'\nimport {getTitle} from 'src/app/utils/title-utils'\nimport * as Yup from 'yup'\nimport MasterComponentScreens from '../Screens'\nimport {getMasterComponentDetail, updateMasterComponent} from '../redux/MasterComponentCRUD'\n\nconst editSchema = Yup.object().shape({\n  component_name: Yup.string().required('This field is required'),\n  // status: Yup.string().required('This field is required'),\n})\n\nconst initialValues = {\n  component_name: '',\n  description: '',\n  meta_data: '',\n  status: '',\n}\n\nconst EditMasterComponent: FC = (props: any) => {\n  // Variables\n  const {id} = useParams<any>()\n  const history = useHistory()\n\n  const [success, setSuccess] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [data, setData] = useState<any>()\n  const [save, setSave] = useState(false)\n  const [selectedStatus, setSelectedStatus] = useState<{label: string; value: string} | undefined>()\n  const statList = [\n    {label: 'Active', value: 'active'},\n    {label: 'Inactive', value: 'not_active'},\n  ]\n\n  const formik = useFormik({\n    initialValues,\n    validateOnBlur: false,\n    validateOnChange: false,\n    validationSchema: editSchema,\n    onSubmit: (values: any, {setStatus, setSubmitting}) => {\n      updateComponent(values)\n      setSave(true)\n    },\n  })\n\n  const updateComponent = async (values:any) => {\n    formik.setSubmitting(true)\n    setLoading(true)\n    setTimeout(() => {\n      updateMasterComponent(id, values.component_name, values.description, values.meta_data ,selectedStatus?.value ?? values.status)\n        .then(() => {\n          setLoading(false)\n          formik.setSubmitting(false)\n          history.goBack()\n        })\n        .catch(() => {\n          setSave(false)\n          setLoading(false)\n          formik.setSubmitting(false)\n          formik.setStatus('Update Master Component Failed.')\n        })\n    }, 1000)\n  }\n\n  //start::TITLE_FUNC\n  const pageTitle = useMemo(() => MasterComponentScreens.EDIT_MASTER_COMPONENT.TITLE, [])\n\n  const breadcrumbs = useMemo(\n    () => [\n      {\n        isActive: false,\n        path: MasterComponentScreens.LIST_MASTER_COMPONENT.PATH,\n        title: MasterComponentScreens.LIST_MASTER_COMPONENT.TITLE,\n      },\n      {isActive: false, path: '', title: '', isSeparator: true},\n    ],\n    []\n  )\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const detail = await getMasterComponentDetail(id)\n        setData(detail.data.data ?? null)\n        detail.data.data?.status === 'not_active'\n          ? setSelectedStatus({label: 'Inactive', value: detail.data.data?.status})\n          : setSelectedStatus({label: 'Active', value: detail.data.data?.status ?? 'active'})\n        formik.setFieldValue('component_name', detail.data.data?.component_name)\n        formik.setFieldValue('description', detail.data.data?.description)\n        formik.setFieldValue('meta_data', detail.data.data?.meta_data)\n        formik.setFieldValue('status', selectedStatus)\n      } catch (error) {}\n    }\n\n    getData()\n  }, [id])\n\n  useEffect(() => {\n    document.title = getTitle(pageTitle)\n  }, [])\n  //end::TITLE_FUNC\n\n  return (\n    <div className='card'>\n      <PageTitle breadcrumbs={breadcrumbs}>{pageTitle}</PageTitle>\n      <div className='card-body'>\n        <AlertSuccess message={success} handleClose={() => setSuccess('')} />\n        <form className='form w-100' onSubmit={formik.handleSubmit} noValidate>\n          <div className='mb-10 col'>\n            <div className='col-12 col-md-6 mb-10 mb-md-0 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Benefit Type Name<span className='text-danger'>*</span>\n              </label>\n              <input\n                placeholder='Input Benefit Type Name'\n                {...formik.getFieldProps('component_name')}\n                className={clsx('form-control form-control-lg form-control-solid', {\n                  'border-danger': formik.touched.component_name && formik.errors.component_name,\n                })}\n                type='text'\n                name='component_name'\n                autoComplete='off'\n              />\n              {formik.touched.component_name && formik.errors.component_name && (\n                <div className='fv-plugins-message-container mt-2 text-danger'>\n                  <span role='alert'>{formik.errors.component_name}</span>\n                </div>\n              )}\n            </div>\n            <div className='col-12 col-md-6 mb-10 mb-md-0 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Description\n              </label>\n              <textarea\n                placeholder='Input Component Description'\n                {...formik.getFieldProps('description')}\n                className={clsx('form-control form-control-lg form-control-solid', {\n                  'border-danger': formik.touched.description && formik.errors.description,\n                })}\n                name='description'\n                autoComplete='off'\n              />\n              {formik.touched.description && formik.errors.description && (\n                <div className='fv-plugins-message-container mt-2 text-danger'>\n                  <span role='alert'>{formik.errors.description}</span>\n                </div>\n              )}\n            </div>\n            <div className='col-12 col-md-6 mb-10 mb-md-0 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n               Meta Data\n              </label>\n              <input\n                placeholder='Input Meta Data'\n                {...formik.getFieldProps('meta_data')}\n                className={clsx('form-control form-control-lg form-control-solid', {\n                  'border-danger': formik.touched.meta_data && formik.errors.meta_data,\n                })}\n                type='text'\n                name='meta_data'\n                autoComplete='off'\n              />\n              {formik.touched.meta_data && formik.errors.meta_data && (\n                <div className='fv-plugins-message-container mt-2 text-danger'>\n                  <span role='alert'>{formik.errors.meta_data}</span>\n                </div>\n              )}\n            </div>\n            <div className='col-12 col-md-6 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Status<span className='text-danger'>*</span>\n              </label>\n              <Select\n                placeholder='Select'\n                cacheOptions\n                defaultOptions\n                components={ReactSelectMetronicTheme as SelectComponentsConfig<any, true>}\n                value={selectedStatus}\n                options={statList}\n                onChange={(value: any) => {\n                  setSelectedStatus(value)\n                  formik.setFieldValue('status', value.value)\n                }}\n              />\n              {formik.touched.status && formik.errors.status && (\n                <div className='fv-plugins-message-container mt-3 text-danger'>\n                  <span role='alert'>{formik.errors.status}</span>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className='border-top pt-10 cardfooter-btns'>\n            <button\n              type='button'\n              className={`btn btn-lg btn-light fw-bolder me-4`}\n              onClick={() => history.goBack()}\n              tabIndex={8}\n            >\n              Cancel\n            </button>\n            <button\n              type='submit'\n              className='btn btn-lg btn-secondary fw-bolder me-4'\n              disabled={formik.isSubmitting}\n            >\n              {!loading && <span className='indicator-label'>Save</span>}\n              {loading && (\n                <span className='indicator-progress' style={{display: 'block'}}>\n                  Please wait...\n                  <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\n                </span>\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport {EditMasterComponent}\n","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Component/page/ListMasterComponent.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/CampaignType/Screens.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BenefitType/Screens.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherRules/page/EditVoucherRules.tsx",["1087"],"import {useFormik} from 'formik'\nimport {FC, useEffect, useMemo, useState} from 'react'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {SelectComponentsConfig} from 'react-select'\nimport Select from 'react-select'\nimport {PageTitle} from 'src/_metronic/layout/core'\nimport AlertSuccess from 'src/app/components/AlertSuccess'\nimport {ReactSelectMetronicTheme} from 'src/app/components/CustomReactSelect'\nimport {getTitle} from 'src/app/utils/title-utils'\nimport * as Yup from 'yup'\nimport VoucherRulesScreens from '../Screens'\nimport {getVoucherList, getVoucherRulesDetail, updateVoucherRules} from '../redux/VoucherRulesCRUD'\nimport {getBusinessUnitList} from '../../BusinessUnit/redux/BusinessUnitCRUD'\nimport {getMasterRulesList} from '../../Rules/redux/MasterRulesCRUD'\nimport {getMasterComponentList} from '../../Component/redux/MasterComponentCRUD'\n\nconst editSchema = Yup.object().shape({\n  bu_id: Yup.string().required('This field is required'),\n  voucher_id: Yup.string().required('This field is required'),\n  rules_id: Yup.string().required('This field is required'),\n  component_id: Yup.string().required('This field is required'),\n})\n\nconst initialValues = {\n  bu_id: '',\n  voucher_id: '',\n  rules_id: '',\n  component_id: '',\n}\n\nconst EditVoucherRules: FC = (props: any) => {\n  // Variables\n  const {id} = useParams<any>()\n  const history = useHistory()\n\n  const [success, setSuccess] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [data, setData] = useState<any>()\n  const [save, setSave] = useState(false)\n  const [selectedBusiness, setSelectedBusiness] = useState<any>()\n  const [selectedVoucher, setSelectedVoucher] = useState<any>()\n  const [selectedRules, setSelectedRules] = useState<any>()\n  const [selectedComponent, setSelectedComponent] = useState<any>()\n  const [business, setBusiness] = useState<any>([])\n  const [voucher, setVoucher] = useState<any>([])\n  const [rules, setRules] = useState<any>([])\n  const [component, setComponent] = useState<any>([])\n\n  const formik = useFormik({\n    initialValues,\n    validateOnBlur: false,\n    validateOnChange: false,\n    validationSchema: editSchema,\n    onSubmit: (values: any) => {\n      saveVoucherRules(values)\n    },\n  })\n\n  const saveVoucherRules = async (values: any) => {\n    formik.setSubmitting(true)\n    setLoading(true)\n    setTimeout(() => {\n      updateVoucherRules(id, values.bu_id ?? data.bu_id, values.voucher_id ?? data.voucher_id, values.rules_id ?? data.rules_id, values.component_id ?? data.component_id)\n        .then(() => {\n          setLoading(false)\n          formik.setSubmitting(false)\n          history.goBack()\n        })\n        .catch(() => {\n          setSave(false)\n          setLoading(false)\n          formik.setSubmitting(false)\n          formik.setStatus('Update Voucher Rules Failed.')\n        })\n    }, 1000)\n  }\n\n  //start::TITLE_FUNC\n  const pageTitle = useMemo(() => VoucherRulesScreens.EDIT_VOUCHER_RULES.TITLE, [])\n\n  const breadcrumbs = useMemo(\n    () => [\n      {\n        isActive: false,\n        path: VoucherRulesScreens.LIST_VOUCHER_RULES.PATH,\n        title: VoucherRulesScreens.LIST_VOUCHER_RULES.TITLE,\n      },\n      {isActive: false, path: '', title: '', isSeparator: true},\n    ],\n    []\n  )\n  console.log('data', data, selectedBusiness, selectedComponent, selectedRules, selectedVoucher)\n\n  const getBusiness = async () => {\n    try {\n      const masterBusiness = await getBusinessUnitList({})\n      const activeBusiness = masterBusiness?.data?.data?.filter((item) => item.status === 'active')\n      setBusiness(activeBusiness)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n  const getVoucher = async () => {\n    try {\n      const voucher = await getVoucherList({})\n      const activeVoucher = voucher?.data?.data?.filter((item) => item.status === 'active')\n      setVoucher(activeVoucher)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n  const getRules = async () => {\n    try {\n      const rules = await getMasterRulesList({})\n      const activeRules = rules?.data?.data?.filter((rule) => rule.status === 'active')\n      setRules(activeRules)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n  const getComponent = async () => {\n    try {\n      const component = await getMasterComponentList({})\n      const activeComponent = component?.data?.data?.filter((item) => item.status === 'active')\n      setComponent(activeComponent)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const detail = await getVoucherRulesDetail(id);\n        const data = detail?.data?.data ?? null;\n        setData(data);\n      } catch (error) {\n        console.log(error)\n      }\n    }\n\n    getData()\n  }, [id])\n\n  useEffect(() => {\n    if (data) {\n      setSelectedBusiness({\n        label: data.business_unit?.bu_name,\n        value: data.bu_id,\n      });\n\n      setSelectedVoucher({\n        label: data.voucher?.voucher_name,\n        value: data.voucher_id,\n      });\n\n      setSelectedRules({\n        label: data.rules?.rule_name,\n        value: data.rules_id,\n      });\n\n      setSelectedComponent({\n        label: data.component?.component_name,\n        value: data.component_id,\n      });\n\n      formik.setFieldValue('bu_id', data.bu_id);\n      formik.setFieldValue('voucher_id', data.voucher_id);\n      formik.setFieldValue('rules_id', data.rules_id);\n      formik.setFieldValue('component_id', data.component_id);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    document.title = getTitle(pageTitle)\n    getBusiness()\n    getVoucher()\n    getRules()\n    getComponent()\n  }, [])\n  //end::TITLE_FUNC\n\n  return (\n    <div className='card'>\n      <PageTitle breadcrumbs={breadcrumbs}>{pageTitle}</PageTitle>\n      <div className='card-body'>\n        <AlertSuccess message={success} handleClose={() => setSuccess('')} />\n        <form className='form w-100' onSubmit={formik.handleSubmit} noValidate>\n          <div className='mb-10 col'>\n            <div className='col-12 col-md-6 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Business Unit<span className='text-danger'>*</span>\n              </label>\n              <Select\n                placeholder='Select Business Unit'\n                cacheOptions\n                defaultOptions\n                components={ReactSelectMetronicTheme as SelectComponentsConfig<any, true>}\n                value={selectedBusiness}\n                options={business.map((data: any) => {\n                  return {label: data.bu_name, value: data.bu_id}\n                })}\n                onChange={(value: any) => {\n                  setSelectedBusiness(value)\n                  formik.setFieldValue('bu_id', value.value)\n                }}\n              />\n              {formik.touched.bu_id && formik.errors.bu_id && (\n                <div className='fv-plugins-message-container mt-3 text-danger'>\n                  <span role='alert'>{formik.errors.bu_id}</span>\n                </div>\n              )}\n            </div>\n            <div className='col-12 col-md-6 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Voucher<span className='text-danger'>*</span>\n              </label>\n              <Select\n                placeholder='Select Voucher'\n                cacheOptions\n                defaultOptions\n                components={ReactSelectMetronicTheme as SelectComponentsConfig<any, true>}\n                value={selectedVoucher}\n                options={voucher.map((data: any) => {\n                  return {label: data.voucher_name, value: data.voucher_id}\n                })}\n                onChange={(value: any) => {\n                  setSelectedVoucher(value)\n                  formik.setFieldValue('voucher_id', value.value)\n                }}\n              />\n              {formik.touched.voucher_id && formik.errors.voucher_id && (\n                <div className='fv-plugins-message-container mt-3 text-danger'>\n                  <span role='alert'>{formik.errors.voucher_id}</span>\n                </div>\n              )}\n            </div>\n            <div className='col-12 col-md-6 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Rules<span className='text-danger'>*</span>\n              </label>\n              <Select\n                placeholder='Select Rules'\n                cacheOptions\n                defaultOptions\n                components={ReactSelectMetronicTheme as SelectComponentsConfig<any, true>}\n                value={selectedRules}\n                options={rules.map((data: any) => {\n                  return {label: data.rule_name, value: data.rule_id}\n                })}\n                onChange={(value: any) => {\n                  setSelectedRules(value)\n                  formik.setFieldValue('rules_id', value.value)\n                }}\n              />\n              {formik.touched.rules_id && formik.errors.rules_id && (\n                <div className='fv-plugins-message-container mt-3 text-danger'>\n                  <span role='alert'>{formik.errors.rules_id}</span>\n                </div>\n              )}\n            </div>\n            <div className='col-12 col-md-6 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Component<span className='text-danger'>*</span>\n              </label>\n              <Select\n                placeholder='Select Component'\n                cacheOptions\n                defaultOptions\n                components={ReactSelectMetronicTheme as SelectComponentsConfig<any, true>}\n                value={selectedComponent}\n                options={component.map((data: any) => {\n                  return {label: data.component_name, value: data.component_id}\n                })}\n                onChange={(value: any) => {\n                  setSelectedComponent(value)\n                  formik.setFieldValue('component_id', value.value)\n                }}\n              />\n              {formik.touched.component_id && formik.errors.component_id && (\n                <div className='fv-plugins-message-container mt-3 text-danger'>\n                  <span role='alert'>{formik.errors.component_id}</span>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className='border-top pt-10 cardfooter-btns'>\n            <button\n              type='button'\n              className={`btn btn-lg btn-light fw-bolder me-4`}\n              onClick={() => history.goBack()}\n              tabIndex={8}\n            >\n              Cancel\n            </button>\n            <button\n              type='submit'\n              className='btn btn-lg btn-secondary fw-bolder me-4'\n              disabled={formik.isSubmitting}\n            >\n              {!loading && <span className='indicator-label'>Save</span>}\n              {loading && (\n                <span className='indicator-progress' style={{display: 'block'}}>\n                  Please wait...\n                  <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\n                </span>\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport {EditVoucherRules}\n","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherRules/page/ListVoucherRules.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherRules/page/AddVoucherRules.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/ConditionType/page/AddMasterConditionType.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/ConditionType/page/ListMasterConditionType.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/CampaignType/page/EditMasterCampaignType.tsx",["1088","1089"],"import clsx from 'clsx'\nimport {useFormik} from 'formik'\nimport {FC, useEffect, useMemo, useState} from 'react'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {SelectComponentsConfig} from 'react-select'\nimport Select from 'react-select'\nimport {PageTitle} from 'src/_metronic/layout/core'\nimport AlertSuccess from 'src/app/components/AlertSuccess'\nimport {ReactSelectMetronicTheme} from 'src/app/components/CustomReactSelect'\nimport {getTitle} from 'src/app/utils/title-utils'\nimport * as Yup from 'yup'\nimport MasterCampaignTypeScreens from '../Screens'\nimport {\n  getMasterCampaignTypeDetail,\n  updateMasterCampaignType,\n} from '../redux/MasterCampaignTypeCRUD'\n\nconst editSchema = Yup.object().shape({\n  campaigntype: Yup.string().required('This field is required'),\n})\n\nconst initialValues = {\n  campaigntype: '',\n  status: '',\n}\n\nconst EditMasterCampaignType: FC = (props: any) => {\n  // Variables\n  const {id} = useParams<any>()\n  const history = useHistory()\n\n  const [success, setSuccess] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [data, setData] = useState<any>()\n  const [save, setSave] = useState(false)\n  const [selectedStatus, setSelectedStatus] = useState<{label: string; value: string} | undefined>()\n  const statList = [\n    {label: 'Active', value: 'active'},\n    {label: 'Inactive', value: 'not_active'},\n  ]\n\n  const formik = useFormik({\n    initialValues,\n    validateOnBlur: false,\n    validateOnChange: false,\n    validationSchema: editSchema,\n    onSubmit: (values: any, {setStatus, setSubmitting}) => {\n      saveMasterCampaignType(values)\n      setSave(true)\n    },\n  })\n\n  const saveMasterCampaignType = async (values: any) => {\n    formik.setSubmitting(true)\n    setLoading(true)\n    setTimeout(() => {\n      updateMasterCampaignType(id, values.campaigntype, selectedStatus?.value ?? values.status)\n        .then(() => {\n          setLoading(false)\n          formik.setSubmitting(false)\n          history.goBack()\n        })\n        .catch(() => {\n          setSave(false)\n          setLoading(false)\n          formik.setSubmitting(false)\n          formik.setStatus('Update Master Campaign Type Failed.')\n        })\n    }, 1000)\n  }\n\n  //start::TITLE_FUNC\n  const pageTitle = useMemo(() => MasterCampaignTypeScreens.EDIT_MASTER_CAMPAIGN_TYPE.TITLE, [])\n\n  const breadcrumbs = useMemo(\n    () => [\n      {\n        isActive: false,\n        path: MasterCampaignTypeScreens.LIST_MASTER_CAMPAIGN_TYPE.PATH,\n        title: MasterCampaignTypeScreens.LIST_MASTER_CAMPAIGN_TYPE.TITLE,\n      },\n      {isActive: false, path: '', title: '', isSeparator: true},\n    ],\n    []\n  )\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const detail = await getMasterCampaignTypeDetail(id)\n        setData(detail.data.data ?? null)\n        detail.data.data?.status === 'not_active'\n          ? setSelectedStatus({label: 'Inactive', value: detail.data.data?.status})\n          : setSelectedStatus({label: 'Active', value: detail.data.data?.status ?? 'active'})\n        formik.setFieldValue('campaigntype', detail.data.data?.campaigntype)\n        formik.setFieldValue('status', selectedStatus)\n      } catch (error) {}\n    }\n\n    getData()\n  }, [id])\n\n  useEffect(() => {\n    document.title = getTitle(pageTitle)\n  }, [])\n  //end::TITLE_FUNC\n\n  return (\n    <div className='card'>\n      <PageTitle breadcrumbs={breadcrumbs}>{pageTitle}</PageTitle>\n      <div className='card-body'>\n        <AlertSuccess message={success} handleClose={() => setSuccess('')} />\n        <form className='form w-100' onSubmit={formik.handleSubmit} noValidate>\n          <div className='mb-10 col'>\n            <div className='col-12 col-md-6 mb-10 mb-md-0 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Benefit Type Name<span className='text-danger'>*</span>\n              </label>\n              <input\n                placeholder='Input Benefit Type Name'\n                {...formik.getFieldProps('campaigntype')}\n                className={clsx('form-control form-control-lg form-control-solid', {\n                  'border-danger': formik.touched.campaigntype && formik.errors.campaigntype,\n                })}\n                type='text'\n                name='campaigntype'\n                autoComplete='off'\n              />\n              {formik.touched.description && formik.errors.description && (\n                <div className='fv-plugins-message-container mt-2 text-danger'>\n                  <span role='alert'>{formik.errors.description}</span>\n                </div>\n              )}\n            </div>\n            <div className='col-12 col-md-6 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Status<span className='text-danger'>*</span>\n              </label>\n              <Select\n                placeholder='Select'\n                cacheOptions\n                defaultOptions\n                components={ReactSelectMetronicTheme as SelectComponentsConfig<any, true>}\n                value={selectedStatus}\n                options={statList}\n                onChange={(value: any) => {\n                  setSelectedStatus(value)\n                  formik.setFieldValue('status', value.value)\n                }}\n              />\n              {formik.touched.status && formik.errors.status && (\n                <div className='fv-plugins-message-container mt-3 text-danger'>\n                  <span role='alert'>{formik.errors.status}</span>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className='border-top pt-10 cardfooter-btns'>\n            <button\n              type='button'\n              className={`btn btn-lg btn-light fw-bolder me-4`}\n              onClick={() => history.goBack()}\n              tabIndex={8}\n            >\n              Cancel\n            </button>\n            <button\n              type='submit'\n              className='btn btn-lg btn-secondary fw-bolder me-4'\n              disabled={formik.isSubmitting}\n            >\n              {!loading && <span className='indicator-label'>Save</span>}\n              {loading && (\n                <span className='indicator-progress' style={{display: 'block'}}>\n                  Please wait...\n                  <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\n                </span>\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport {EditMasterCampaignType}\n","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/ConditionType/page/EditMasterConditionType.tsx",["1090","1091"],"import clsx from 'clsx'\nimport {useFormik} from 'formik'\nimport {FC, useEffect, useMemo, useState} from 'react'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {SelectComponentsConfig} from 'react-select'\nimport Select from 'react-select'\nimport {PageTitle} from 'src/_metronic/layout/core'\nimport AlertSuccess from 'src/app/components/AlertSuccess'\nimport {ReactSelectMetronicTheme} from 'src/app/components/CustomReactSelect'\nimport {getTitle} from 'src/app/utils/title-utils'\nimport * as Yup from 'yup'\nimport MasterConditionTypeScreens from '../Screens'\nimport {\n  getMasterConditionTypeDetail,\n  updateMasterConditionType,\n} from '../redux/MasterConditionTypeCRUD'\n\nconst editSchema = Yup.object().shape({\n  condition_type: Yup.string().required('This field is required'),\n})\n\nconst initialValues = {\n  condition_type: '',\n  status: '',\n}\n\nconst EditMasterConditionType: FC = (props: any) => {\n  // Variables\n  const {id} = useParams<any>()\n  const history = useHistory()\n\n  const [success, setSuccess] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [data, setData] = useState<any>()\n  const [save, setSave] = useState(false)\n  const [selectedStatus, setSelectedStatus] = useState<{label: string; value: string} | undefined>()\n  const statList = [\n    {label: 'Active', value: 'active'},\n    {label: 'Inactive', value: 'not_active'},\n  ]\n\n  const formik = useFormik({\n    initialValues,\n    validateOnBlur: false,\n    validateOnChange: false,\n    validationSchema: editSchema,\n    onSubmit: (values: any, {setStatus, setSubmitting}) => {\n      saveMasterConditionType(values)\n      setSave(true)\n    },\n  })\n\n  const saveMasterConditionType = async (values: any) => {\n    formik.setSubmitting(true)\n    setLoading(true)\n    setTimeout(() => {\n      updateMasterConditionType(id, values.condition_type, values.description, selectedStatus?.value ?? values.status)\n        .then(() => {\n          setLoading(false)\n          formik.setSubmitting(false)\n          history.goBack()\n        })\n        .catch(() => {\n          setSave(false)\n          setLoading(false)\n          formik.setSubmitting(false)\n          formik.setStatus('Update Master Condition Type Failed.')\n        })\n    }, 1000)\n  }\n\n  //start::TITLE_FUNC\n  const pageTitle = useMemo(() => MasterConditionTypeScreens.EDIT_MASTER_CONDITION_TYPE.TITLE, [])\n\n  const breadcrumbs = useMemo(\n    () => [\n      {\n        isActive: false,\n        path: MasterConditionTypeScreens.LIST_MASTER_CONDITION_TYPE.PATH,\n        title: MasterConditionTypeScreens.LIST_MASTER_CONDITION_TYPE.TITLE,\n      },\n      {isActive: false, path: '', title: '', isSeparator: true},\n    ],\n    []\n  )\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const detail = await getMasterConditionTypeDetail(id)\n        setData(detail.data.data ?? null)\n        detail.data.data?.status === 'not_active'\n          ? setSelectedStatus({label: 'Inactive', value: detail.data.data?.status})\n          : setSelectedStatus({label: 'Active', value: detail.data.data?.status ?? 'active'})\n        formik.setFieldValue('condition_type', detail.data.data?.condition_type)\n        formik.setFieldValue('description', detail.data.data?.description)\n        formik.setFieldValue('status', selectedStatus)\n      } catch (error) {}\n    }\n\n    getData()\n  }, [id])\n\n  useEffect(() => {\n    document.title = getTitle(pageTitle)\n  }, [])\n  //end::TITLE_FUNC\n\n  return (\n    <div className='card'>\n      <PageTitle breadcrumbs={breadcrumbs}>{pageTitle}</PageTitle>\n      <div className='card-body'>\n        <AlertSuccess message={success} handleClose={() => setSuccess('')} />\n        <form className='form w-100' onSubmit={formik.handleSubmit} noValidate>\n          <div className='mb-10 col'>\n            <div className='col-12 col-md-6 mb-10 mb-md-0 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n               Campaign Type Name<span className='text-danger'>*</span>\n              </label>\n              <input\n                placeholder='InputCampaign Type Name'\n                {...formik.getFieldProps('condition_type')}\n                className={clsx('form-control form-control-lg form-control-solid', {\n                  'border-danger': formik.touched.condition_type && formik.errors.condition_type,\n                })}\n                type='text'\n                name='condition_type'\n                autoComplete='off'\n              />\n              {formik.touched.description && formik.errors.description && (\n                <div className='fv-plugins-message-container mt-2 text-danger'>\n                  <span role='alert'>{formik.errors.description}</span>\n                </div>\n              )}\n            </div>\n            <div className='col-12 col-md-6 mb-10 mb-md-0 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Description<span className='text-danger'>*</span>\n              </label>\n              <textarea\n                placeholder='Input Deskription'\n                {...formik.getFieldProps('description')}\n                className={clsx('form-control form-control-lg form-control-solid', {\n                  'border-danger': formik.touched.description && formik.errors.description,\n                })}\n                name='description'\n                autoComplete='off'\n              />\n              {formik.touched.description && formik.errors.description && (\n                <div className='fv-plugins-message-container mt-2 text-danger'>\n                  <span role='alert'>{formik.errors.description}</span>\n                </div>\n              )}\n            </div>\n            <div className='col-12 col-md-6 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Status<span className='text-danger'>*</span>\n              </label>\n              <Select\n                placeholder='Select'\n                cacheOptions\n                defaultOptions\n                components={ReactSelectMetronicTheme as SelectComponentsConfig<any, true>}\n                value={selectedStatus}\n                options={statList}\n                onChange={(value: any) => {\n                  setSelectedStatus(value)\n                  formik.setFieldValue('status', value.value)\n                }}\n              />\n              {formik.touched.status && formik.errors.status && (\n                <div className='fv-plugins-message-container mt-3 text-danger'>\n                  <span role='alert'>{formik.errors.status}</span>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className='border-top pt-10 cardfooter-btns'>\n            <button\n              type='button'\n              className={`btn btn-lg btn-light fw-bolder me-4`}\n              onClick={() => history.goBack()}\n              tabIndex={8}\n            >\n              Cancel\n            </button>\n            <button\n              type='submit'\n              className='btn btn-lg btn-secondary fw-bolder me-4'\n              disabled={formik.isSubmitting}\n            >\n              {!loading && <span className='indicator-label'>Save</span>}\n              {loading && (\n                <span className='indicator-progress' style={{display: 'block'}}>\n                  Please wait...\n                  <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\n                </span>\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport {EditMasterConditionType}\n","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/CampaignType/page/AddMasterCampaignType.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/CampaignType/page/ListMasterCampaignType.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BenefitType/page/EditMasterBenefitType.tsx",["1092","1093"],"import clsx from 'clsx'\nimport {useFormik} from 'formik'\nimport {FC, useEffect, useMemo, useState} from 'react'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {SelectComponentsConfig} from 'react-select'\nimport Select from 'react-select'\nimport {PageTitle} from 'src/_metronic/layout/core'\nimport AlertSuccess from 'src/app/components/AlertSuccess'\nimport {ReactSelectMetronicTheme} from 'src/app/components/CustomReactSelect'\nimport {getTitle} from 'src/app/utils/title-utils'\nimport * as Yup from 'yup'\nimport MasterBenefitTypeScreens from '../Screens'\nimport {getMasterBenefitTypeDetail, updateMasterBenefitType} from '../redux/MasterBenefitTypeCRUD'\n\nconst editSchema = Yup.object().shape({\n  benefittype: Yup.string().required('This field is required'),\n})\n\nconst initialValues = {\n  benefittype: '',\n  status: '',\n}\n\nconst EditMasterBenefitType: FC = (props: any) => {\n  // Variables\n  const {id} = useParams<any>()\n  const history = useHistory()\n\n  const [success, setSuccess] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [data, setData] = useState<any>()\n  const [save, setSave] = useState(false)\n  const [selectedStatus, setSelectedStatus] = useState<{label: string; value: string} | undefined>()\n  const statList = [\n    {label: 'Active', value: 'active'},\n    {label: 'Inactive', value: 'not_active'},\n  ]\n\n  const formik = useFormik({\n    initialValues,\n    validateOnBlur: false,\n    validateOnChange: false,\n    validationSchema: editSchema,\n    onSubmit: (values: any, {setStatus, setSubmitting}) => {\n      updateMasterRule(values)\n      setSave(true)\n    },\n  })\n\n  const updateMasterRule = async (values:any) => {\n    formik.setSubmitting(true)\n    setLoading(true)\n    setTimeout(() => {\n      updateMasterBenefitType(id, values.benefittype,selectedStatus?.value ?? values.status)\n        .then(() => {\n          setLoading(false)\n          formik.setSubmitting(false)\n          history.goBack()\n        })\n        .catch(() => {\n          setSave(false)\n          setLoading(false)\n          formik.setSubmitting(false)\n          formik.setStatus('Update Master Rule Failed.')\n        })\n    }, 1000)\n  }\n\n  //start::TITLE_FUNC\n  const pageTitle = useMemo(() => MasterBenefitTypeScreens.EDIT_MASTER_BENEFIT_TYPE.TITLE, [])\n\n  const breadcrumbs = useMemo(\n    () => [\n      {\n        isActive: false,\n        path: MasterBenefitTypeScreens.LIST_MASTER_BENEFIT_TYPE.PATH,\n        title: MasterBenefitTypeScreens.LIST_MASTER_BENEFIT_TYPE.TITLE,\n      },\n      {isActive: false, path: '', title: '', isSeparator: true},\n    ],\n    []\n  )\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const detail = await getMasterBenefitTypeDetail(id)\n        setData(detail.data.data ?? null)\n        detail.data.data?.status === 'not_active'\n          ? setSelectedStatus({label: 'Inactive', value: detail.data.data?.status})\n          : setSelectedStatus({label: 'Active', value: detail.data.data?.status ?? 'active'})\n        formik.setFieldValue('benefittype', detail.data.data?.benefittype)\n        formik.setFieldValue('status', selectedStatus)\n      } catch (error) {}\n    }\n\n    getData()\n  }, [id])\n\n  useEffect(() => {\n    document.title = getTitle(pageTitle)\n  }, [])\n  //end::TITLE_FUNC\n\n  return (\n    <div className='card'>\n      <PageTitle breadcrumbs={breadcrumbs}>{pageTitle}</PageTitle>\n      <div className='card-body'>\n        <AlertSuccess message={success} handleClose={() => setSuccess('')} />\n        <form className='form w-100' onSubmit={formik.handleSubmit} noValidate>\n          <div className='mb-10 col'>\n            <div className='col-12 col-md-6 mb-10 mb-md-0 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Benefit Type Name<span className='text-danger'>*</span>\n              </label>\n              <input\n                placeholder='Input Benefit Type Name'\n                {...formik.getFieldProps('benefittype')}\n                className={clsx('form-control form-control-lg form-control-solid', {\n                  'border-danger': formik.touched.benefittype && formik.errors.benefittype,\n                })}\n                type='text'\n                name='benefittype'\n                autoComplete='off'\n              />\n              {formik.touched.description && formik.errors.description && (\n                <div className='fv-plugins-message-container mt-2 text-danger'>\n                  <span role='alert'>{formik.errors.description}</span>\n                </div>\n              )}\n            </div>\n            <div className='col-12 col-md-6 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Status<span className='text-danger'>*</span>\n              </label>\n              <Select\n                placeholder='Select'\n                cacheOptions\n                defaultOptions\n                components={ReactSelectMetronicTheme as SelectComponentsConfig<any, true>}\n                value={selectedStatus}\n                options={statList}\n                onChange={(value: any) => {\n                  setSelectedStatus(value)\n                  formik.setFieldValue('status', value.value)\n                }}\n              />\n              {formik.touched.status && formik.errors.status && (\n                <div className='fv-plugins-message-container mt-3 text-danger'>\n                  <span role='alert'>{formik.errors.status}</span>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className='border-top pt-10 cardfooter-btns'>\n            <button\n              type='button'\n              className={`btn btn-lg btn-light fw-bolder me-4`}\n              onClick={() => history.goBack()}\n              tabIndex={8}\n            >\n              Cancel\n            </button>\n            <button\n              type='submit'\n              className='btn btn-lg btn-secondary fw-bolder me-4'\n              disabled={formik.isSubmitting}\n            >\n              {!loading && <span className='indicator-label'>Save</span>}\n              {loading && (\n                <span className='indicator-progress' style={{display: 'block'}}>\n                  Please wait...\n                  <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\n                </span>\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport {EditMasterBenefitType}\n","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BenefitType/page/AddMasterBenefitType.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/AsideMenuData.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Limit/Screens.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BenefitType/page/ListMasterBenefitType.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Limit/page/AddLimit.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Limit/page/ListLimit.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Limit/page/EditLimit.tsx",["1094","1095"],"import clsx from 'clsx'\nimport {useFormik} from 'formik'\nimport {FC, useEffect, useMemo, useState} from 'react'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {SelectComponentsConfig} from 'react-select'\nimport Select from 'react-select'\nimport {PageTitle} from 'src/_metronic/layout/core'\nimport AlertSuccess from 'src/app/components/AlertSuccess'\nimport {ReactSelectMetronicTheme} from 'src/app/components/CustomReactSelect'\nimport {getTitle} from 'src/app/utils/title-utils'\nimport * as Yup from 'yup'\nimport LimitScreens from '../Screens'\nimport {getLimitDetail, updateLimit} from '../redux/LimitCRUD'\n\nconst editSchema = Yup.object().shape({\n  limit_name: Yup.string().required('This field is required'),\n})\n\nconst initialValues = {\n  limit_name: '',\n  limit_description: '',\n  limit_rules: '',\n  limit_type: '',\n  status: '',\n}\n\nconst EditLimit: FC = (props: any) => {\n  // Variables\n  const {id} = useParams<any>()\n  const history = useHistory()\n\n  const [success, setSuccess] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [data, setData] = useState<any>()\n  const [save, setSave] = useState(false)\n  const [selectedStatus, setSelectedStatus] = useState<{label: string; value: string} | undefined>()\n  const statList = [\n    {label: 'Active', value: 'active'},\n    {label: 'Inactive', value: 'not_active'},\n  ]\n\n  const formik = useFormik({\n    initialValues,\n    validateOnBlur: false,\n    validateOnChange: false,\n    validationSchema: editSchema,\n    onSubmit: (values: any, {setStatus, setSubmitting}) => {\n      updateMasterRule(values)\n      setSave(true)\n    },\n  })\n\n  const updateMasterRule = async (values:any) => {\n    formik.setSubmitting(true)\n    setLoading(true)\n    setTimeout(() => {\n      updateLimit(id, values.limit_name, values.api_url, values.environtment ,values.description, selectedStatus?.value ?? values.status)\n        .then(() => {\n          setLoading(false)\n          formik.setSubmitting(false)\n          history.goBack()\n        })\n        .catch(() => {\n          setSave(false)\n          setLoading(false)\n          formik.setSubmitting(false)\n          formik.setStatus('Update Master Limit Failed.')\n        })\n    }, 1000)\n  }\n\n  //start::TITLE_FUNC\n  const pageTitle = useMemo(() => LimitScreens.EDIT_MASTER_LIMIT.TITLE, [])\n\n  const breadcrumbs = useMemo(\n    () => [\n      {\n        isActive: false,\n        path: LimitScreens.LIST_MASTER_LIMIT.PATH,\n        title: LimitScreens.LIST_MASTER_LIMIT.TITLE,\n      },\n      {isActive: false, path: '', title: '', isSeparator: true},\n    ],\n    []\n  )\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const detail = await getLimitDetail(id)\n        setData(detail.data.data ?? null)\n        detail.data.data?.status === 'not_active'\n          ? setSelectedStatus({label: 'Inactive', value: detail.data.data?.status})\n          : setSelectedStatus({label: 'Active', value: detail.data.data?.status ?? 'active'})\n        formik.setFieldValue('limit_name', detail.data.data?.limit_name)\n        formik.setFieldValue('limit_description', detail.data.data?.limit_description)\n        formik.setFieldValue('limit_rules', detail.data.data?.limit_rules)\n        formik.setFieldValue('limit_type', detail.data.data?.limit_type)\n        formik.setFieldValue('status', selectedStatus)\n      } catch (error) {}\n    }\n\n    getData()\n  }, [id])\n\n  useEffect(() => {\n    document.title = getTitle(pageTitle)\n  }, [])\n  //end::TITLE_FUNC\n\n  return (\n    <div className='card'>\n      <PageTitle breadcrumbs={breadcrumbs}>{pageTitle}</PageTitle>\n      <div className='card-body'>\n        <AlertSuccess message={success} handleClose={() => setSuccess('')} />\n        <form className='form w-100' onSubmit={formik.handleSubmit} noValidate>\n          <div className='mb-10 col'>\n            <div className='col-12 col-md-6 mb-10 mb-md-0 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Limit Name<span className='text-danger'>*</span>\n              </label>\n              <input\n                placeholder='Input Limit Name'\n                {...formik.getFieldProps('limit_name')}\n                className={clsx('form-control form-control-lg form-control-solid', {\n                  'border-danger': formik.touched.limit_name && formik.errors.limit_name,\n                })}\n                type='text'\n                name='limit_name'\n                autoComplete='off'\n              />\n              {formik.touched.limit_name && formik.errors.limit_name && (\n                <div className='fv-plugins-message-container mt-2 text-danger'>\n                  <span role='alert'>{formik.errors.limit_name}</span>\n                </div>\n              )}\n            </div>\n            <div className='col-12 col-md-6 mb-10 mb-md-0 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Description\n              </label>\n              <textarea\n                placeholder='Input Description'\n                {...formik.getFieldProps('limit_description')}\n                className={clsx('form-control form-control-lg form-control-solid', {\n                  'border-danger': formik.touched.limit_description && formik.errors.limit_description,\n                })}\n                name='limit_description'\n                autoComplete='off'\n              />\n              {formik.touched.limit_description && formik.errors.limit_description && (\n                <div className='fv-plugins-message-container mt-2 text-danger'>\n                  <span role='alert'>{formik.errors.limit_description}</span>\n                </div>\n              )}\n            </div>\n            <div className='col-12 col-md-6 mb-10 mb-md-0 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Rules\n              </label>\n              <input\n                placeholder='Input Rules'\n                {...formik.getFieldProps('limit_rules')}\n                className={clsx('form-control form-control-lg form-control-solid', {\n                  'border-danger': formik.touched.limit_rules && formik.errors.limit_rules,\n                })}\n                name='limit_rules'\n                autoComplete='off'\n                type='text'\n              />\n              {formik.touched.limit_rules && formik.errors.limit_rules && (\n                <div className='fv-plugins-message-container mt-2 text-danger'>\n                  <span role='alert'>{formik.errors.limit_rules}</span>\n                </div>\n              )}\n            </div>\n            <div className='col-12 col-md-6 mb-10 mb-md-0 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Limit Type\n              </label>\n              <input\n                placeholder='Input Limit Type'\n                {...formik.getFieldProps('limit_type')}\n                className={clsx('form-control form-control-lg form-control-solid', {\n                  'border-danger': formik.touched.limit_type && formik.errors.limit_type,\n                })}\n                type='text'\n                name='limit_type'\n                autoComplete='off'\n              />\n              {formik.touched.limit_type && formik.errors.limit_type && (\n                <div className='fv-plugins-message-container mt-2 text-danger'>\n                  <span role='alert'>{formik.errors.limit_type}</span>\n                </div>\n              )}\n            </div>\n            <div className='col-12 col-md-6 mt-10'>\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\n                Status<span className='text-danger'>*</span>\n              </label>\n              <Select\n                placeholder='Select'\n                cacheOptions\n                defaultOptions\n                components={ReactSelectMetronicTheme as SelectComponentsConfig<any, true>}\n                value={selectedStatus}\n                options={statList}\n                onChange={(value: any) => {\n                  setSelectedStatus(value)\n                  formik.setFieldValue('status', value.value)\n                }}\n              />\n              {formik.touched.status && formik.errors.status && (\n                <div className='fv-plugins-message-container mt-3 text-danger'>\n                  <span role='alert'>{formik.errors.status}</span>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className='border-top pt-10 cardfooter-btns'>\n            <button\n              type='button'\n              className={`btn btn-lg btn-light fw-bolder me-4`}\n              onClick={() => history.goBack()}\n              tabIndex={8}\n            >\n              Cancel\n            </button>\n            <button\n              type='submit'\n              className='btn btn-lg btn-secondary fw-bolder me-4'\n              disabled={formik.isSubmitting}\n            >\n              {!loading && <span className='indicator-label'>Save</span>}\n              {loading && (\n                <span className='indicator-progress' style={{display: 'block'}}>\n                  Please wait...\n                  <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\n                </span>\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport {EditLimit}\n","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/profile/Screens.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/explore/Toggle.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/partials/layout/explore/Demos.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/LogoutModal.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Condition/redux/MasterConditionCRUD.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/ConditionType/redux/MasterConditionTypeCRUD.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Rules/redux/MasterRulesCRUD.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Component/redux/MasterComponentCRUD.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Rules/components/DeleteMasterRulesModal.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Condition/components/DeleteMasterConditionModal.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherRules/redux/VoucherRulesCRUD.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Component/components/DeleteMasterComponentModal.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/CampaignType/redux/MasterCampaignTypeCRUD.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/VoucherRules/components/DeleteVoucherRulesModal.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/components/aside/AsideMenuItemWithSub.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/layout/components/aside/AsideMenuItem.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/ConditionType/components/DeleteMasterConditionTypeModal.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/CampaignType/components/DeleteMasterCampaignTypeModal.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Limit/redux/LimitCRUD.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/BenefitType/components/DeleteMasterBenefitTypeModal.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/master/Limit/components/DeleteLimitModal.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/dashboard/DashboardRoutes.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/dashboard/Screen.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/modules/dashboard/page/Dashboard/index.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/hooks/width-hook.ts",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/dashboard/Gmv/index.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/cards/Summary.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/_metronic/helpers/convertToRupiah.ts",["1096"],"export const convertToRupiah = (number:number) => {\n    let numberrev;\n    let rupiah = '';\n    if (\n      number === null ||\n      number === undefined ||\n      typeof number === 'undefined' ||\n      typeof number === 'string'\n    ) {\n      numberrev = 0;\n    } else {\n      numberrev = number.toString().split('').reverse().join('');\n      for (let i = 0; i < numberrev.length; i++)\n        if (i % 3 == 0) rupiah += numberrev.substr(i, 3) + '.';\n      return (\n        'Rp. ' +\n        rupiah\n          .split('', rupiah.length - 1)\n          .reverse()\n          .join('')\n      );\n    }\n};\n  ","/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/dashboard/Revenue/index.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/dashboard/Transaction/index.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/dashboard/BuContribution/index.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/charts/apex/ApexRadiarChart.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/charts/apex/ApexLineChart.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/dashboard/VisualizationData/index.tsx",[],"/Users/adekferdian/Documents/Edot/new/athena-web/src/app/components/charts/apex/ApexColumnCharts.tsx",[],{"ruleId":"1097","replacedBy":"1098"},{"ruleId":"1099","replacedBy":"1100"},{"ruleId":"1101","severity":1,"message":"1102","line":21,"column":3,"nodeType":"1103","messageId":"1104","endLine":21,"endColumn":29},{"ruleId":"1101","severity":1,"message":"1102","line":23,"column":4,"nodeType":"1103","messageId":"1104","endLine":23,"endColumn":28},{"ruleId":"1105","severity":1,"message":"1106","line":9,"column":10,"nodeType":"1107","messageId":"1108","endLine":9,"endColumn":17},{"ruleId":"1105","severity":1,"message":"1109","line":12,"column":10,"nodeType":"1107","messageId":"1108","endLine":12,"endColumn":18},{"ruleId":"1105","severity":1,"message":"1110","line":51,"column":10,"nodeType":"1107","messageId":"1108","endLine":51,"endColumn":24},{"ruleId":"1105","severity":1,"message":"1111","line":51,"column":26,"nodeType":"1107","messageId":"1108","endLine":51,"endColumn":43},{"ruleId":"1112","severity":1,"message":"1113","line":331,"column":242,"nodeType":"1114","messageId":"1115","endLine":331,"endColumn":243},{"ruleId":"1112","severity":1,"message":"1113","line":434,"column":244,"nodeType":"1114","messageId":"1115","endLine":434,"endColumn":245},{"ruleId":"1112","severity":1,"message":"1113","line":537,"column":246,"nodeType":"1114","messageId":"1115","endLine":537,"endColumn":247},{"ruleId":"1112","severity":1,"message":"1113","line":640,"column":248,"nodeType":"1114","messageId":"1115","endLine":640,"endColumn":249},{"ruleId":"1112","severity":1,"message":"1113","line":743,"column":250,"nodeType":"1114","messageId":"1115","endLine":743,"endColumn":251},{"ruleId":"1105","severity":1,"message":"1116","line":36,"column":10,"nodeType":"1107","messageId":"1108","endLine":36,"endColumn":14},{"ruleId":"1105","severity":1,"message":"1117","line":37,"column":10,"nodeType":"1107","messageId":"1108","endLine":37,"endColumn":14},{"ruleId":"1105","severity":1,"message":"1116","line":34,"column":10,"nodeType":"1107","messageId":"1108","endLine":34,"endColumn":14},{"ruleId":"1105","severity":1,"message":"1117","line":35,"column":10,"nodeType":"1107","messageId":"1108","endLine":35,"endColumn":14},{"ruleId":"1105","severity":1,"message":"1118","line":38,"column":10,"nodeType":"1107","messageId":"1108","endLine":38,"endColumn":24},{"ruleId":"1105","severity":1,"message":"1119","line":39,"column":10,"nodeType":"1107","messageId":"1108","endLine":39,"endColumn":24},{"ruleId":"1105","severity":1,"message":"1120","line":42,"column":10,"nodeType":"1107","messageId":"1108","endLine":42,"endColumn":19},{"ruleId":"1105","severity":1,"message":"1121","line":42,"column":21,"nodeType":"1107","messageId":"1108","endLine":42,"endColumn":33},{"ruleId":"1105","severity":1,"message":"1122","line":43,"column":10,"nodeType":"1107","messageId":"1108","endLine":43,"endColumn":15},{"ruleId":"1105","severity":1,"message":"1123","line":51,"column":10,"nodeType":"1107","messageId":"1108","endLine":51,"endColumn":24},{"ruleId":"1105","severity":1,"message":"1124","line":52,"column":9,"nodeType":"1107","messageId":"1108","endLine":52,"endColumn":17},{"ruleId":"1105","severity":1,"message":"1125","line":57,"column":11,"nodeType":"1107","messageId":"1108","endLine":57,"endColumn":13},{"ruleId":"1105","severity":1,"message":"1126","line":121,"column":9,"nodeType":"1107","messageId":"1108","endLine":121,"endColumn":30},{"ruleId":"1105","severity":1,"message":"1127","line":127,"column":9,"nodeType":"1107","messageId":"1108","endLine":127,"endColumn":30},{"ruleId":"1128","severity":1,"message":"1129","line":136,"column":51,"nodeType":"1114","messageId":"1130","endLine":136,"endColumn":53},{"ruleId":"1105","severity":1,"message":"1131","line":139,"column":9,"nodeType":"1107","messageId":"1108","endLine":139,"endColumn":17},{"ruleId":"1105","severity":1,"message":"1132","line":143,"column":9,"nodeType":"1107","messageId":"1108","endLine":143,"endColumn":23},{"ruleId":"1128","severity":1,"message":"1129","line":471,"column":141,"nodeType":"1114","messageId":"1130","endLine":471,"endColumn":143},{"ruleId":"1128","severity":1,"message":"1129","line":486,"column":141,"nodeType":"1114","messageId":"1130","endLine":486,"endColumn":143},{"ruleId":"1105","severity":1,"message":"1133","line":16,"column":10,"nodeType":"1107","messageId":"1108","endLine":16,"endColumn":24},{"ruleId":"1105","severity":1,"message":"1134","line":16,"column":26,"nodeType":"1107","messageId":"1108","endLine":16,"endColumn":43},{"ruleId":"1105","severity":1,"message":"1135","line":17,"column":10,"nodeType":"1107","messageId":"1108","endLine":17,"endColumn":24},{"ruleId":"1105","severity":1,"message":"1136","line":17,"column":26,"nodeType":"1107","messageId":"1108","endLine":17,"endColumn":43},{"ruleId":"1105","severity":1,"message":"1137","line":18,"column":10,"nodeType":"1107","messageId":"1108","endLine":18,"endColumn":18},{"ruleId":"1105","severity":1,"message":"1138","line":18,"column":20,"nodeType":"1107","messageId":"1108","endLine":18,"endColumn":31},{"ruleId":"1105","severity":1,"message":"1139","line":19,"column":10,"nodeType":"1107","messageId":"1108","endLine":19,"endColumn":21},{"ruleId":"1105","severity":1,"message":"1140","line":19,"column":23,"nodeType":"1107","messageId":"1108","endLine":19,"endColumn":37},{"ruleId":"1105","severity":1,"message":"1141","line":37,"column":10,"nodeType":"1107","messageId":"1108","endLine":37,"endColumn":21},{"ruleId":"1105","severity":1,"message":"1142","line":37,"column":23,"nodeType":"1107","messageId":"1108","endLine":37,"endColumn":37},{"ruleId":"1105","severity":1,"message":"1143","line":38,"column":10,"nodeType":"1107","messageId":"1108","endLine":38,"endColumn":27},{"ruleId":"1105","severity":1,"message":"1144","line":38,"column":29,"nodeType":"1107","messageId":"1108","endLine":38,"endColumn":49},{"ruleId":"1105","severity":1,"message":"1145","line":39,"column":10,"nodeType":"1107","messageId":"1108","endLine":39,"endColumn":26},{"ruleId":"1105","severity":1,"message":"1146","line":39,"column":28,"nodeType":"1107","messageId":"1108","endLine":39,"endColumn":47},{"ruleId":"1105","severity":1,"message":"1147","line":46,"column":32,"nodeType":"1107","messageId":"1108","endLine":46,"endColumn":55},{"ruleId":"1105","severity":1,"message":"1116","line":33,"column":10,"nodeType":"1107","messageId":"1108","endLine":33,"endColumn":14},{"ruleId":"1105","severity":1,"message":"1117","line":34,"column":10,"nodeType":"1107","messageId":"1108","endLine":34,"endColumn":14},{"ruleId":"1105","severity":1,"message":"1116","line":34,"column":10,"nodeType":"1107","messageId":"1108","endLine":34,"endColumn":14},{"ruleId":"1105","severity":1,"message":"1117","line":35,"column":10,"nodeType":"1107","messageId":"1108","endLine":35,"endColumn":14},{"ruleId":"1105","severity":1,"message":"1117","line":39,"column":10,"nodeType":"1107","messageId":"1108","endLine":39,"endColumn":14},{"ruleId":"1105","severity":1,"message":"1116","line":34,"column":10,"nodeType":"1107","messageId":"1108","endLine":34,"endColumn":14},{"ruleId":"1105","severity":1,"message":"1117","line":35,"column":10,"nodeType":"1107","messageId":"1108","endLine":35,"endColumn":14},{"ruleId":"1105","severity":1,"message":"1116","line":34,"column":10,"nodeType":"1107","messageId":"1108","endLine":34,"endColumn":14},{"ruleId":"1105","severity":1,"message":"1117","line":35,"column":10,"nodeType":"1107","messageId":"1108","endLine":35,"endColumn":14},{"ruleId":"1105","severity":1,"message":"1116","line":31,"column":10,"nodeType":"1107","messageId":"1108","endLine":31,"endColumn":14},{"ruleId":"1105","severity":1,"message":"1117","line":32,"column":10,"nodeType":"1107","messageId":"1108","endLine":32,"endColumn":14},{"ruleId":"1105","severity":1,"message":"1116","line":34,"column":10,"nodeType":"1107","messageId":"1108","endLine":34,"endColumn":14},{"ruleId":"1105","severity":1,"message":"1117","line":35,"column":10,"nodeType":"1107","messageId":"1108","endLine":35,"endColumn":14},{"ruleId":"1128","severity":1,"message":"1129","line":14,"column":19,"nodeType":"1114","messageId":"1130","endLine":14,"endColumn":21},"no-native-reassign",["1148"],"no-negated-in-lhs",["1149"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","@typescript-eslint/no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","'pathname' is assigned a value but never used.","'handleEditData' is assigned a value but never used.","'setHandleEditData' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'data' is assigned a value but never used.","'save' is assigned a value but never used.","'selectPlatform' is assigned a value but never used.","'selectCampaign' is assigned a value but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","'value' is assigned a value but never used.","'selectedStatus' is assigned a value but never used.","'statList' is assigned a value but never used.","'id' is assigned a value but never used.","'onValueChangePlatform' is assigned a value but never used.","'onValueChangeCampaign' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'onChange' is assigned a value but never used.","'renderDiscount' is assigned a value but never used.","'minTransaction' is assigned a value but never used.","'setMinTransaction' is assigned a value but never used.","'maxTransaction' is assigned a value but never used.","'setMaxTransaction' is assigned a value but never used.","'discount' is assigned a value but never used.","'setDiscount' is assigned a value but never used.","'maxDiscount' is assigned a value but never used.","'setMaxDiscount' is assigned a value but never used.","'voucherCode' is assigned a value but never used.","'setVoucherCode' is assigned a value but never used.","'voucherQuotaTotal' is assigned a value but never used.","'setVoucherQuotaTotal' is assigned a value but never used.","'voucherQuotaEach' is assigned a value but never used.","'setVoucherQuotaEach' is assigned a value but never used.","'setHandleTargetUserData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]