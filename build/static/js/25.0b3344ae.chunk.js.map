{"version":3,"sources":["app/components/AlertSuccess.tsx","app/components/AlertError.tsx","app/modules/profile/page/PasswordPage.tsx","app/modules/profile/components/EditEmailModal.tsx","app/modules/profile/page/ProfilePage.tsx","app/modules/profile/ProfileRoutes.tsx"],"names":["AlertSuccess","message","handleClose","className","role","style","left","top","right","zIndex","path","onClick","AlertError","src","marginRight","schema","Yup","shape","oldPassword","min","required","newPassword","rePassword","test","v","ref","this","resolve","initialValues","PasswordPageTitle","description","PasswordPage","history","useHistory","addPageToasts","useHeaderToast","formik","useFormik","validateOnBlur","validateOnChange","validationSchema","onSubmit","values","setStatus","setSubmitting","setFieldValue","setFieldError","updatePassword","then","text","scheme","catch","useEffect","document","title","getTitle","handleSubmit","InputPassword","label","placeholder","getFieldProps","name","autoComplete","touched","errors","type","flex","disabled","isSubmitting","goBack","requestInitial","email","requestSchema","validateInitial","otp","validateSchema","max","EditEmailRequest","onSuccess","onProcessing","onBack","useSelector","auth","user","shallowEqual","setErrors","updateEmail","e","response","data","constraint","value","clsx","status","EditEmailValidate","dispatch","useDispatch","updateEmailOtp","AuthRedux","actions","setUser","EditEmailModal","show","handleSuccess","useState","newEmail","setNewEmail","processing","setProcessing","close","useCallback","undefined","Modal","tabIndex","onHide","centered","ProfilePageTitle","ProfilePage","emailModal","setEmailModal","loading","setLoading","success","setSuccess","failed","setFailed","fetching","fetchingUser","loaded","setLoaded","updateProfile","requestUser","InputPhone","containerClass","phone","onChangeValue","email_verified_at","borderColor","resendEmailVerification","finally","res","getErrorMessage","nip","ProfileRoutes","ProfileScreens","PASSWORD","PATH","component","PROFILE"],"mappings":"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","file":"static/js/25.0b3344ae.chunk.js","sourcesContent":["import React, {MouseEventHandler} from 'react'\r\nimport {KTSVG} from 'src/_metronic/helpers'\r\n\r\ninterface AlertSuccessProps {\r\n  message?: string\r\n  handleClose: MouseEventHandler<HTMLDivElement>\r\n}\r\n\r\nconst AlertSuccess = ({message, handleClose}: AlertSuccessProps) => {\r\n  if (!message) return null\r\n\r\n  return (\r\n    <div\r\n      className='alert_success position-absolute'\r\n      role='alert'\r\n      style={{left: 0, top: 0, right: 0, zIndex: 2}}\r\n    >\r\n      <div className='d-flex align-items-center'>\r\n        <div className='btn btn-icon btn-sm btn-transparent'>\r\n          <KTSVG className='svg-icon-2' path='/media/icons/efood/ButtonSuccess.svg' />\r\n        </div>\r\n        <p>{message}</p>\r\n      </div>\r\n      <div className='btn btn-icon btn-sm btn-transparent' onClick={handleClose}>\r\n        <KTSVG className='svg-icon-2' path='/media/icons/efood/ButtonClose.svg' />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlertSuccess\r\n","import React, {MouseEventHandler} from 'react'\r\nimport InlineSVG from 'react-inlinesvg/esm'\r\nimport {KTSVG} from 'src/_metronic/helpers'\r\n\r\ninterface AlertErrorProps {\r\n  message?: string\r\n  handleClose: MouseEventHandler<HTMLDivElement>\r\n}\r\n\r\nconst AlertError = ({message, handleClose}: AlertErrorProps) => {\r\n  if (!message) return null\r\n\r\n  return (\r\n    <div\r\n      className='alert_error position-absolute'\r\n      role='alert'\r\n      style={{left: 0, top: 0, right: 0, zIndex: 2}}\r\n    >\r\n      <div className='d-flex align-items-center'>\r\n        <InlineSVG src={'/media/icons/efood/IconWarning.svg'} style={{marginRight: 16}} />\r\n        <p>{message}</p>\r\n      </div>\r\n      <div className='btn btn-icon btn-sm btn-transparent' onClick={handleClose}>\r\n        <KTSVG className='svg-icon-2' path='/media/icons/efood/ButtonClose.svg' />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlertError\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {FC, useEffect} from 'react'\r\nimport * as Yup from 'yup'\r\nimport {getTitle} from 'src/app/utils/title-utils'\r\nimport {PageTitle} from '../../../../_metronic/layout/core'\r\nimport {useFormik} from 'formik'\r\nimport {updatePassword} from '../../auth/redux/AuthCRUD'\r\nimport {useHistory} from 'react-router'\r\nimport {useHeaderToast} from 'src/app/components/ToastComponent'\r\nimport InputPassword from 'src/app/components/InputPassword'\r\n\r\nconst schema = Yup.object().shape({\r\n  oldPassword: Yup.string().min(6, 'Password minimal 6 karakter').required('Kolom wajib diisi'),\r\n  newPassword: Yup.string().min(6, 'Password minimal 6 karakter').required('Kolom wajib diisi'),\r\n  rePassword: Yup.string()\r\n    .min(6, 'Password minimal 6 karakter')\r\n    .required('Kolom wajib diisi')\r\n    .test('equal', 'Konfirmasi Password Baru harus sama dengan Password Baru.', function (v) {\r\n      // Don't use arrow functions\r\n      const ref = Yup.ref('newPassword')\r\n      return v === this.resolve(ref)\r\n    }),\r\n})\r\n\r\nconst initialValues = {\r\n  oldPassword: '',\r\n  newPassword: '',\r\n  rePassword: '',\r\n}\r\n\r\nconst PasswordPageTitle: FC = () => {\r\n  return <PageTitle description='Ubah Password'>Ubah Password</PageTitle>\r\n}\r\n\r\nconst PasswordPage: FC = () => {\r\n  const history = useHistory()\r\n  const {addPageToasts} = useHeaderToast()\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validateOnBlur: false,\r\n    validateOnChange: false,\r\n    validationSchema: schema,\r\n    onSubmit: (values, {setStatus, setSubmitting, setFieldValue, setFieldError}) => {\r\n      updatePassword(values.oldPassword, values.newPassword)\r\n        .then(() => {\r\n          setFieldValue('oldPassword', '')\r\n          setFieldValue('newPassword', '')\r\n          setFieldValue('rePassword', '')\r\n          addPageToasts({\r\n            text: 'Password berhasil diubah.',\r\n            scheme: 'info',\r\n          })\r\n          setSubmitting(false)\r\n        })\r\n        .catch(() => {\r\n          setFieldError('oldPassword', 'Password Saat Ini salah. Coba lagi.')\r\n          setSubmitting(false)\r\n          setStatus('')\r\n        })\r\n    },\r\n  })\r\n  useEffect(() => {\r\n    document.title = getTitle('Ubah Password')\r\n  }, [])\r\n\r\n  return (\r\n    <div className='position-relative'>\r\n      <PasswordPageTitle />\r\n      <div className='card'>\r\n        <div className='card-body'>\r\n          <form onSubmit={formik.handleSubmit} className='col-md-6'>\r\n            <div className='fv-row mb-10'>\r\n              <InputPassword\r\n                label='Password Saat Ini'\r\n                placeholder=''\r\n                {...formik.getFieldProps('oldPassword')}\r\n                name='oldPassword'\r\n                autoComplete='off'\r\n              />\r\n              {formik.touched.oldPassword && formik.errors.oldPassword && (\r\n                <div className='fv-plugins-message-container text-danger'>\r\n                  <span role='alert'>{formik.errors.oldPassword}</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className='fv-row mb-10'>\r\n              <InputPassword\r\n                label='Password Baru'\r\n                {...formik.getFieldProps('newPassword')}\r\n                name='newPassword'\r\n                autoComplete='off'\r\n              />\r\n              <div className='fv-plugins-message-container text-muted'>\r\n                <span role='alert'>Password minimal 6 karakter.</span>\r\n              </div>\r\n              {formik.touched.newPassword && formik.errors.newPassword && (\r\n                <div className='fv-plugins-message-container text-danger'>\r\n                  <span role='alert'>{formik.errors.newPassword}</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className='fv-row mb-10'>\r\n              <InputPassword\r\n                label='Konfirmasi (Ulangi) Password Baru'\r\n                {...formik.getFieldProps('rePassword')}\r\n                name='rePassword'\r\n                autoComplete='off'\r\n              />\r\n              {formik.touched.rePassword && formik.errors.rePassword && (\r\n                <div className='fv-plugins-message-container text-danger'>\r\n                  <span role='alert'>{formik.errors.rePassword}</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <button\r\n                type='button'\r\n                className={`btn btn-lg btn-light fw-bolder me-4`}\r\n                style={{flex: 1}}\r\n                disabled={formik.isSubmitting}\r\n                onClick={() => history.goBack()}\r\n              >\r\n                Kembali\r\n              </button>\r\n              <button\r\n                type='submit'\r\n                className='btn btn-lg btn-secondary fw-bolder'\r\n                style={{flex: 1}}\r\n                disabled={formik.isSubmitting}\r\n              >\r\n                <span className='indicator-label'>Simpan</span>\r\n                {formik.isSubmitting && (\r\n                  <span className='indicator-progress'>\r\n                    Mohon Tunggu...\r\n                    <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                  </span>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {PasswordPage}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport clsx from 'clsx'\r\nimport {useFormik} from 'formik'\r\nimport React, {useCallback, useEffect, useState} from 'react'\r\nimport {Modal} from 'react-bootstrap-v5'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport {RootState} from 'src/setup'\r\nimport {KTSVG} from 'src/_metronic/helpers'\r\nimport * as Yup from 'yup'\r\nimport {updateEmail, updateEmailOtp} from '../../auth/redux/AuthCRUD'\r\nimport AuthRedux from '../../auth/redux/AuthRedux'\r\n\r\ntype Props = {\r\n  show: boolean\r\n  handleClose: () => void\r\n  handleSuccess: () => void\r\n}\r\n\r\ntype RequestProps = {\r\n  onSuccess: (email: string) => void\r\n  onProcessing: (processing: boolean) => void\r\n  onBack: () => void\r\n}\r\n\r\ntype ValidateProps = {\r\n  email: string\r\n  onSuccess: () => void\r\n  onProcessing: (processing: boolean) => void\r\n  onBack: () => void\r\n}\r\n\r\nconst requestInitial = {\r\n  email: '',\r\n}\r\n\r\nconst requestSchema = Yup.object().shape({\r\n  email: Yup.string().email('Format email salah').required('Kolom wajib diisi'),\r\n})\r\n\r\nconst validateInitial = {\r\n  otp: '',\r\n}\r\n\r\nconst validateSchema = Yup.object().shape({\r\n  otp: Yup.string()\r\n    .min(4, 'Kolom wajib diisi')\r\n    .max(4, 'Kolom wajib diisi')\r\n    .required('Kolom wajib diisi'),\r\n})\r\n\r\nconst EditEmailRequest: React.FC<RequestProps> = ({onSuccess, onProcessing, onBack}) => {\r\n  const email = useSelector<RootState>(({auth}) => auth.user?.email, shallowEqual) as\r\n    | string\r\n    | undefined\r\n    | null\r\n  const formik = useFormik({\r\n    initialValues: requestInitial,\r\n    validateOnBlur: false,\r\n    validateOnChange: false,\r\n    validationSchema: requestSchema,\r\n    onSubmit: (values, {setStatus, setSubmitting, setErrors}) => {\r\n      onProcessing(true)\r\n      updateEmail(values.email)\r\n        .then(() => {\r\n          onProcessing(false)\r\n          setSubmitting(false)\r\n          onSuccess(values.email)\r\n        })\r\n        .catch((e) => {\r\n          onProcessing(false)\r\n          setSubmitting(false)\r\n          setStatus(e?.response?.data?.message[0]?.constraint[0]?.message)\r\n          setErrors({email: e?.response?.data?.message[0]?.constraint[0]?.message})\r\n        })\r\n    },\r\n  })\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <div className='modal-body'>\r\n        <div className='fv-row mb-10'>\r\n          <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\r\n            Email saat ini\r\n          </label>\r\n          <input\r\n            placeholder=''\r\n            value={email ?? ''}\r\n            className={clsx('form-control form-control-lg')}\r\n            type='text'\r\n            disabled\r\n            autoComplete='off'\r\n          />\r\n        </div>\r\n        <div className='fv-row mb-10'>\r\n          <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>Email Baru*</label>\r\n          <input\r\n            placeholder=''\r\n            {...formik.getFieldProps('email')}\r\n            className={clsx('form-control form-control-lg form-control-solid text-gray-900', {\r\n              'is-invalid': formik.status || (formik.touched.email && formik.errors.email),\r\n            })}\r\n            type='email'\r\n            name='email'\r\n            autoComplete='off'\r\n          />\r\n          {formik.touched.email && formik.errors.email && (\r\n            <div className='fv-plugins-message-container text-danger'>\r\n              <span role='alert'>{formik.errors.email}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button\r\n          type='button'\r\n          className={`btn btn-lg btn-light fw-bolder me-4`}\r\n          disabled={formik.isSubmitting}\r\n          onClick={onBack}\r\n        >\r\n          Kembali\r\n        </button>{' '}\r\n        <button\r\n          type='submit'\r\n          className='btn btn-lg btn-secondary fw-bolder'\r\n          disabled={formik.isSubmitting}\r\n        >\r\n          <span className='indicator-label'>Ubah Email</span>\r\n          {formik.isSubmitting && (\r\n            <span className='indicator-progress'>\r\n              Mohon Tunggu...\r\n              <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n            </span>\r\n          )}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst EditEmailValidate: React.FC<ValidateProps> = ({email, onSuccess, onProcessing, onBack}) => {\r\n  const dispatch = useDispatch()\r\n  const formik = useFormik({\r\n    initialValues: validateInitial,\r\n    validateOnBlur: false,\r\n    validateOnChange: false,\r\n    validationSchema: validateSchema,\r\n    onSubmit: (values, {setStatus, setSubmitting}) => {\r\n      onProcessing(true)\r\n      updateEmailOtp(email, values.otp)\r\n        .then(({data}) => {\r\n          onProcessing(false)\r\n          setSubmitting(false)\r\n          dispatch(AuthRedux.actions.setUser(data.data))\r\n          onSuccess()\r\n        })\r\n        .catch(() => {\r\n          onProcessing(false)\r\n          setSubmitting(false)\r\n          setStatus('error')\r\n        })\r\n    },\r\n  })\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <div className='modal-body'>\r\n        <div className='mb-10'>\r\n          Kami telah mengirim link verifikasi ke email baru Anda. Silahkan cek email dan klik link\r\n          untuk melakukan verifikasi ubah email.\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button\r\n          type='button'\r\n          className={`btn btn-lg btn-secondary fw-bolder`}\r\n          onClick={() => {\r\n            onBack()\r\n            onSuccess()\r\n          }}\r\n        >\r\n          Okay\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst EditEmailModal: React.FC<Props> = ({show, handleClose, handleSuccess}) => {\r\n  const [newEmail, setNewEmail] = useState<string>()\r\n  const [processing, setProcessing] = useState(false)\r\n  const close = useCallback(() => {\r\n    if (!processing) handleClose()\r\n  }, [processing])\r\n  useEffect(() => {\r\n    if (show) setNewEmail(undefined)\r\n  }, [show])\r\n\r\n  return (\r\n    <Modal aria-hidden='true' tabIndex='-1' show={show} onHide={close} centered>\r\n      <div className='modal-header d-flex align-items-center justify-content-between'>\r\n        <h3 className='d-flex align-items-center'>\r\n          {newEmail ? 'Verifikasi Ubah Data' : 'Ubah Email'}\r\n        </h3>\r\n\r\n        {/* begin::Close */}\r\n        <div className='btn btn-icon btn-sm btn-active-light-primary ms-2' onClick={close}>\r\n          <KTSVG path='/media/icons/duotune/arrows/arr061.svg' className='svg-icon-2' />\r\n        </div>\r\n        {/* end::Close */}\r\n      </div>\r\n\r\n      {newEmail ? (\r\n        <EditEmailValidate\r\n          email={newEmail}\r\n          onSuccess={() => {\r\n            close()\r\n            handleSuccess()\r\n          }}\r\n          onProcessing={setProcessing}\r\n          onBack={() => setNewEmail(undefined)}\r\n        />\r\n      ) : (\r\n        <EditEmailRequest\r\n          onSuccess={(email) => {\r\n            setNewEmail(email)\r\n            handleSuccess()\r\n          }}\r\n          onProcessing={setProcessing}\r\n          onBack={close}\r\n        />\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default EditEmailModal\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {FC, useEffect, useState} from 'react'\r\nimport * as Yup from 'yup'\r\nimport {getTitle} from 'src/app/utils/title-utils'\r\nimport {PageTitle} from '../../../../_metronic/layout/core'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport {RootState} from 'src/setup'\r\nimport AuthRedux from '../../auth/redux/AuthRedux'\r\nimport {UserModel} from '../../auth/models/UserModel'\r\nimport {resendEmailVerification, updateProfile} from '../../auth/redux/AuthCRUD'\r\nimport {useHistory} from 'react-router'\r\n// import EditPhoneModal from '../components/EditPhoneModal'\r\nimport EditEmailModal from '../components/EditEmailModal'\r\nimport {useHeaderToast} from 'src/app/components/ToastComponent'\r\nimport InputPhone from 'src/app/components/InputPhone'\r\nimport AlertSuccess from 'src/app/components/AlertSuccess'\r\nimport AlertError from 'src/app/components/AlertError'\r\nimport {getErrorMessage} from 'src/app/utils/api-utils'\r\n\r\nconst schema = Yup.object().shape({\r\n  name: Yup.string().required('Kolom wajib diisi'),\r\n})\r\n\r\nconst initialValues = {\r\n  name: '',\r\n}\r\n\r\nconst ProfilePageTitle: FC = () => {\r\n  return <PageTitle description='Profil Saya'>Profil Saya</PageTitle>\r\n}\r\n\r\nconst ProfilePage: FC = () => {\r\n  const history = useHistory()\r\n  const user = useSelector<RootState>(({auth}) => auth.user, shallowEqual) as UserModel\r\n  const [emailModal, setEmailModal] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [success, setSuccess] = useState('')\r\n  const [failed, setFailed] = useState('')\r\n  const {addPageToasts} = useHeaderToast()\r\n  const fetching = useSelector<RootState>(\r\n    ({auth}) => auth.fetchingUser,\r\n    shallowEqual\r\n  ) as AuthRedux.FetchingUserState\r\n  const [loaded, setLoaded] = useState<boolean>()\r\n  const dispatch = useDispatch()\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validateOnBlur: false,\r\n    validateOnChange: false,\r\n    validationSchema: schema,\r\n    onSubmit: (values, {setStatus, setSubmitting}) => {\r\n      updateProfile({name: values.name})\r\n        .then(() => {\r\n          addPageToasts({\r\n            text: 'Data berhasil diubah.',\r\n            scheme: 'info',\r\n          })\r\n          dispatch(AuthRedux.actions.requestUser())\r\n          setSubmitting(false)\r\n        })\r\n        .catch(() => {\r\n          setSubmitting(false)\r\n          setStatus('')\r\n        })\r\n    },\r\n  })\r\n  useEffect(() => {\r\n    document.title = getTitle('Profil Saya')\r\n  }, [])\r\n  useEffect(() => {\r\n    dispatch(AuthRedux.actions.requestUser())\r\n  }, [dispatch])\r\n  useEffect(() => {\r\n    if (loaded === undefined && fetching === 'loading') setLoaded(false)\r\n    else if (loaded === false && fetching !== 'loading') {\r\n      setLoaded(true)\r\n      if (fetching === 'success') {\r\n        formik.setFieldValue('name', user?.name)\r\n      }\r\n    }\r\n  }, [fetching, formik, loaded, user])\r\n\r\n  const handleEmail = () => {\r\n    if (!user?.email || user?.email_verified_at !== null) {\r\n      setEmailModal(true)\r\n    } else {\r\n      if (user?.email) {\r\n        setLoading(true)\r\n        resendEmailVerification(user?.email)\r\n          .finally(() => setLoading(false))\r\n          .then((res) => {\r\n            setSuccess('Berhasil mengirim ulang email verifikasi')\r\n          })\r\n          .catch((e) => {\r\n            setFailed(getErrorMessage(e, true, 'Gagal mengirim ulang email verifikasi'))\r\n          })\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='position-relative'>\r\n      <AlertSuccess message={success} handleClose={() => setSuccess('')} />\r\n      <AlertError message={failed} handleClose={() => setFailed('')} />\r\n      <ProfilePageTitle />\r\n      <div className='card'>\r\n        <div className='card-body'>\r\n          <div className={!loaded ? '' : 'd-none'}>Loading...</div>\r\n          <div className={loaded && fetching === 'failed' ? '' : 'd-none'}>\r\n            Error, try to refresh the page\r\n          </div>\r\n          <form\r\n            className={loaded && fetching !== 'failed' ? 'col-md-6' : 'd-none'}\r\n            onSubmit={formik.handleSubmit}\r\n          >\r\n            <div className='fv-row mb-10'>\r\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>Nama</label>\r\n              <input\r\n                placeholder=''\r\n                {...formik.getFieldProps('name')}\r\n                className={clsx('form-control form-control-lg form-control-solid', {\r\n                  'is-invalid': formik.status || (formik.touched.name && formik.errors.name),\r\n                })}\r\n                type='text'\r\n                name='name'\r\n                autoComplete='off'\r\n              />\r\n              {formik.touched.name && formik.errors.name && (\r\n                <div className='fv-plugins-message-container text-danger'>\r\n                  <span role='alert'>{formik.errors.name}</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className='fv-row mb-10'>\r\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>No. HP</label>\r\n              <div className='row'>\r\n                <div className={`col-9 col-md-9 col-lg-9`}>\r\n                  <InputPhone\r\n                    placeholder=''\r\n                    containerClass='flex-fill'\r\n                    className='form-control form-control-solid form-control-lg'\r\n                    type='text'\r\n                    name='phone'\r\n                    autoComplete='off'\r\n                    value={user?.phone ?? ''}\r\n                    onChangeValue={() => {}}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className='col'>\r\n                  <button\r\n                    type='button'\r\n                    className={`btn btn-lg btn-info fw-bolder`}\r\n                    disabled={formik.isSubmitting}\r\n                    onClick={() => {}}\r\n                  >\r\n                    Ubah\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='fv-row mb-10'>\r\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>Email</label>\r\n              <div className='row'>\r\n                <div\r\n                  className={`col-9 ${\r\n                    !user?.email || user?.email_verified_at !== null\r\n                      ? 'col-md-9 col-lg-9'\r\n                      : 'col-md-6 col-lg-6'\r\n                  }`}\r\n                >\r\n                  <input\r\n                    placeholder=''\r\n                    value={user?.email ?? ''}\r\n                    className={clsx('form-control form-control-solid form-control-lg flex-fill', {\r\n                      'is-invalid': user?.email && user?.email_verified_at === null,\r\n                    })}\r\n                    style={{borderColor: '#e4e6ef'}}\r\n                    type='text'\r\n                    disabled\r\n                    autoComplete='off'\r\n                  />\r\n                  {user?.email && user?.email_verified_at === null && (\r\n                    <div className='fv-plugins-message-container text-danger mt-1'>\r\n                      <span role='alert'>Email belum diverifikasi</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className='col'>\r\n                  <button\r\n                    type='button'\r\n                    className={`btn btn-lg btn-info fw-bolder`}\r\n                    disabled={loading}\r\n                    onClick={handleEmail}\r\n                  >\r\n                    {!user?.email || user?.email_verified_at !== null\r\n                      ? 'Ubah'\r\n                      : 'Kirim ulang verifikasi'}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='fv-row mb-10'>\r\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\r\n                Nomor Induk Karyawan (NIK)\r\n              </label>\r\n              <input\r\n                placeholder=''\r\n                value={user?.nip ?? ''}\r\n                className={clsx('form-control form-control-solid form-control-lg')}\r\n                type='text'\r\n                disabled\r\n                autoComplete='off'\r\n              />\r\n            </div>\r\n            <div className='fv-row mb-10'>\r\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>Role</label>\r\n              <input\r\n                placeholder=''\r\n                value={user?.role?.name ?? ''}\r\n                className={clsx('form-control form-control-solid form-control-lg')}\r\n                type='text'\r\n                disabled\r\n                autoComplete='off'\r\n              />\r\n            </div>\r\n            <div>\r\n              <button\r\n                type='button'\r\n                className={`btn btn-lg btn-light fw-bolder me-4`}\r\n                disabled={formik.isSubmitting}\r\n                onClick={() => history.goBack()}\r\n              >\r\n                Kembali\r\n              </button>{' '}\r\n              <button\r\n                type='submit'\r\n                className='btn btn-lg btn-secondary fw-bolder'\r\n                disabled={formik.isSubmitting}\r\n              >\r\n                <span className='indicator-label'>Simpan Perubahan</span>\r\n                {formik.isSubmitting && (\r\n                  <span className='indicator-progress'>\r\n                    Mohon Tunggu...\r\n                    <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                  </span>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      {/* <EditPhoneModal\r\n        show={phoneModal}\r\n        handleClose={() => setPhoneModal(false)}\r\n        handleSuccess={() => {\r\n          addPageToasts({\r\n            text: 'No. HP berhasil diubah.',\r\n            scheme: 'info',\r\n          })\r\n        }}\r\n      /> */}\r\n      <EditEmailModal\r\n        show={emailModal}\r\n        handleClose={() => setEmailModal(false)}\r\n        handleSuccess={() => {\r\n          dispatch(AuthRedux.actions.requestUser())\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {ProfilePage}\r\n","import React from 'react'\r\nimport {Route, Switch} from 'react-router-dom'\r\nimport {PasswordPage} from './page/PasswordPage'\r\nimport {ProfilePage} from './page/ProfilePage'\r\nimport ProfileScreens from './Screens'\r\n\r\nconst ProfileRoutes: React.FC = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path={ProfileScreens.PASSWORD.PATH} component={PasswordPage} />\r\n      <Route path={ProfileScreens.PROFILE.PATH} component={ProfilePage} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default ProfileRoutes\r\n"],"sourceRoot":""}