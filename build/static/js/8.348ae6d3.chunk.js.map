{"version":3,"sources":["app/components/CustomReactSelect.tsx","app/components/Pagination.tsx","app/components/AlertError.tsx","app/hooks/permissions-hook.ts","app/hooks/useDebounce.tsx","app/modules/role-management/models/Role.ts","app/modules/role-management/redux/RoleCRUD.ts","app/modules/role-management/utils.ts","app/modules/role-management/page/RoleRegister.tsx","app/modules/role-management/page/RoleDetail.tsx","app/modules/role-management/page/RoleList.tsx","app/modules/role-management/page/SpecialRoleList.tsx","app/modules/role-management/page/SpecialRoleDetail.tsx","app/modules/role-management/RoleManagementRoutes.tsx"],"names":["ReactSelectMetronicTheme","Control","children","isFocused","isDisabled","rest","className","clsx","focus","disabled","IndicatorSeparator","Pagination","loading","limit","setPerPage","page","setPage","maxData","pageNum","useMemo","Math","ceil","pageList","result","normalizedPage","min","max","i","push","undefined","src","autoComplete","value","onChange","e","Number","currentTarget","length","onClick","map","x","AlertError","message","handleClose","role","style","left","top","right","zIndex","marginRight","path","usePermissions","pageQuery","permissions","useSelector","auth","shallowEqual","hasAccess","useCallback","q","code","Boolean","find","data","access","canAccessPage","useDebounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","RolePlatform","RolePermissions","ROLES","SPECIAL_ROLES","getRoles","props","cancelToken","axios","get","params","getDetailRole","id","registerRole","post","getModules","updateRole","put","handlePlatform","HERMES_CORPORATE","HERMES_BRAND","HERMES_STORE","ZEUS","handleSectionCapitalize","split","join","trim","toLowerCase","replace","w","c","toUpperCase","initialValues","name","module_permissions","validationSchema","Yup","shape","required","RoleRegister","modules","setModules","section","useParams","history","useHistory","addPageToasts","useHeaderToast","formik","useFormik","validateOnBlur","validateOnChange","onSubmit","values","setSubmitting","platform","status","RoleManagementScreens","ROLE_LIST","buildPath","scheme","text","getErrorMessage","updateChecked","setUpdateChecked","handleCheck","field","index","findIndex","it","module_id","includes","filter","item","setFieldValue","Date","now","isAllChecked","every","module","setIsAllChecked","checked","forEach","getListModule","res","items","console","log","pageTitle","breadcrumbs","isActive","title","isSeparator","document","getTitle","setStatus","handleSubmit","noValidate","getFieldProps","type","colSpan","READ","CREATE","UPDATE","DELETE","isSubmitting","RoleDetail","setData","tmp","getRole","Array","isArray","active_permissions","RoleList","search","setFilter","errorMessage","setErrorMessage","deleteItem","setDeleteItem","setLoading","isFailed","setIsFailed","showDelete","setShowDelete","dispatch","useDispatch","roles","isLoading","filterDebounce","getPermissionModule","getList","RolesRedux","actions","getListRole","setIsLoading","list","state","titleAlt","locationState","location","description","show","handleProcess","delete","then","catch","error","placeholder","event","target","minWidth","to","special_role","permission","total_item","ModalDelete","Modal","tabIndex","dialogClassName","onHide","centered","SpecialRoleList","setSearch","searchDebounce","getSpecialRoles","DETAIL_SPECIAL_ROLES","label","SpecialRoleDetail","setRoles","setUpdateSpecialRole","role_id","PATH","getDetailSpecialRole","options","err","maxLength","cacheOptions","defaultOptions","components","deeplink_type","StoreRoutes","component","exact","ROLE_DETAIL","ROLE_REGISTER"],"mappings":"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","file":"static/js/8.348ae6d3.chunk.js","sourcesContent":["import clsx from 'clsx'\r\nimport React from 'react'\r\nimport {components, ControlProps, GroupTypeBase, OptionTypeBase} from 'react-select'\r\n\r\nconst Control = <\r\n  OptionType extends OptionTypeBase,\r\n  IsMulti extends boolean,\r\n  GroupType extends GroupTypeBase<OptionType> = GroupTypeBase<OptionType>\r\n>({\r\n  children,\r\n  isFocused,\r\n  isDisabled,\r\n  ...rest\r\n}: ControlProps<OptionType, IsMulti, GroupType>) => (\r\n  <components.Control\r\n    className={clsx('form-control border-0 form-control-lg-select form-control-solid', {\r\n      focus: isFocused,\r\n      disabled: isDisabled,\r\n    })}\r\n    isFocused\r\n    isDisabled\r\n    {...rest}\r\n  >\r\n    {children}\r\n  </components.Control>\r\n)\r\n\r\nconst IndicatorSeparator = () => null\r\n\r\nexport interface LabelValueProps {\r\n  label?: string\r\n  value?: string\r\n}\r\n\r\nexport interface LabelValuePropsAny {\r\n  label?: string\r\n  value?: any\r\n}\r\n\r\nexport const ReactSelectMetronicTheme = {\r\n  Control,\r\n  IndicatorSeparator,\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {FC, useMemo} from 'react'\r\nimport InlineSVG from 'react-inlinesvg/esm'\r\n\r\ntype PaginationProps = {\r\n  loading: boolean\r\n  limit: number\r\n  setPerPage: (number: number) => void\r\n  page: number\r\n  setPage: (number: number) => void\r\n  maxData: number\r\n}\r\n\r\nconst Pagination: FC<PaginationProps> = ({loading, limit, setPerPage, page, setPage, maxData}) => {\r\n  const pageNum = useMemo(() => Math.ceil(maxData / limit), [maxData, limit])\r\n  const pageList = useMemo(() => {\r\n    const result: (number | undefined)[] = []\r\n    if (pageNum === 0) return result\r\n    const normalizedPage = Math.min(pageNum, Math.max(0, page))\r\n    if (pageNum < 8)\r\n      for (let i = 1; i <= pageNum; i++) {\r\n        result.push(i)\r\n      }\r\n    else {\r\n      if (normalizedPage > 4) result.push(1, undefined, Math.min(normalizedPage, pageNum - 3) - 1)\r\n      else result.push(1, 2, 3, 4)\r\n      if (normalizedPage + 3 < pageNum) {\r\n        if (normalizedPage > 4) result.push(normalizedPage)\r\n        result.push(Math.max(normalizedPage, 4) + 1, undefined, pageNum)\r\n      } else result.push(pageNum - 3, pageNum - 2, pageNum - 1, pageNum)\r\n    }\r\n    return result\r\n  }, [pageNum, page])\r\n  return (\r\n    <div className='d-flex flex-wrap'>\r\n      <div className='mb-4 w-md-auto w-100 d-flex align-items-center'>\r\n        <div className='position-relative'>\r\n          <InlineSVG\r\n            src={'/media/icons/efood/IconChevronDown.svg'}\r\n            className='position-absolute translate-middle-y top-50 me-4 end-0 pe-none'\r\n          />\r\n          <select\r\n            className='form-control form-control-sm form-control-solid pe-13'\r\n            autoComplete='off'\r\n            value={limit}\r\n            onChange={(e) => setPerPage(Number(e.currentTarget.value))}\r\n          >\r\n            <option>10</option>\r\n            <option>20</option>\r\n            <option>50</option>\r\n            <option>100</option>\r\n          </select>\r\n        </div>\r\n        {loading || maxData === 0 ? null : (\r\n          <span className='ms-5 flex-shrink-0'>\r\n            Menampilkan {(page - 1) * limit + 1}-{Math.min(maxData, (page - 1) * limit + limit)}{' '}\r\n            dari {maxData} entri\r\n          </span>\r\n        )}\r\n      </div>\r\n      {pageList.length > 0 ? (\r\n        <ul className='pagination flex-nowrap flex-fill justify-content-md-end'>\r\n          <li className={`page-item previous ${page === 1 ? 'disabled' : ''}`}>\r\n            <button onClick={() => setPage(page - 1)} className='page-link'>\r\n              <i className='previous'></i>\r\n            </button>\r\n          </li>\r\n          {pageList.map((x, i) =>\r\n            x === undefined ? (\r\n              <li className='page-item disabled' key={`${i}-dot`}>\r\n                <button className='page-link'>...</button>\r\n              </li>\r\n            ) : (\r\n              <li className={`page-item ${page === x ? 'active' : ''}`} key={x}>\r\n                <button onClick={() => setPage(x)} className='page-link'>\r\n                  {x}\r\n                </button>\r\n              </li>\r\n            )\r\n          )}\r\n          <li className={`page-item next ${page === pageNum ? 'disabled' : ''}`}>\r\n            <button onClick={() => setPage(page + 1)} className='page-link'>\r\n              <i className='next'></i>\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n","import React, {MouseEventHandler} from 'react'\r\nimport InlineSVG from 'react-inlinesvg/esm'\r\nimport {KTSVG} from 'src/_metronic/helpers'\r\n\r\ninterface AlertErrorProps {\r\n  message?: string\r\n  handleClose: MouseEventHandler<HTMLDivElement>\r\n}\r\n\r\nconst AlertError = ({message, handleClose}: AlertErrorProps) => {\r\n  if (!message) return null\r\n\r\n  return (\r\n    <div\r\n      className='alert_error position-absolute'\r\n      role='alert'\r\n      style={{left: 0, top: 0, right: 0, zIndex: 2}}\r\n    >\r\n      <div className='d-flex align-items-center'>\r\n        <InlineSVG src={'/media/icons/efood/IconWarning.svg'} style={{marginRight: 16}} />\r\n        <p>{message}</p>\r\n      </div>\r\n      <div className='btn btn-icon btn-sm btn-transparent' onClick={handleClose}>\r\n        <KTSVG className='svg-icon-2' path='/media/icons/efood/ButtonClose.svg' />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlertError\r\n","import {useCallback, useMemo} from 'react'\r\nimport {shallowEqual, useSelector} from 'react-redux'\r\nimport {RootState} from 'src/setup'\r\n\r\nexport interface PermissionQuery {\r\n  code?: string\r\n  access?: string\r\n}\r\n\r\nexport function usePermissions(pageQuery?: PermissionQuery) {\r\n  const permissions = useSelector<RootState>(\r\n    ({auth}) => auth.permissions ?? {},\r\n    shallowEqual\r\n  ) as Record<string, string[]>\r\n  const hasAccess = useCallback(\r\n    (q?: PermissionQuery) => {\r\n      const code = q?.code ?? pageQuery?.code\r\n      if (!code) return true\r\n      return Boolean(\r\n        permissions[code]?.find((data) => data === (q?.access ?? pageQuery?.access ?? 'read'))\r\n      )\r\n    },\r\n    [pageQuery?.access, pageQuery?.code, permissions]\r\n  )\r\n  const canAccessPage = useMemo(() => hasAccess(), [hasAccess])\r\n  return {hasAccess, canAccessPage}\r\n}\r\n","import {useState, useEffect} from 'react'\r\n\r\nconst useDebounce = (value: any, delay: number) => {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value)\r\n\r\n  useEffect(\r\n    () => {\r\n      // Update debounced value after delay\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value)\r\n      }, delay)\r\n      // Cancel the timeout if value changes (also on delay change or unmount)\r\n      // This is how we prevent debounced value from updating if value is changed ...\r\n      // .. within the delay period. Timeout gets cleared and restarted.\r\n      return () => {\r\n        clearTimeout(handler)\r\n      }\r\n    },\r\n    [value, delay] // Only re-call effect if value or delay changes\r\n  )\r\n  return debouncedValue\r\n}\r\n\r\nexport default useDebounce\r\n","export enum RolePlatform {\r\n  ZEUS = 'ZEUS',\r\n  HERMES_CORPORATE = 'HERMES_CORPORATE',\r\n  HERMES_BRAND = 'HERMES_BRAND',\r\n  HERMES_STORE = 'HERMES_STORE',\r\n}\r\n\r\nexport interface RolesQuery {\r\n  search?: string\r\n  limit?: string\r\n  page?: string\r\n  platform?: RolePlatform\r\n  active?: any\r\n}\r\n\r\nexport interface RoleCorporate {\r\n  id?: number\r\n  name?: string\r\n  platform?: string\r\n  module_permissions?: RolePermissionModel[]\r\n  status: any\r\n}\r\n\r\nexport interface RoleModel {\r\n  id: string\r\n  name: string\r\n  is_active: boolean\r\n  platform: string\r\n  module_permissions: RolePermissionModel[]\r\n  special_role: {\r\n    code: string\r\n    id: string\r\n    name: string\r\n    platform: string\r\n    role_id: string\r\n  }\r\n  status: any\r\n}\r\n\r\nexport interface RolePermissionModel {\r\n  id: string\r\n  name: string\r\n  modules: RolePermissionModuleModel[]\r\n}\r\n\r\nexport interface RolePermissionModuleModel {\r\n  active_permissions: string[]\r\n  code: string\r\n  group_id: string\r\n  id: string\r\n  name: string\r\n  permissions: string[]\r\n}\r\n\r\nexport interface RoleModulesModel {\r\n  id: string\r\n  modules: RoleModulesModulesModel[]\r\n  name: string\r\n  platform: string\r\n}\r\nexport interface RoleModulesModulesModel {\r\n  code: string\r\n  group_id: string\r\n  id: string\r\n  name: string\r\n  permissions: RolePermissions[]\r\n  platform: string\r\n}\r\n\r\nexport enum RolePermissions {\r\n  CREATE = 'create',\r\n  READ = 'read',\r\n  UPDATE = 'update',\r\n  DELETE = 'delete',\r\n}\r\n","import axios from 'axios'\r\nimport {BaseResponse, Pagination} from 'src/app/models/api.types'\r\nimport {RolePlatform, RoleModulesModel, RoleModel} from '../models/Role'\r\nimport {SpecialRoleModel} from '../models/SpecialRole'\r\n\r\nexport const ROLES = `api/v1/admins/roles`\r\nexport const MODULES = `api/v1/admins/roles/groups`\r\nexport const SPECIAL_ROLES = `api/v1/auth/special-roles`\r\n\r\nexport function getRoles(\r\n  props: {\r\n    page: number\r\n    limit: number\r\n    search?: string\r\n    platform?: RolePlatform\r\n  },\r\n  cancelToken?: any\r\n) {\r\n  return axios.get<BaseResponse<Pagination<RoleModel>>>(ROLES, {\r\n    params: {\r\n      ...props,\r\n    },\r\n    cancelToken,\r\n  })\r\n}\r\n\r\nexport function getDetailRole(id: string, cancelToken?: any) {\r\n  return axios.get<BaseResponse<RoleModel>>(`${ROLES}/${id}`, {cancelToken})\r\n}\r\n\r\nexport function registerRole(data: any, cancelToken?: any) {\r\n  return axios.post(ROLES, data, {cancelToken})\r\n}\r\n\r\nexport function getModules(\r\n  props: {\r\n    page: number\r\n    limit: number\r\n    search?: string\r\n    platform?: RolePlatform\r\n  },\r\n  cancelToken?: any\r\n) {\r\n  return axios.get<BaseResponse<Pagination<RoleModulesModel>>>(MODULES, {\r\n    params: {\r\n      ...props,\r\n    },\r\n    cancelToken,\r\n  })\r\n}\r\n\r\nexport function updateRole(id: string, data: any, cancelToken?: any) {\r\n  return axios.put(`${ROLES}/${id}`, data, {cancelToken})\r\n}\r\n\r\nexport function deleteRole(id: string, cancelToken?: any) {\r\n  return axios.delete(`${ROLES}/${id}`, {cancelToken})\r\n}\r\n\r\nexport function getSpecialRoles(\r\n  props: {\r\n    page: number\r\n    limit: number\r\n    search?: string\r\n  },\r\n  cancelToken?: any\r\n) {\r\n  return axios.get<BaseResponse<Pagination<SpecialRoleModel>>>(SPECIAL_ROLES, {\r\n    params: {\r\n      ...props,\r\n    },\r\n    cancelToken,\r\n  })\r\n}\r\n\r\nexport function getDetailSpecialRole(id: string, cancelToken?: any) {\r\n  return axios.get<BaseResponse<SpecialRoleModel>>(`${SPECIAL_ROLES}/${id}`, {cancelToken})\r\n}\r\n\r\nexport function setUpdateSpecialRole(id: string, data: {role_id: string}, cancelToken?: any) {\r\n  return axios.put(`${SPECIAL_ROLES}/${id}`, data, {cancelToken})\r\n}\r\n","import {RolePlatform} from './models/Role'\r\n\r\nexport const getPermissionModule = (value: string) => {\r\n  switch (value) {\r\n    case 'role-user-corporate':\r\n      return 'user_role_user_corporate'\r\n    case 'role-user-brand':\r\n      return 'user_role_user_brand'\r\n    case 'role-user-store':\r\n      return 'user_role_user_store'\r\n    default:\r\n      return 'user_role_admin'\r\n  }\r\n}\r\n\r\nexport const handlePlatform = (value: string): RolePlatform => {\r\n  switch (value) {\r\n    case 'role-user-corporate':\r\n      return RolePlatform.HERMES_CORPORATE\r\n    case 'role-user-brand':\r\n      return RolePlatform.HERMES_BRAND\r\n    case 'role-user-store':\r\n      return RolePlatform.HERMES_STORE\r\n    default:\r\n      return RolePlatform.ZEUS\r\n  }\r\n}\r\n\r\nexport const handleSectionCapitalize = (value: string): string => {\r\n  return value\r\n    .split('-')\r\n    .join(' ')\r\n    .trim()\r\n    .toLowerCase()\r\n    .replace(/\\w\\S*/g, (w) => w.replace(/^\\w/, (c) => c.toUpperCase()))\r\n}\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {useFormik} from 'formik'\r\nimport React, {useCallback, useEffect, useMemo, useState} from 'react'\r\nimport * as Yup from 'yup'\r\nimport {getModules, registerRole} from '../redux/RoleCRUD'\r\nimport {RoleModulesModel, RolePermissions} from '../models/Role'\r\nimport {useHistory, useParams} from 'react-router'\r\nimport {PageTitle} from 'src/_metronic/layout/core'\r\nimport {getTitle} from 'src/app/utils/title-utils'\r\nimport {handlePlatform, handleSectionCapitalize} from '../utils'\r\nimport AlertError from 'src/app/components/AlertError'\r\nimport RoleManagementScreens from '../Screens'\r\nimport {useHeaderToast} from 'src/app/components/ToastComponent'\r\nimport {getErrorMessage} from 'src/app/utils/api-utils'\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  module_permissions: [],\r\n}\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string().required('Nama Role wajib diisi.'),\r\n  module_permissions: Yup.array(),\r\n})\r\n\r\nexport const RoleRegister = () => {\r\n  // States\r\n  const [modules, setModules] = useState<RoleModulesModel[]>([])\r\n\r\n  // Variables\r\n  const {section}: any = useParams()\r\n  const history = useHistory()\r\n  const {addPageToasts} = useHeaderToast()\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    validateOnBlur: false,\r\n    validateOnChange: false,\r\n    onSubmit: (values: any, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      setTimeout(async () => {\r\n        try {\r\n          const data: any = {}\r\n          data.platform = handlePlatform(section)\r\n          data.name = values.name\r\n          data.status = 'ACTIVE'\r\n          data.module_permissions = values.module_permissions\r\n\r\n          await registerRole(data)\r\n          setSubmitting(false)\r\n          history.push(RoleManagementScreens.ROLE_LIST.buildPath(section), {\r\n            message: 'Data berhasil disimpan.',\r\n          })\r\n        } catch (error) {\r\n          setSubmitting(false)\r\n          addPageToasts({\r\n            scheme: 'danger',\r\n            text: getErrorMessage(error, true) || 'Tambah Role gagal.',\r\n          })\r\n        }\r\n      }, 1000)\r\n    },\r\n  })\r\n\r\n  // Handlers\r\n  const [updateChecked, setUpdateChecked] = useState<Number>()\r\n  const handleCheck = (id: string, field: 'read' | 'create' | 'update' | 'delete') => {\r\n    const module_permissions: {module_id: string; permissions: string[]}[] =\r\n      formik.values.module_permissions\r\n    const index = module_permissions.findIndex((it: any) => it.module_id === id)\r\n    if (module_permissions[index].permissions.includes(field)) {\r\n      module_permissions[index].permissions = module_permissions[index].permissions.filter(\r\n        (item) => item !== field\r\n      )\r\n    } else {\r\n      module_permissions[index].permissions.push(field)\r\n    }\r\n    formik.setFieldValue('module_permissions', module_permissions)\r\n    setUpdateChecked(Date.now())\r\n  }\r\n\r\n  const isAllChecked = useMemo(() => {\r\n    try {\r\n      let index = -1\r\n      return modules.every((module) => {\r\n        return module.modules.every((item) => {\r\n          index++\r\n          return (\r\n            formik.values.module_permissions[index].permissions.length === item.permissions.length\r\n          )\r\n        })\r\n      })\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [modules, updateChecked])\r\n  const setIsAllChecked = useCallback(\r\n    (checked: boolean) => {\r\n      const module_permissions: any[] = []\r\n      modules.forEach((module) => {\r\n        module.modules.forEach((item) => {\r\n          module_permissions.push({\r\n            module_id: item.id,\r\n            permissions: checked ? [...item.permissions] : [],\r\n          })\r\n        })\r\n      })\r\n      formik.setFieldValue('module_permissions', module_permissions)\r\n      setUpdateChecked(Date.now())\r\n    },\r\n    [modules]\r\n  )\r\n\r\n  // Hooks\r\n  useEffect(() => {\r\n    const getListModule = async () => {\r\n      try {\r\n        let platform = handlePlatform(section)\r\n        const res = await getModules({page: 1, limit: 999999, platform})\r\n        setModules(res.data.data?.items ?? [])\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    getListModule()\r\n  }, [section])\r\n\r\n  useEffect(() => {\r\n    const module_permissions: any[] = []\r\n    modules.map((module) => {\r\n      module.modules.map((item) => {\r\n        module_permissions.push({module_id: item.id, permissions: []})\r\n      })\r\n    })\r\n\r\n    formik.setFieldValue('module_permissions', module_permissions)\r\n    setUpdateChecked(Date.now())\r\n  }, [modules])\r\n\r\n  //start::TITLE_FUNC\r\n  const pageTitle = useMemo(() => 'Tambah Role', [])\r\n\r\n  const breadcrumbs = useMemo(\r\n    () => [\r\n      {\r\n        isActive: false,\r\n        path: `/role-management/${section}`,\r\n        title: `List ${handleSectionCapitalize(section)}`,\r\n      },\r\n      {isActive: false, path: '', title: '', isSeparator: true},\r\n    ],\r\n    [section]\r\n  )\r\n\r\n  useEffect(() => {\r\n    document.title = getTitle(pageTitle)\r\n  }, [])\r\n  //end::TITLE_FUNC\r\n\r\n  useEffect(() => {\r\n    if (formik.status) {\r\n      setTimeout(() => formik.setStatus(''), 5000)\r\n    }\r\n  }, [formik.status])\r\n\r\n  return (\r\n    <div className='card'>\r\n      <AlertError message={formik.status} handleClose={() => formik.setStatus('')} />\r\n      <PageTitle breadcrumbs={breadcrumbs}>{pageTitle}</PageTitle>\r\n      <div className='card-body'>\r\n        <form className='form w-100' onSubmit={formik.handleSubmit} noValidate>\r\n          <div className='mb-10 row'>\r\n            <div className='col-12 col-md-6 mb-10 mb-md-0'>\r\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\r\n                Nama Role*\r\n              </label>\r\n              <input\r\n                {...formik.getFieldProps('name')}\r\n                type='text'\r\n                className='form-control form-control-lg form-control-solid'\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='mb-10'>\r\n            <label className='form-check form-check-custom form-check-solid w-150px'>\r\n              <input\r\n                className='form-check-input'\r\n                type='checkbox'\r\n                onChange={() => setIsAllChecked(!isAllChecked)}\r\n                checked={isAllChecked}\r\n              />\r\n              <span className='form-check-label fw-bold fs-6 min-w-100'>Centang semua akses</span>\r\n            </label>\r\n          </div>\r\n\r\n          <div className='mb-10'>\r\n            <table className='table gy-4 gs-3'>\r\n              <thead>\r\n                <tr className='fw-bold fs-6 text-gray-800'>\r\n                  <th>Modul</th>\r\n                  <th className='text-center'>Read</th>\r\n                  <th className='text-center'>Create</th>\r\n                  <th className='text-center'>Update</th>\r\n                  <th className='text-center'>Delete</th>\r\n                </tr>\r\n              </thead>\r\n              {modules.length\r\n                ? modules.map((module) => (\r\n                    <tbody key={`module_${module?.id}`}>\r\n                      {module.modules.length ? (\r\n                        <tr>\r\n                          <td colSpan={5} className='text-gray-500'>\r\n                            {module.name}\r\n                          </td>\r\n                        </tr>\r\n                      ) : null}\r\n                      {module.modules.map((item) => (\r\n                        <tr key={`module_item_${item.id}`}>\r\n                          <td className='fw-bold fs-7 text-gray-800'>{item.name}</td>\r\n                          <td className='text-center'>\r\n                            {item.permissions.includes(RolePermissions.READ) && (\r\n                              <label className='form-check form-check-custom form-check-solid max-w-100 mx-auto'>\r\n                                <input\r\n                                  className='form-check-input'\r\n                                  type='checkbox'\r\n                                  onChange={() => handleCheck(item.id, 'read')}\r\n                                  checked={\r\n                                    formik?.values?.module_permissions\r\n                                      ?.find((it: any) => it?.module_id === item?.id)\r\n                                      ?.permissions?.includes('read') ?? false\r\n                                  }\r\n                                />\r\n                              </label>\r\n                            )}\r\n                          </td>\r\n                          <td className='text-center'>\r\n                            {item.permissions.includes(RolePermissions.CREATE) && (\r\n                              <label className='form-check form-check-custom form-check-solid max-w-100 mx-auto'>\r\n                                <input\r\n                                  className='form-check-input'\r\n                                  type='checkbox'\r\n                                  onChange={() => handleCheck(item?.id, 'create')}\r\n                                  checked={\r\n                                    formik?.values?.module_permissions\r\n                                      ?.find((it: any) => it?.module_id === item?.id)\r\n                                      ?.permissions?.includes('create') ?? false\r\n                                  }\r\n                                />\r\n                              </label>\r\n                            )}\r\n                          </td>\r\n                          <td className='text-center'>\r\n                            {item.permissions.includes(RolePermissions.UPDATE) && (\r\n                              <label className='form-check form-check-custom form-check-solid max-w-100 mx-auto'>\r\n                                <input\r\n                                  className='form-check-input'\r\n                                  type='checkbox'\r\n                                  onChange={() => handleCheck(item?.id, 'update')}\r\n                                  checked={\r\n                                    formik?.values?.module_permissions\r\n                                      ?.find((it: any) => it?.module_id === item?.id)\r\n                                      ?.permissions?.includes('update') ?? false\r\n                                  }\r\n                                />\r\n                              </label>\r\n                            )}\r\n                          </td>\r\n                          <td className='text-center'>\r\n                            {item.permissions.includes(RolePermissions.DELETE) && (\r\n                              <label className='form-check form-check-custom form-check-solid max-w-100 mx-auto'>\r\n                                <input\r\n                                  className='form-check-input'\r\n                                  type='checkbox'\r\n                                  onChange={() => handleCheck(item?.id, 'delete')}\r\n                                  checked={\r\n                                    formik?.values?.module_permissions\r\n                                      ?.find((it: any) => it?.module_id === item?.id)\r\n                                      ?.permissions?.includes('delete') ?? false\r\n                                  }\r\n                                />\r\n                              </label>\r\n                            )}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  ))\r\n                : null}\r\n            </table>\r\n          </div>\r\n\r\n          <div className='border-top pt-10 cardfooter-btns'>\r\n            <button\r\n              type='button'\r\n              className={`btn btn-lg btn-light fw-bolder me-4`}\r\n              disabled={formik.isSubmitting}\r\n              onClick={() => history.push(RoleManagementScreens.ROLE_LIST.buildPath(section))}\r\n            >\r\n              Kembali\r\n            </button>\r\n            <button\r\n              type='submit'\r\n              className='btn btn-lg btn-secondary fw-bolder me-4'\r\n              disabled={\r\n                formik.isSubmitting ||\r\n                !formik?.values?.module_permissions?.filter(\r\n                  (item: any) => item?.permissions?.length\r\n                ).length\r\n              }\r\n            >\r\n              <span className='indicator-label'>Simpan</span>\r\n              {formik.isSubmitting && (\r\n                <span className='indicator-progress'>\r\n                  Mohon Tunggu...\r\n                  <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                </span>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","/* eslint-disable unused-imports/no-unused-imports */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {useFormik} from 'formik'\r\nimport React, {useCallback, useEffect, useMemo, useState} from 'react'\r\nimport * as Yup from 'yup'\r\nimport {getDetailRole, getModules, updateRole} from '../redux/RoleCRUD'\r\nimport {RoleModel, RoleModulesModel, RolePermissions} from '../models/Role'\r\nimport {useHistory, useParams} from 'react-router'\r\nimport {PageTitle} from 'src/_metronic/layout/core'\r\nimport {getTitle} from 'src/app/utils/title-utils'\r\nimport {handlePlatform, handleSectionCapitalize} from '../utils'\r\nimport RoleManagementScreens from '../Screens'\r\nimport {useHeaderToast} from 'src/app/components/ToastComponent'\r\nimport {getErrorMessage} from 'src/app/utils/api-utils'\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  module_permissions: [],\r\n}\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string().required('Nama Role wajib diisi.'),\r\n  module_permissions: Yup.array(),\r\n})\r\n\r\nexport const RoleDetail = () => {\r\n  // States\r\n  const [data, setData] = useState<RoleModel | undefined>(undefined)\r\n  const [modules, setModules] = useState<RoleModulesModel[]>([])\r\n\r\n  // Variables\r\n  const {section, id}: any = useParams()\r\n  const history = useHistory()\r\n  const {addPageToasts} = useHeaderToast()\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    validateOnBlur: false,\r\n    validateOnChange: false,\r\n    onSubmit: (values: any, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      setTimeout(async () => {\r\n        try {\r\n          const tmp: any = {}\r\n          tmp.platform = handlePlatform(section)\r\n          tmp.name = values.name\r\n          tmp.status = 'ACTIVE'\r\n          tmp.module_permissions = values.module_permissions\r\n\r\n          await updateRole(id, tmp)\r\n          setSubmitting(false)\r\n          history.push(RoleManagementScreens.ROLE_LIST.buildPath(section), {\r\n            message: 'Data berhasil disimpan',\r\n          })\r\n        } catch (error) {\r\n          setSubmitting(false)\r\n          addPageToasts({\r\n            scheme: 'danger',\r\n            text: getErrorMessage(error, true) || 'Update Role gagal.',\r\n          })\r\n        }\r\n      }, 1000)\r\n    },\r\n  })\r\n\r\n  // Handlers\r\n  const [updateChecked, setUpdateChecked] = useState<Number>()\r\n  const handleCheck = (id: string, field: 'read' | 'create' | 'update' | 'delete') => {\r\n    const module_permissions: {module_id: string; permissions: string[]}[] =\r\n      formik.values.module_permissions\r\n    const index = module_permissions.findIndex((it: any) => it.module_id === id)\r\n    if (module_permissions[index].permissions.includes(field)) {\r\n      module_permissions[index].permissions = module_permissions[index].permissions.filter(\r\n        (item) => item !== field\r\n      )\r\n    } else {\r\n      module_permissions[index].permissions.push(field)\r\n    }\r\n    formik.setFieldValue('module_permissions', module_permissions)\r\n    setUpdateChecked(Date.now())\r\n  }\r\n\r\n  const isAllChecked = useMemo(() => {\r\n    try {\r\n      let index = -1\r\n      return modules.every((module) => {\r\n        return module.modules.every((item) => {\r\n          index++\r\n          return (\r\n            formik.values.module_permissions[index].permissions.length === item.permissions.length\r\n          )\r\n        })\r\n      })\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [modules, updateChecked])\r\n  const setIsAllChecked = useCallback(\r\n    (checked: boolean) => {\r\n      const module_permissions: any[] = []\r\n      modules.forEach((module) => {\r\n        module.modules.forEach((item) => {\r\n          module_permissions.push({\r\n            module_id: item.id,\r\n            permissions: checked ? [...item.permissions] : [],\r\n          })\r\n        })\r\n      })\r\n      formik.setFieldValue('module_permissions', module_permissions)\r\n      setUpdateChecked(Date.now())\r\n    },\r\n    [modules]\r\n  )\r\n\r\n  // Hooks\r\n  useEffect(() => {\r\n    const getListModule = async () => {\r\n      try {\r\n        let platform = handlePlatform(section)\r\n        const res = await getModules({page: 1, limit: 999999, platform})\r\n        setModules(res.data.data?.items ?? [])\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    getListModule()\r\n  }, [section])\r\n\r\n  useEffect(() => {\r\n    const getRole = async () => {\r\n      try {\r\n        const res: any = await getDetailRole(id)\r\n        Array.isArray(res.data.data) ? setData(res.data.data[0]) : setData(res.data.data)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    if (section && id) {\r\n      getRole()\r\n    }\r\n  }, [section, id])\r\n\r\n  useEffect(() => {\r\n    if (data && modules) {\r\n      if (data.name) formik.setFieldValue('name', data.name)\r\n      const module_permissions: any[] = []\r\n\r\n      modules.map((module) => {\r\n        module.modules.map((item) => {\r\n          module_permissions.push({module_id: item.id, permissions: []})\r\n        })\r\n      })\r\n\r\n      data.module_permissions.map((item) => {\r\n        item.modules.map((module) => {\r\n          const index = module_permissions.findIndex((it) => it.module_id === module.id)\r\n          module_permissions[index] = {module_id: module.id, permissions: module.active_permissions}\r\n        })\r\n      })\r\n\r\n      formik.setFieldValue('module_permissions', module_permissions)\r\n      setUpdateChecked(Date.now())\r\n    }\r\n  }, [data, modules])\r\n\r\n  //start::TITLE_FUNC\r\n  const pageTitle = useMemo(() => 'Detail Role', [])\r\n\r\n  const breadcrumbs = useMemo(\r\n    () => [\r\n      {\r\n        isActive: false,\r\n        path: `/role-management/${section}`,\r\n        title: `List ${handleSectionCapitalize(section)}`,\r\n      },\r\n      {isActive: false, path: '', title: '', isSeparator: true},\r\n    ],\r\n    [section]\r\n  )\r\n\r\n  useEffect(() => {\r\n    document.title = getTitle(pageTitle)\r\n  }, [])\r\n  //end::TITLE_FUNC\r\n\r\n  return (\r\n    <div className='card'>\r\n      <PageTitle breadcrumbs={breadcrumbs}>{pageTitle}</PageTitle>\r\n      <div className='card-body'>\r\n        <form className='form w-100' onSubmit={formik.handleSubmit} noValidate>\r\n          <div className='mb-10 row'>\r\n            <div className='col-12'>\r\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\r\n                Nama Role*\r\n              </label>\r\n              <input\r\n                {...formik.getFieldProps('name')}\r\n                type='text'\r\n                className='form-control form-control-lg form-control-solid'\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='mb-10'>\r\n            <label className='form-check form-check-custom form-check-solid w-150px'>\r\n              <input\r\n                className='form-check-input'\r\n                type='checkbox'\r\n                onChange={() => setIsAllChecked(!isAllChecked)}\r\n                checked={isAllChecked}\r\n              />\r\n              <span className='form-check-label fw-bold fs-6 min-w-100'>Centang semua akses</span>\r\n            </label>\r\n          </div>\r\n\r\n          <div className='mb-10'>\r\n            <table className='table gy-4 gs-3'>\r\n              <thead>\r\n                <tr className='fw-bold fs-6 text-gray-800'>\r\n                  <th>Modul</th>\r\n                  <th className='text-center'>Read</th>\r\n                  <th className='text-center'>Create</th>\r\n                  <th className='text-center'>Update</th>\r\n                  <th className='text-center'>Delete</th>\r\n                </tr>\r\n              </thead>\r\n              {modules.length\r\n                ? modules.map((module) => (\r\n                    <tbody key={`module_${module?.id}`}>\r\n                      {module.modules.length ? (\r\n                        <tr>\r\n                          <td colSpan={5} className='text-gray-500'>\r\n                            {module.name}\r\n                          </td>\r\n                        </tr>\r\n                      ) : null}\r\n                      {module.modules.map((item) => (\r\n                        <tr key={`module_item_${item.id}`}>\r\n                          <td className='fw-bold fs-7 text-gray-800'>{item.name}</td>\r\n                          <td className='text-center'>\r\n                            {item.permissions.includes(RolePermissions.READ) && (\r\n                              <label className='form-check form-check-custom form-check-solid max-w-100 mx-auto'>\r\n                                <input\r\n                                  className='form-check-input'\r\n                                  type='checkbox'\r\n                                  onChange={() => handleCheck(item.id, 'read')}\r\n                                  checked={\r\n                                    formik?.values?.module_permissions\r\n                                      ?.find((it: any) => it?.module_id === item?.id)\r\n                                      ?.permissions?.includes('read') ?? false\r\n                                  }\r\n                                />\r\n                              </label>\r\n                            )}\r\n                          </td>\r\n                          <td className='text-center'>\r\n                            {item.permissions.includes(RolePermissions.CREATE) && (\r\n                              <label className='form-check form-check-custom form-check-solid max-w-100 mx-auto'>\r\n                                <input\r\n                                  className='form-check-input'\r\n                                  type='checkbox'\r\n                                  onChange={() => handleCheck(item?.id, 'create')}\r\n                                  checked={\r\n                                    formik?.values?.module_permissions\r\n                                      ?.find((it: any) => it?.module_id === item?.id)\r\n                                      ?.permissions?.includes('create') ?? false\r\n                                  }\r\n                                />\r\n                              </label>\r\n                            )}\r\n                          </td>\r\n                          <td className='text-center'>\r\n                            {item.permissions.includes(RolePermissions.UPDATE) && (\r\n                              <label className='form-check form-check-custom form-check-solid max-w-100 mx-auto'>\r\n                                <input\r\n                                  className='form-check-input'\r\n                                  type='checkbox'\r\n                                  onChange={() => handleCheck(item?.id, 'update')}\r\n                                  checked={\r\n                                    formik?.values?.module_permissions\r\n                                      ?.find((it: any) => it?.module_id === item?.id)\r\n                                      ?.permissions?.includes('update') ?? false\r\n                                  }\r\n                                />\r\n                              </label>\r\n                            )}\r\n                          </td>\r\n                          <td className='text-center'>\r\n                            {item.permissions.includes(RolePermissions.DELETE) && (\r\n                              <label className='form-check form-check-custom form-check-solid max-w-100 mx-auto'>\r\n                                <input\r\n                                  className='form-check-input'\r\n                                  type='checkbox'\r\n                                  onChange={() => handleCheck(item?.id, 'delete')}\r\n                                  checked={\r\n                                    formik?.values?.module_permissions\r\n                                      ?.find((it: any) => it?.module_id === item?.id)\r\n                                      ?.permissions?.includes('delete') ?? false\r\n                                  }\r\n                                />\r\n                              </label>\r\n                            )}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  ))\r\n                : null}\r\n            </table>\r\n          </div>\r\n\r\n          <div className='border-top pt-10 cardfooter-btns'>\r\n            <button\r\n              type='button'\r\n              className={`btn btn-lg btn-light fw-bolder me-4`}\r\n              disabled={formik.isSubmitting}\r\n              onClick={() => history.push(RoleManagementScreens.ROLE_LIST.buildPath(section))}\r\n            >\r\n              Kembali\r\n            </button>\r\n            <button\r\n              type='submit'\r\n              className='btn btn-lg btn-secondary fw-bolder me-4'\r\n              disabled={\r\n                formik.isSubmitting ||\r\n                !formik?.values?.module_permissions?.filter(\r\n                  (item: any) => item?.permissions?.length\r\n                ).length\r\n              }\r\n            >\r\n              <span className='indicator-label'>Simpan</span>\r\n              {formik.isSubmitting && (\r\n                <span className='indicator-progress'>\r\n                  Mohon Tunggu...\r\n                  <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                </span>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, {useState, useEffect, MouseEventHandler, useMemo} from 'react'\r\nimport InlineSVG from 'react-inlinesvg/esm'\r\nimport {Link, useHistory, useParams} from 'react-router-dom'\r\nimport useDebounce from 'src/app/hooks/useDebounce'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport {getRoles, deleteRole as onDeleteRole} from '../redux/RoleCRUD'\r\nimport {RootState} from 'src/setup'\r\nimport RolesRedux from '../redux/RolesRedux'\r\nimport {PageTitle} from 'src/_metronic/layout/core'\r\nimport {getTitle} from 'src/app/utils/title-utils'\r\nimport Pagination from 'src/app/components/Pagination'\r\nimport {RoleModel, RolePermissionModel, RolePermissionModuleModel} from '../models/Role'\r\nimport {Modal} from 'react-bootstrap-v5'\r\nimport {KTSVG} from 'src/_metronic/helpers'\r\nimport {getPermissionModule, handlePlatform, handleSectionCapitalize} from '../utils'\r\nimport {usePermissions} from 'src/app/hooks/permissions-hook'\r\nimport {useHeaderToast} from 'src/app/components/ToastComponent'\r\nimport {getErrorMessage} from 'src/app/utils/api-utils'\r\n\r\nexport const RoleList = () => {\r\n  // States\r\n  const [filter, setFilter] = useState({\r\n    search: '',\r\n    status: '',\r\n    limit: 10,\r\n    platform: '',\r\n  })\r\n  const [page, setPage] = useState(1)\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const [deleteItem, setDeleteItem] = useState<RoleModel | undefined>(undefined)\r\n  const [loading, setLoading] = useState(false)\r\n  const [isFailed, setIsFailed] = useState('')\r\n  const [showDelete, setShowDelete] = useState(false)\r\n\r\n  // Variables\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const {addPageToasts} = useHeaderToast()\r\n  const {section}: any = useParams()\r\n  const {data, isLoading}: any = useSelector<RootState>(({roles}) => roles, shallowEqual)\r\n  const filterDebounce = useDebounce(filter, 500)\r\n  const module = useMemo(() => getPermissionModule(section), [section])\r\n  const {hasAccess} = usePermissions({code: module})\r\n\r\n  // Handlers\r\n  const handleChange = (event: any) => {\r\n    const {name, value} = event.target\r\n\r\n    setFilter((state) => ({...state, [name]: value}))\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    if (deleteItem?.id) {\r\n      setLoading(true)\r\n      setTimeout(() => {\r\n        onDeleteRole(deleteItem?.id)\r\n          .then(() => {\r\n            getList()\r\n            addPageToasts({scheme: 'info', text: 'Role berhasil dihapus'})\r\n            setLoading(false)\r\n            setDeleteItem(undefined)\r\n            setShowDelete(false)\r\n          })\r\n          .catch((error) => {\r\n            const message = getErrorMessage(error, true) || 'Role gagal dihapus'\r\n            setShowDelete(true)\r\n            setIsFailed(message)\r\n            setLoading(false)\r\n          })\r\n      }, 1000)\r\n    }\r\n  }\r\n\r\n  const getList = () => {\r\n    dispatch(RolesRedux.actions.getListRole(undefined))\r\n    dispatch(RolesRedux.actions.setIsLoading(true))\r\n    setTimeout(async () => {\r\n      try {\r\n        const params: any = {page}\r\n        const {limit, search, status, platform} = filter\r\n        if (platform) params.platform = platform\r\n        if (limit) params.limit = limit\r\n        if (search) params.search = search\r\n        if (status) params.status = status\r\n\r\n        const result = await getRoles(params)\r\n        const list = result.data.data\r\n\r\n        dispatch(RolesRedux.actions.getListRole(list))\r\n        setErrorMessage('')\r\n      } catch (error) {\r\n        setErrorMessage('Error, try to refresh the page')\r\n        dispatch(RolesRedux.actions.getListRole(undefined))\r\n      }\r\n    }, 1000)\r\n  }\r\n\r\n  // Hooks\r\n  useEffect(() => {\r\n    if (section) setFilter((state) => ({...state, platform: handlePlatform(section)}))\r\n  }, [section])\r\n\r\n  //start::TITLE_FUNC\r\n  const titleAlt = useMemo(() => handleSectionCapitalize(section), [section])\r\n  const pageTitle = useMemo(() => `List ${titleAlt}`, [titleAlt])\r\n\r\n  useEffect(() => {\r\n    document.title = getTitle(pageTitle)\r\n  }, [pageTitle])\r\n  //end::TITLE_FUNC\r\n\r\n  useEffect(() => {\r\n    setPage(1)\r\n  }, [filterDebounce])\r\n\r\n  useEffect(() => {\r\n    if (filter.platform) getList()\r\n  }, [filterDebounce, page])\r\n\r\n  useEffect(() => {\r\n    const locationState: any = history.location.state\r\n    if (locationState?.message) {\r\n      addPageToasts({scheme: 'info', text: locationState?.message})\r\n      setTimeout(() => {\r\n        history.replace({state: {}})\r\n      }, 5000)\r\n    }\r\n  }, [history.location.state])\r\n\r\n  return (\r\n    <div className='position-relative'>\r\n      <PageTitle description={pageTitle}>{titleAlt}</PageTitle>\r\n      <ModalDelete\r\n        show={showDelete}\r\n        handleClose={() => {\r\n          setShowDelete(false)\r\n          setIsFailed('')\r\n        }}\r\n        handleProcess={handleDelete}\r\n        item={deleteItem}\r\n        loading={loading}\r\n        isFailed={isFailed}\r\n        section={handleSectionCapitalize(section)}\r\n      />\r\n\r\n      <div className='card'>\r\n        <div className='card-header d-flex align-items-center justify-conten-between'>\r\n          <h1>List {handleSectionCapitalize(section)}</h1>\r\n          <div className='card-toolbar'>\r\n            {hasAccess({access: 'create'}) ? (\r\n              <button\r\n                onClick={() => history.push(`/role-management/${section}/register`)}\r\n                type='button'\r\n                className='btn btn-sm btn-secondary fw-bold fs-6'\r\n              >\r\n                Tambah Role\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className='card-body'>\r\n          <div className='d-flex flex-column flex-lg-row'>\r\n            <div className='mb-4 w-lg-200px w-100 position-relative'>\r\n              <InlineSVG\r\n                src={'/media/icons/efood/IconSearch.svg'}\r\n                className='position-absolute translate-middle-y top-50 ms-4 pe-none'\r\n              />\r\n              <input\r\n                placeholder='Cari'\r\n                className='form-control form-control-lg form-control-solid ps-13'\r\n                type='text'\r\n                autoComplete='off'\r\n                onChange={handleChange}\r\n                name='search'\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className='overflow-auto position-relative mb-5'>\r\n            {isLoading && <div className='overlay-light'></div>}\r\n            <table className='table table-striped gy-7 gs-7 mt-10'>\r\n              <thead>\r\n                <tr className='fw-bold fs-6 text-gray-600 border-bottom border-gray-200'>\r\n                  <th>No.</th>\r\n                  <th style={{minWidth: 100}}>Action</th>\r\n                  <th className='min-w-100'>Nama Role</th>\r\n                  <th>Akses</th>\r\n                </tr>\r\n              </thead>\r\n              {section ? (\r\n                <tbody>\r\n                  {data?.items?.length ? (\r\n                    data?.items?.map((item: RoleModel, index: number) => (\r\n                      <tr key={`${item.name}_${index}`} className='fw-bold fs-6'>\r\n                        <td className='pt-9'>{(page - 1) * (filter?.limit || 10) + index + 1}</td>\r\n                        <td>\r\n                          <div className='d-flex'>\r\n                            {hasAccess({access: 'update'}) ? (\r\n                              <Link to={`/role-management/${section}/detail/${item.id}`}>\r\n                                <InlineSVG src='/media/icons/efood/IconEdit.svg' />\r\n                              </Link>\r\n                            ) : null}\r\n                            {hasAccess({access: 'delete'}) && !item?.special_role?.name ? (\r\n                              <button\r\n                                className='btn btn-transparent p-0 ms-5'\r\n                                onClick={() => {\r\n                                  setShowDelete(true)\r\n                                  setDeleteItem(item)\r\n                                }}\r\n                              >\r\n                                <InlineSVG src='/media/icons/efood/IconDelete.svg' />\r\n                              </button>\r\n                            ) : null}\r\n                          </div>\r\n                        </td>\r\n                        <td className='pt-9'>{item?.name}</td>\r\n                        <td>\r\n                          {item?.module_permissions?.map((permission: RolePermissionModel) => (\r\n                            <div key={`permission_${permission?.id}`}>\r\n                              <div className='pt-2'>{permission?.name}</div>\r\n                              {permission?.modules?.map((module: RolePermissionModuleModel) => (\r\n                                <div\r\n                                  key={`module_${module?.name}`}\r\n                                  className='d-flex align-items-center'\r\n                                >\r\n                                  <div className='w-200px fw-normal'>\r\n                                    <span className='min-w-100'>{module?.name}</span>\r\n                                  </div>\r\n                                  <div className='ps-5 fw-normal'>\r\n                                    <span className='min-w-100'>\r\n                                      : {module?.active_permissions?.join(', ')}\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          ))}\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan={7} className='text-center fw-bold fs-6 bg-light'>\r\n                        {isLoading ? 'Loading' : errorMessage ? errorMessage : 'Data Kosong'}\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              ) : null}\r\n            </table>\r\n          </div>\r\n          <Pagination\r\n            loading={isLoading}\r\n            page={page}\r\n            limit={Number(filter.limit || 10)}\r\n            setPage={setPage}\r\n            setPerPage={(limit) => setFilter({...filter, limit})}\r\n            maxData={data?.total_item || 0}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface ModalDeleteModel {\r\n  show: boolean\r\n  handleClose: MouseEventHandler<HTMLDivElement | HTMLButtonElement>\r\n  handleProcess: MouseEventHandler<HTMLDivElement | HTMLButtonElement>\r\n  loading?: boolean\r\n  item?: RoleModel\r\n  isFailed?: string\r\n  section?: string\r\n}\r\n\r\nconst ModalDelete = ({\r\n  show,\r\n  handleClose,\r\n  handleProcess,\r\n  loading,\r\n  item,\r\n  isFailed,\r\n  section,\r\n}: ModalDeleteModel) => {\r\n  return (\r\n    <Modal\r\n      id='kt_modal_create_app'\r\n      tabIndex={-1}\r\n      aria-hidden='true'\r\n      dialogClassName='modal-dialog-centered mw-500px h-auto'\r\n      show={show}\r\n      onHide={handleClose}\r\n      centered\r\n    >\r\n      <div className='modal-header pt-8 pb-5 px-10 d-flex justify-content-between border-bottom-1'>\r\n        {/* begin::Close */}\r\n        {isFailed ? <h1>Gagal Menghapus Role</h1> : <h1>Hapus Role</h1>}\r\n        <div className='btn btn-icon btn-sm btn-transparent' onClick={handleClose}>\r\n          <KTSVG className='svg-icon-2' path='/media/icons/duotune/arrows/arr061.svg' />\r\n        </div>\r\n        {/* end::Close */}\r\n      </div>\r\n      <div className='modal-body px-10 py-10'>\r\n        {isFailed ? (\r\n          isFailed?.toLowerCase()?.includes('tidak ditemukan') ? (\r\n            <span>{isFailed}</span>\r\n          ) : (\r\n            <span>\r\n              Gagal menghapus role karena masih ada {section} dengan role{' '}\r\n              <span className='fw-bolder fs-6'>{item?.name}</span>. Ubah data User atau Hapus User\r\n              terlebih dahulu sebelum menghapus role.\r\n            </span>\r\n          )\r\n        ) : (\r\n          <span>\r\n            Apakah Anda yakin ingin menghapus role{' '}\r\n            <span className='fw-bolder fs-6'>{item?.name}</span>?\r\n          </span>\r\n        )}\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <div className='d-flex pb-lg-0'>\r\n          {!isFailed && (\r\n            <button\r\n              type='submit'\r\n              id='kt_password_reset_submit'\r\n              className='btn btn-lg btn-light fw-bolder d-block me-4'\r\n              onClick={handleProcess}\r\n              disabled={loading}\r\n            >\r\n              <span className='indicator-label text-secondary'>Hapus</span>\r\n              {loading && (\r\n                <span className='indicator-progress'>\r\n                  Mohon Tunggu...\r\n                  <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                </span>\r\n              )}\r\n            </button>\r\n          )}\r\n          <button\r\n            type='button'\r\n            id='kt_login_password_reset_form_cancel_button'\r\n            className='btn btn-lg btn-secondary fw-bolder'\r\n            onClick={handleClose}\r\n          >\r\n            Kembali\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, {useState, useEffect} from 'react'\r\nimport InlineSVG from 'react-inlinesvg/esm'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport useDebounce from 'src/app/hooks/useDebounce'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport {getSpecialRoles} from '../redux/RoleCRUD'\r\nimport {RootState} from 'src/setup'\r\nimport RolesRedux from '../redux/RolesRedux'\r\nimport {PageTitle} from 'src/_metronic/layout/core'\r\nimport {getTitle} from 'src/app/utils/title-utils'\r\nimport {usePermissions} from 'src/app/hooks/permissions-hook'\r\nimport {SpecialRoleModel} from '../models/SpecialRole'\r\nimport RoleManagementScreens from '../Screens'\r\nimport {useHeaderToast} from 'src/app/components/ToastComponent'\r\n\r\nexport const SpecialRoleList = () => {\r\n  // States\r\n  const [search, setSearch] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n\r\n  // Variables\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const {addPageToasts} = useHeaderToast()\r\n  const {data, isLoading}: any = useSelector<RootState>(({roles}) => roles, shallowEqual)\r\n  const searchDebounce = useDebounce(search, 500)\r\n  const {hasAccess} = usePermissions({code: 'user_role_special_role'})\r\n\r\n  // Handlers\r\n  const handleSearch = (event: any) => {\r\n    const {value} = event.target\r\n    setSearch(value)\r\n  }\r\n\r\n  const getList = () => {\r\n    dispatch(RolesRedux.actions.getListRole(undefined))\r\n    dispatch(RolesRedux.actions.setIsLoading(true))\r\n    setTimeout(async () => {\r\n      try {\r\n        const params: any = {page: 1, limit: 999999}\r\n        if (search) params.search = search\r\n\r\n        const result = await getSpecialRoles(params)\r\n        const list = result.data.data as any\r\n\r\n        dispatch(RolesRedux.actions.getListRole(list))\r\n        setErrorMessage('')\r\n      } catch (error) {\r\n        setErrorMessage('Error, try to refresh the page')\r\n        dispatch(RolesRedux.actions.getListRole(undefined))\r\n      }\r\n    }, 1000)\r\n  }\r\n\r\n  // Hooks\r\n  useEffect(() => {\r\n    getList()\r\n  }, [searchDebounce])\r\n\r\n  useEffect(() => {\r\n    document.title = getTitle('List Special Roles')\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const locationState = history.location.state as any\r\n    if (locationState?.message) {\r\n      addPageToasts({scheme: 'info', text: locationState?.message})\r\n      setTimeout(() => {\r\n        history.replace({state: {}})\r\n      }, 5000)\r\n    }\r\n  }, [history.location.state])\r\n\r\n  useEffect(() => {\r\n    if (!hasAccess({access: 'read'})) {\r\n      history.push('/dashboard')\r\n    }\r\n  }, [hasAccess({access: 'read'})])\r\n\r\n  return (\r\n    <div className='position-relative'>\r\n      <PageTitle description='List Special Roles'>Special Roles</PageTitle>\r\n\r\n      <div className='card'>\r\n        <div className='card-header d-flex align-items-center justify-conten-between'>\r\n          <h1>List Special Roles</h1>\r\n        </div>\r\n        <div className='card-body'>\r\n          <div className='d-flex flex-column flex-lg-row'>\r\n            <div className='mb-4 w-lg-200px w-100 position-relative'>\r\n              <InlineSVG\r\n                src={'/media/icons/efood/IconSearch.svg'}\r\n                className='position-absolute translate-middle-y top-50 ms-4 pe-none'\r\n              />\r\n              <input\r\n                placeholder='Cari'\r\n                className='form-control form-control-lg form-control-solid ps-13'\r\n                type='text'\r\n                autoComplete='off'\r\n                onChange={handleSearch}\r\n                name='search'\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className='overflow-auto position-relative mb-5'>\r\n            {isLoading && <div className='overlay-light'></div>}\r\n            <table className='table table-striped gy-5 gs-7 mt-5'>\r\n              <thead>\r\n                <tr className='fw-bold fs-6 text-gray-600 border-bottom border-gray-200'>\r\n                  <th>No.</th>\r\n                  <th style={{minWidth: 100}}>Action</th>\r\n                  <th className='min-w-100'>Nama Special Role</th>\r\n                  <th>Role</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data?.length ? (\r\n                  data?.map((item: SpecialRoleModel, index: number) => (\r\n                    <tr key={`${item.name}_${index}`} className='fw-bold fs-6 align-middle'>\r\n                      <td>{index + 1}</td>\r\n                      <td>\r\n                        <div className='d-flex'>\r\n                          {hasAccess({access: 'update'}) ? (\r\n                            <Link\r\n                              to={RoleManagementScreens.DETAIL_SPECIAL_ROLES.buildPath(item?.id)}\r\n                            >\r\n                              <InlineSVG src='/media/icons/efood/IconEdit.svg' />\r\n                            </Link>\r\n                          ) : null}\r\n                        </div>\r\n                      </td>\r\n                      <td>{item?.name}</td>\r\n                      <td>{item?.role?.name}</td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan={7} className='text-center fw-bold fs-6 bg-light'>\r\n                      {isLoading ? 'Loading' : errorMessage ? errorMessage : 'Data Kosong'}\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import {useFormik} from 'formik'\r\nimport React, {useEffect, useState} from 'react'\r\nimport {Link, useHistory, useParams} from 'react-router-dom'\r\nimport {useHeaderToast} from 'src/app/components/ToastComponent'\r\nimport * as Yup from 'yup'\r\nimport {PageTitle} from 'src/_metronic/layout/core'\r\nimport RoleManagementScreens from '../Screens'\r\nimport {usePermissions} from 'src/app/hooks/permissions-hook'\r\nimport {getTitle} from 'src/app/utils/title-utils'\r\nimport {getDetailSpecialRole, getRoles, setUpdateSpecialRole} from '../redux/RoleCRUD'\r\nimport {SpecialRoleModel} from '../models/SpecialRole'\r\nimport {getErrorMessage} from 'src/app/utils/api-utils'\r\nimport Select from 'react-select'\r\nimport {LabelValueProps, ReactSelectMetronicTheme} from 'src/app/components/CustomReactSelect'\r\nimport {SelectComponentsConfig} from 'react-select'\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  role: undefined,\r\n}\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string(),\r\n  role: Yup.object()\r\n    .shape({\r\n      value: Yup.string(),\r\n      label: Yup.string(),\r\n    })\r\n    .required('Role wajib diisi'),\r\n})\r\n\r\nconst SpecialRoleDetail = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [roles, setRoles] = useState<LabelValueProps[]>([])\r\n\r\n  const history = useHistory()\r\n  const {id}: any = useParams()\r\n  const {addPageToasts} = useHeaderToast()\r\n  const {canAccessPage} = usePermissions({code: 'user_role_special_role', access: 'update'})\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validateOnBlur: false,\r\n    validateOnChange: false,\r\n    validationSchema,\r\n    onSubmit: (values: any, {setStatus, setSubmitting}) => {\r\n      setLoading(true)\r\n      setSubmitting(true)\r\n\r\n      setUpdateSpecialRole(id, {role_id: values.role.value})\r\n        .then(() => {\r\n          history.push(RoleManagementScreens.SPECIAL_ROLES.PATH, {\r\n            message: 'Data berhasil disimpan.',\r\n          })\r\n          setSubmitting(false)\r\n        })\r\n        .catch((error: any) => {\r\n          addPageToasts({scheme: 'danger', text: 'Data gagal disimpan.'})\r\n          setLoading(false)\r\n          setSubmitting(false)\r\n        })\r\n    },\r\n  })\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    getDetailSpecialRole(id)\r\n      .then((res) => {\r\n        const data: SpecialRoleModel | undefined = res.data.data\r\n\r\n        if (data?.name) formik.setFieldValue('name', data?.name)\r\n        if (data?.role)\r\n          formik.setFieldValue('role', {value: data?.role?.id, label: data?.role?.name})\r\n        setLoading(false)\r\n      })\r\n      .catch((error) => {\r\n        addPageToasts({\r\n          scheme: 'danger',\r\n          text: getErrorMessage(error) || 'Gagal mendapatkan detail special role.',\r\n        })\r\n        setLoading(false)\r\n        return\r\n      })\r\n  }, [id])\r\n\r\n  useEffect(() => {\r\n    document.title = getTitle('Detail Special Role')\r\n\r\n    getRoles({page: 1, limit: 999999})\r\n      .then((res) => {\r\n        const options = res.data.data?.items?.map((item) => ({value: item?.id, label: item?.name}))\r\n        setRoles(options as LabelValueProps[])\r\n      })\r\n      .catch((err) => {\r\n        return\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <PageTitle\r\n        description='Detail Special Role'\r\n        breadcrumbs={[\r\n          {\r\n            isActive: false,\r\n            title: 'List Special Roles',\r\n            path: RoleManagementScreens.SPECIAL_ROLES.PATH,\r\n          },\r\n          {\r\n            isSeparator: true,\r\n            isActive: false,\r\n            title: '',\r\n            path: '',\r\n          },\r\n        ]}\r\n      >\r\n        Detail Special Role\r\n      </PageTitle>\r\n      <div className='card'>\r\n        <div className='card-body'>\r\n          <form noValidate onSubmit={formik.handleSubmit}>\r\n            <div className='row'>\r\n              <div className='col-12 col-md-6 mb-10'>\r\n                <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\r\n                  Nama Special Role\r\n                </label>\r\n                <input\r\n                  placeholder=''\r\n                  {...formik.getFieldProps('name')}\r\n                  className='form-control form-control-lg form-control-solid'\r\n                  type='text'\r\n                  onChange={({target}) => formik.setFieldValue('name', target.value)}\r\n                  disabled\r\n                  maxLength={150}\r\n                />\r\n              </div>\r\n              <div className='col-12 col-md-6 mb-10'>\r\n                <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>Role*</label>\r\n                <Select\r\n                  placeholder='Pilih Role'\r\n                  key={`brand-${formik.values.deeplink_type}`}\r\n                  cacheOptions\r\n                  defaultOptions\r\n                  components={\r\n                    ReactSelectMetronicTheme as SelectComponentsConfig<LabelValueProps, false>\r\n                  }\r\n                  options={roles}\r\n                  value={formik.values.role}\r\n                  onChange={(value) => formik.setFieldValue('role', value)}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='border-top pt-10 cardfooter-btns'>\r\n              <Link\r\n                type='button'\r\n                className='btn btn-lg btn-light fw-bolder me-4'\r\n                to={RoleManagementScreens.SPECIAL_ROLES.PATH}\r\n              >\r\n                Kembali\r\n              </Link>\r\n\r\n              {canAccessPage && (\r\n                <button\r\n                  type='submit'\r\n                  className='btn btn-lg btn-secondary fw-bolder'\r\n                  disabled={loading || formik.isSubmitting}\r\n                >\r\n                  <span className='indicator-label'>Simpan</span>\r\n                  {formik.isSubmitting && (\r\n                    <span className='indicator-progress'>\r\n                      Mohon Tunggu...\r\n                      <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                    </span>\r\n                  )}\r\n                </button>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SpecialRoleDetail\r\n","import React from 'react'\r\nimport {Route, Switch} from 'react-router-dom'\r\nimport {RoleRegister} from './page/RoleRegister'\r\nimport {RoleDetail} from './page/RoleDetail'\r\nimport {RoleList} from './page/RoleList'\r\nimport RoleManagementScreens from './Screens'\r\nimport {SpecialRoleList} from './page/SpecialRoleList'\r\nimport SpecialRoleDetail from './page/SpecialRoleDetail'\r\n\r\nconst StoreRoutes: React.FC = () => {\r\n  return (\r\n    <Switch>\r\n      <Route\r\n        path={RoleManagementScreens.DETAIL_SPECIAL_ROLES.PATH}\r\n        component={SpecialRoleDetail}\r\n        exact\r\n      />\r\n      <Route path={RoleManagementScreens.SPECIAL_ROLES.PATH} component={SpecialRoleList} exact />\r\n      <Route path={RoleManagementScreens.ROLE_LIST.PATH} component={RoleList} exact />\r\n      <Route path={RoleManagementScreens.ROLE_DETAIL.PATH} component={RoleDetail} exact />\r\n      <Route path={RoleManagementScreens.ROLE_REGISTER.PATH} component={RoleRegister} exact />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default StoreRoutes\r\n"],"sourceRoot":""}