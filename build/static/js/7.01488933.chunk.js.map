{"version":3,"sources":["app/components/CustomReactSelect.tsx","app/components/Pagination.tsx","app/components/AlertError.tsx","app/hooks/permissions-hook.ts","app/hooks/useDebounce.tsx","app/modules/manage-admin/models/Role.ts","app/modules/manage-admin/redux/RoleCRUD.ts","app/modules/manage-admin/utils.ts","app/modules/manage-admin/page/RoleRegister.tsx","app/modules/manage-admin/Screens.ts","app/modules/manage-admin/page/RoleDetail.tsx","app/modules/manage-admin/redux/RolesRedux.ts","app/modules/manage-admin/page/RoleList.tsx","app/modules/manage-admin/page/SpecialRoleList.tsx","app/modules/manage-admin/page/SpecialRoleDetail.tsx","app/modules/manage-admin/ManageAdminRoutes.tsx"],"names":["ReactSelectMetronicTheme","Control","children","isFocused","isDisabled","rest","className","clsx","focus","disabled","IndicatorSeparator","Pagination","loading","limit","setPerPage","page","setPage","maxData","pageNum","useMemo","Math","ceil","pageList","result","normalizedPage","min","max","i","push","undefined","src","autoComplete","value","onChange","e","Number","currentTarget","length","onClick","map","x","AlertError","message","handleClose","role","style","left","top","right","zIndex","marginRight","path","usePermissions","pageQuery","permissions","useSelector","auth","shallowEqual","hasAccess","useCallback","q","code","Boolean","find","data","access","canAccessPage","useDebounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","RolePlatform","RolePermissions","ROLES","SPECIAL_ROLES","getRoles","props","cancelToken","axios","get","params","getDetailRole","id","registerRole","post","getModules","updateRole","put","handlePlatform","HERMES_CORPORATE","HERMES_BRAND","HERMES_STORE","ZEUS","handleSectionCapitalize","split","join","trim","toLowerCase","replace","w","c","toUpperCase","initialValues","name","module_permissions","validationSchema","Yup","shape","required","RoleRegister","modules","setModules","section","useParams","addPageToasts","useHeaderToast","formik","useFormik","validateOnBlur","validateOnChange","onSubmit","values","setSubmitting","platform","status","scheme","text","getErrorMessage","updateChecked","setUpdateChecked","handleCheck","field","index","findIndex","it","module_id","includes","filter","item","setFieldValue","Date","now","isAllChecked","every","module","setIsAllChecked","checked","forEach","getListModule","res","items","console","log","pageTitle","breadcrumbs","isActive","title","isSeparator","document","getTitle","setStatus","handleSubmit","noValidate","getFieldProps","type","colSpan","READ","CREATE","UPDATE","DELETE","isSubmitting","RoleManagementScreens","ROLE_ADMIN","PATH","ROLE_USER_CORPORATE","ROLE_USER_BRAND","ROLE_USER_STORE","ROLE_LIST","ROLE_REGISTER","ROLE_DETAIL","DETAIL_SPECIAL_ROLES","buildPath","RoleDetail","setData","history","useHistory","tmp","getRole","Array","isArray","active_permissions","actionTypes","GetListRole","IsLoading","SetMessage","initialBrandState","isLoading","persistReducer","storage","key","whitelist","state","action","payload","getListRole","setIsLoading","setMessage","RolesRedux","RoleList","search","setFilter","errorMessage","setErrorMessage","deleteItem","setDeleteItem","setLoading","isFailed","setIsFailed","showDelete","setShowDelete","dispatch","useDispatch","roles","filterDebounce","getPermissionModule","getList","actions","list","titleAlt","locationState","location","description","show","handleProcess","delete","then","catch","error","placeholder","event","target","minWidth","to","special_role","permission","total_item","ModalDelete","Modal","tabIndex","dialogClassName","onHide","centered","SpecialRoleList","setSearch","searchDebounce","getSpecialRoles","label","SpecialRoleDetail","setRoles","setUpdateSpecialRole","role_id","getDetailSpecialRole","options","err","maxLength","cacheOptions","defaultOptions","components","deeplink_type","ManageAdminRoutes","component","exact"],"mappings":"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","file":"static/js/7.01488933.chunk.js","sourcesContent":["import clsx from 'clsx'\r\nimport React from 'react'\r\nimport {components, ControlProps, GroupTypeBase, OptionTypeBase} from 'react-select'\r\n\r\nconst Control = <\r\n  OptionType extends OptionTypeBase,\r\n  IsMulti extends boolean,\r\n  GroupType extends GroupTypeBase<OptionType> = GroupTypeBase<OptionType>\r\n>({\r\n  children,\r\n  isFocused,\r\n  isDisabled,\r\n  ...rest\r\n}: ControlProps<OptionType, IsMulti, GroupType>) => (\r\n  <components.Control\r\n    className={clsx('form-control border-0 form-control-lg-select form-control-solid', {\r\n      focus: isFocused,\r\n      disabled: isDisabled,\r\n    })}\r\n    isFocused\r\n    isDisabled\r\n    {...rest}\r\n  >\r\n    {children}\r\n  </components.Control>\r\n)\r\n\r\nconst IndicatorSeparator = () => null\r\n\r\nexport interface LabelValueProps {\r\n  label?: string\r\n  value?: string\r\n}\r\n\r\nexport interface LabelValuePropsAny {\r\n  label?: string\r\n  value?: any\r\n}\r\n\r\nexport const ReactSelectMetronicTheme = {\r\n  Control,\r\n  IndicatorSeparator,\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {FC, useMemo} from 'react'\r\nimport InlineSVG from 'react-inlinesvg/esm'\r\n\r\ntype PaginationProps = {\r\n  loading: boolean\r\n  limit: number\r\n  setPerPage: (number: number) => void\r\n  page: number\r\n  setPage: (number: number) => void\r\n  maxData: number\r\n}\r\n\r\nconst Pagination: FC<PaginationProps> = ({loading, limit, setPerPage, page, setPage, maxData}) => {\r\n  const pageNum = useMemo(() => Math.ceil(maxData / limit), [maxData, limit])\r\n  const pageList = useMemo(() => {\r\n    const result: (number | undefined)[] = []\r\n    if (pageNum === 0) return result\r\n    const normalizedPage = Math.min(pageNum, Math.max(0, page))\r\n    if (pageNum < 8)\r\n      for (let i = 1; i <= pageNum; i++) {\r\n        result.push(i)\r\n      }\r\n    else {\r\n      if (normalizedPage > 4) result.push(1, undefined, Math.min(normalizedPage, pageNum - 3) - 1)\r\n      else result.push(1, 2, 3, 4)\r\n      if (normalizedPage + 3 < pageNum) {\r\n        if (normalizedPage > 4) result.push(normalizedPage)\r\n        result.push(Math.max(normalizedPage, 4) + 1, undefined, pageNum)\r\n      } else result.push(pageNum - 3, pageNum - 2, pageNum - 1, pageNum)\r\n    }\r\n    return result\r\n  }, [pageNum, page])\r\n  return (\r\n    <div className='d-flex flex-wrap'>\r\n      <div className='mb-4 w-md-auto w-100 d-flex align-items-center'>\r\n        <div className='position-relative'>\r\n          <InlineSVG\r\n            src={'/media/icons/efood/IconChevronDown.svg'}\r\n            className='position-absolute translate-middle-y top-50 me-4 end-0 pe-none'\r\n          />\r\n          <select\r\n            className='form-control form-control-sm form-control-solid pe-13'\r\n            autoComplete='off'\r\n            value={limit}\r\n            onChange={(e) => setPerPage(Number(e.currentTarget.value))}\r\n          >\r\n            <option>10</option>\r\n            <option>20</option>\r\n            <option>50</option>\r\n            <option>100</option>\r\n          </select>\r\n        </div>\r\n        {loading || maxData === 0 ? null : (\r\n          <span className='ms-5 flex-shrink-0'>\r\n            Menampilkan {(page - 1) * limit + 1}-{Math.min(maxData, (page - 1) * limit + limit)}{' '}\r\n            dari {maxData} entri\r\n          </span>\r\n        )}\r\n      </div>\r\n      {pageList.length > 0 ? (\r\n        <ul className='pagination flex-nowrap flex-fill justify-content-md-end'>\r\n          <li className={`page-item previous ${page === 1 ? 'disabled' : ''}`}>\r\n            <button onClick={() => setPage(page - 1)} className='page-link'>\r\n              <i className='previous'></i>\r\n            </button>\r\n          </li>\r\n          {pageList.map((x, i) =>\r\n            x === undefined ? (\r\n              <li className='page-item disabled' key={`${i}-dot`}>\r\n                <button className='page-link'>...</button>\r\n              </li>\r\n            ) : (\r\n              <li className={`page-item ${page === x ? 'active' : ''}`} key={x}>\r\n                <button onClick={() => setPage(x)} className='page-link'>\r\n                  {x}\r\n                </button>\r\n              </li>\r\n            )\r\n          )}\r\n          <li className={`page-item next ${page === pageNum ? 'disabled' : ''}`}>\r\n            <button onClick={() => setPage(page + 1)} className='page-link'>\r\n              <i className='next'></i>\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n","import React, {MouseEventHandler} from 'react'\r\nimport InlineSVG from 'react-inlinesvg/esm'\r\nimport {KTSVG} from 'src/_metronic/helpers'\r\n\r\ninterface AlertErrorProps {\r\n  message?: string\r\n  handleClose: MouseEventHandler<HTMLDivElement>\r\n}\r\n\r\nconst AlertError = ({message, handleClose}: AlertErrorProps) => {\r\n  if (!message) return null\r\n\r\n  return (\r\n    <div\r\n      className='alert_error position-absolute'\r\n      role='alert'\r\n      style={{left: 0, top: 0, right: 0, zIndex: 2}}\r\n    >\r\n      <div className='d-flex align-items-center'>\r\n        <InlineSVG src={'/media/icons/efood/IconWarning.svg'} style={{marginRight: 16}} />\r\n        <p>{message}</p>\r\n      </div>\r\n      <div className='btn btn-icon btn-sm btn-transparent' onClick={handleClose}>\r\n        <KTSVG className='svg-icon-2' path='/media/icons/efood/ButtonClose.svg' />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlertError\r\n","import {useCallback, useMemo} from 'react'\r\nimport {shallowEqual, useSelector} from 'react-redux'\r\nimport {RootState} from 'src/setup'\r\n\r\nexport interface PermissionQuery {\r\n  code?: string\r\n  access?: string\r\n}\r\n\r\nexport function usePermissions(pageQuery?: PermissionQuery) {\r\n  const permissions = useSelector<RootState>(\r\n    ({auth}) => auth.permissions ?? {},\r\n    shallowEqual\r\n  ) as Record<string, string[]>\r\n  const hasAccess = useCallback(\r\n    (q?: PermissionQuery) => {\r\n      const code = q?.code ?? pageQuery?.code\r\n      if (!code) return true\r\n      return Boolean(\r\n        permissions[code]?.find((data) => data === (q?.access ?? pageQuery?.access ?? 'read'))\r\n      )\r\n    },\r\n    [pageQuery?.access, pageQuery?.code, permissions]\r\n  )\r\n  const canAccessPage = useMemo(() => hasAccess(), [hasAccess])\r\n  return {hasAccess, canAccessPage}\r\n}\r\n","import {useState, useEffect} from 'react'\r\n\r\nconst useDebounce = (value: any, delay: number) => {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value)\r\n\r\n  useEffect(\r\n    () => {\r\n      // Update debounced value after delay\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value)\r\n      }, delay)\r\n      // Cancel the timeout if value changes (also on delay change or unmount)\r\n      // This is how we prevent debounced value from updating if value is changed ...\r\n      // .. within the delay period. Timeout gets cleared and restarted.\r\n      return () => {\r\n        clearTimeout(handler)\r\n      }\r\n    },\r\n    [value, delay] // Only re-call effect if value or delay changes\r\n  )\r\n  return debouncedValue\r\n}\r\n\r\nexport default useDebounce\r\n","export enum RolePlatform {\r\n  ZEUS = 'ZEUS',\r\n  HERMES_CORPORATE = 'HERMES_CORPORATE',\r\n  HERMES_BRAND = 'HERMES_BRAND',\r\n  HERMES_STORE = 'HERMES_STORE',\r\n}\r\n\r\nexport interface RolesQuery {\r\n  search?: string\r\n  limit?: string\r\n  page?: string\r\n  platform?: RolePlatform\r\n  active?: any\r\n}\r\n\r\nexport interface RoleCorporate {\r\n  id?: number\r\n  name?: string\r\n  platform?: string\r\n  module_permissions?: RolePermissionModel[]\r\n  status: any\r\n}\r\n\r\nexport interface RoleModel {\r\n  id: string\r\n  name: string\r\n  is_active: boolean\r\n  platform: string\r\n  module_permissions: RolePermissionModel[]\r\n  special_role: {\r\n    code: string\r\n    id: string\r\n    name: string\r\n    platform: string\r\n    role_id: string\r\n  }\r\n  status: any\r\n}\r\n\r\nexport interface RolePermissionModel {\r\n  id: string\r\n  name: string\r\n  modules: RolePermissionModuleModel[]\r\n}\r\n\r\nexport interface RolePermissionModuleModel {\r\n  active_permissions: string[]\r\n  code: string\r\n  group_id: string\r\n  id: string\r\n  name: string\r\n  permissions: string[]\r\n}\r\n\r\nexport interface RoleModulesModel {\r\n  id: string\r\n  modules: RoleModulesModulesModel[]\r\n  name: string\r\n  platform: string\r\n}\r\nexport interface RoleModulesModulesModel {\r\n  code: string\r\n  group_id: string\r\n  id: string\r\n  name: string\r\n  permissions: RolePermissions[]\r\n  platform: string\r\n}\r\n\r\nexport enum RolePermissions {\r\n  CREATE = 'create',\r\n  READ = 'read',\r\n  UPDATE = 'update',\r\n  DELETE = 'delete',\r\n}\r\n","import axios from 'axios'\r\nimport {BaseResponse, Pagination} from 'src/app/models/api.types'\r\nimport {RolePlatform, RoleModulesModel, RoleModel} from '../models/Role'\r\nimport {SpecialRoleModel} from '../models/SpecialRole'\r\n\r\nexport const ROLES = `api/v1/admins/roles`\r\nexport const MODULES = `api/v1/admins/roles/groups`\r\nexport const SPECIAL_ROLES = `api/v1/auth/special-roles`\r\n\r\nexport function getRoles(\r\n  props: {\r\n    page: number\r\n    limit: number\r\n    search?: string\r\n    platform?: RolePlatform\r\n  },\r\n  cancelToken?: any\r\n) {\r\n  return axios.get<BaseResponse<Pagination<RoleModel>>>(ROLES, {\r\n    params: {\r\n      ...props,\r\n    },\r\n    cancelToken,\r\n  })\r\n}\r\n\r\nexport function getDetailRole(id: string, cancelToken?: any) {\r\n  return axios.get<BaseResponse<RoleModel>>(`${ROLES}/${id}`, {cancelToken})\r\n}\r\n\r\nexport function registerRole(data: any, cancelToken?: any) {\r\n  return axios.post(ROLES, data, {cancelToken})\r\n}\r\n\r\nexport function getModules(\r\n  props: {\r\n    page: number\r\n    limit: number\r\n    search?: string\r\n    platform?: RolePlatform\r\n  },\r\n  cancelToken?: any\r\n) {\r\n  return axios.get<BaseResponse<Pagination<RoleModulesModel>>>(MODULES, {\r\n    params: {\r\n      ...props,\r\n    },\r\n    cancelToken,\r\n  })\r\n}\r\n\r\nexport function updateRole(id: string, data: any, cancelToken?: any) {\r\n  return axios.put(`${ROLES}/${id}`, data, {cancelToken})\r\n}\r\n\r\nexport function deleteRole(id: string, cancelToken?: any) {\r\n  return axios.delete(`${ROLES}/${id}`, {cancelToken})\r\n}\r\n\r\nexport function getSpecialRoles(\r\n  props: {\r\n    page: number\r\n    limit: number\r\n    search?: string\r\n  },\r\n  cancelToken?: any\r\n) {\r\n  return axios.get<BaseResponse<Pagination<SpecialRoleModel>>>(SPECIAL_ROLES, {\r\n    params: {\r\n      ...props,\r\n    },\r\n    cancelToken,\r\n  })\r\n}\r\n\r\nexport function getDetailSpecialRole(id: string, cancelToken?: any) {\r\n  return axios.get<BaseResponse<SpecialRoleModel>>(`${SPECIAL_ROLES}/${id}`, {cancelToken})\r\n}\r\n\r\nexport function setUpdateSpecialRole(id: string, data: {role_id: string}, cancelToken?: any) {\r\n  return axios.put(`${SPECIAL_ROLES}/${id}`, data, {cancelToken})\r\n}\r\n","import {RolePlatform} from './models/Role'\r\n\r\nexport const getPermissionModule = (value: string) => {\r\n  switch (value) {\r\n    case 'role-user-corporate':\r\n      return 'user_role_user_corporate'\r\n    case 'role-user-brand':\r\n      return 'user_role_user_brand'\r\n    case 'role-user-store':\r\n      return 'user_role_user_store'\r\n    default:\r\n      return 'user_role_admin'\r\n  }\r\n}\r\n\r\nexport const handlePlatform = (value: string): RolePlatform => {\r\n  switch (value) {\r\n    case 'role-user-corporate':\r\n      return RolePlatform.HERMES_CORPORATE\r\n    case 'role-user-brand':\r\n      return RolePlatform.HERMES_BRAND\r\n    case 'role-user-store':\r\n      return RolePlatform.HERMES_STORE\r\n    default:\r\n      return RolePlatform.ZEUS\r\n  }\r\n}\r\n\r\nexport const handleSectionCapitalize = (value: string): string => {\r\n  return value\r\n    .split('-')\r\n    .join(' ')\r\n    .trim()\r\n    .toLowerCase()\r\n    .replace(/\\w\\S*/g, (w) => w.replace(/^\\w/, (c) => c.toUpperCase()))\r\n}\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {useFormik} from 'formik'\r\nimport React, {useCallback, useEffect, useMemo, useState} from 'react'\r\nimport * as Yup from 'yup'\r\nimport {getModules, registerRole} from '../redux/RoleCRUD'\r\nimport {RoleModulesModel, RolePermissions} from '../models/Role'\r\nimport {\r\n  // useHistory, \r\n  useParams} from 'react-router'\r\nimport {PageTitle} from 'src/_metronic/layout/core'\r\nimport {getTitle} from 'src/app/utils/title-utils'\r\nimport {handlePlatform, handleSectionCapitalize} from '../utils'\r\nimport AlertError from 'src/app/components/AlertError'\r\n// import RoleManagementScreens from '../Screens'\r\nimport {useHeaderToast} from 'src/app/components/ToastComponent'\r\nimport {getErrorMessage} from 'src/app/utils/api-utils'\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  module_permissions: [],\r\n}\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string().required('Nama Role wajib diisi.'),\r\n  module_permissions: Yup.array(),\r\n})\r\n\r\nexport const RoleRegister = () => {\r\n  // States\r\n  const [modules, setModules] = useState<RoleModulesModel[]>([])\r\n\r\n  // Variables\r\n  const {section}: any = useParams()\r\n  // const history = useHistory()\r\n  const {addPageToasts} = useHeaderToast()\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    validateOnBlur: false,\r\n    validateOnChange: false,\r\n    onSubmit: (values: any, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      setTimeout(async () => {\r\n        try {\r\n          const data: any = {}\r\n          data.platform = handlePlatform(section)\r\n          data.name = values.name\r\n          data.status = 'ACTIVE'\r\n          data.module_permissions = values.module_permissions\r\n\r\n          await registerRole(data)\r\n          setSubmitting(false)\r\n          // history.push(RoleManagementScreens.ROLE_LIST.buildPath(section), {\r\n          //   message: 'Data berhasil disimpan.',\r\n          // })\r\n        } catch (error) {\r\n          setSubmitting(false)\r\n          addPageToasts({\r\n            scheme: 'danger',\r\n            text: getErrorMessage(error, true) || 'Tambah Role gagal.',\r\n          })\r\n        }\r\n      }, 1000)\r\n    },\r\n  })\r\n\r\n  // Handlers\r\n  const [updateChecked, setUpdateChecked] = useState<Number>()\r\n  const handleCheck = (id: string, field: 'read' | 'create' | 'update' | 'delete') => {\r\n    const module_permissions: {module_id: string; permissions: string[]}[] =\r\n      formik.values.module_permissions\r\n    const index = module_permissions.findIndex((it: any) => it.module_id === id)\r\n    if (module_permissions[index].permissions.includes(field)) {\r\n      module_permissions[index].permissions = module_permissions[index].permissions.filter(\r\n        (item) => item !== field\r\n      )\r\n    } else {\r\n      module_permissions[index].permissions.push(field)\r\n    }\r\n    formik.setFieldValue('module_permissions', module_permissions)\r\n    setUpdateChecked(Date.now())\r\n  }\r\n\r\n  const isAllChecked = useMemo(() => {\r\n    try {\r\n      let index = -1\r\n      return modules.every((module) => {\r\n        return module.modules.every((item) => {\r\n          index++\r\n          return (\r\n            formik.values.module_permissions[index].permissions.length === item.permissions.length\r\n          )\r\n        })\r\n      })\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [modules, updateChecked])\r\n  const setIsAllChecked = useCallback(\r\n    (checked: boolean) => {\r\n      const module_permissions: any[] = []\r\n      modules.forEach((module) => {\r\n        module.modules.forEach((item) => {\r\n          module_permissions.push({\r\n            module_id: item.id,\r\n            permissions: checked ? [...item.permissions] : [],\r\n          })\r\n        })\r\n      })\r\n      formik.setFieldValue('module_permissions', module_permissions)\r\n      setUpdateChecked(Date.now())\r\n    },\r\n    [modules]\r\n  )\r\n\r\n  // Hooks\r\n  useEffect(() => {\r\n    const getListModule = async () => {\r\n      try {\r\n        let platform = handlePlatform(section)\r\n        const res = await getModules({page: 1, limit: 999999, platform})\r\n        setModules(res.data.data?.items ?? [])\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    getListModule()\r\n  }, [section])\r\n\r\n  useEffect(() => {\r\n    const module_permissions: any[] = []\r\n    modules.map((module) => {\r\n      module.modules.map((item) => {\r\n        module_permissions.push({module_id: item.id, permissions: []})\r\n      })\r\n    })\r\n\r\n    formik.setFieldValue('module_permissions', module_permissions)\r\n    setUpdateChecked(Date.now())\r\n  }, [modules])\r\n\r\n  //start::TITLE_FUNC\r\n  const pageTitle = useMemo(() => 'Tambah Role', [])\r\n\r\n  const breadcrumbs = useMemo(\r\n    () => [\r\n      {\r\n        isActive: false,\r\n        path: `/role-management/${section}`,\r\n        title: `List ${handleSectionCapitalize(section)}`,\r\n      },\r\n      {isActive: false, path: '', title: '', isSeparator: true},\r\n    ],\r\n    [section]\r\n  )\r\n\r\n  useEffect(() => {\r\n    document.title = getTitle(pageTitle)\r\n  }, [])\r\n  //end::TITLE_FUNC\r\n\r\n  useEffect(() => {\r\n    if (formik.status) {\r\n      setTimeout(() => formik.setStatus(''), 5000)\r\n    }\r\n  }, [formik.status])\r\n\r\n  return (\r\n    <div className='card'>\r\n      <AlertError message={formik.status} handleClose={() => formik.setStatus('')} />\r\n      <PageTitle breadcrumbs={breadcrumbs}>{pageTitle}</PageTitle>\r\n      <div className='card-body'>\r\n        <form className='form w-100' onSubmit={formik.handleSubmit} noValidate>\r\n          <div className='mb-10 row'>\r\n            <div className='col-12 col-md-6 mb-10 mb-md-0'>\r\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\r\n                Nama Role*\r\n              </label>\r\n              <input\r\n                {...formik.getFieldProps('name')}\r\n                type='text'\r\n                className='form-control form-control-lg form-control-solid'\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='mb-10'>\r\n            <label className='form-check form-check-custom form-check-solid w-150px'>\r\n              <input\r\n                className='form-check-input'\r\n                type='checkbox'\r\n                onChange={() => setIsAllChecked(!isAllChecked)}\r\n                checked={isAllChecked}\r\n              />\r\n              <span className='form-check-label fw-bold fs-6 min-w-100'>Centang semua akses</span>\r\n            </label>\r\n          </div>\r\n\r\n          <div className='mb-10'>\r\n            <table className='table gy-4 gs-3'>\r\n              <thead>\r\n                <tr className='fw-bold fs-6 text-gray-800'>\r\n                  <th>Modul</th>\r\n                  <th className='text-center'>Read</th>\r\n                  <th className='text-center'>Create</th>\r\n                  <th className='text-center'>Update</th>\r\n                  <th className='text-center'>Delete</th>\r\n                </tr>\r\n              </thead>\r\n              {modules.length\r\n                ? modules.map((module) => (\r\n                    <tbody key={`module_${module?.id}`}>\r\n                      {module.modules.length ? (\r\n                        <tr>\r\n                          <td colSpan={5} className='text-gray-500'>\r\n                            {module.name}\r\n                          </td>\r\n                        </tr>\r\n                      ) : null}\r\n                      {module.modules.map((item) => (\r\n                        <tr key={`module_item_${item.id}`}>\r\n                          <td className='fw-bold fs-7 text-gray-800'>{item.name}</td>\r\n                          <td className='text-center'>\r\n                            {item.permissions.includes(RolePermissions.READ) && (\r\n                              <label className='form-check form-check-custom form-check-solid max-w-100 mx-auto'>\r\n                                <input\r\n                                  className='form-check-input'\r\n                                  type='checkbox'\r\n                                  onChange={() => handleCheck(item.id, 'read')}\r\n                                  checked={\r\n                                    formik?.values?.module_permissions\r\n                                      ?.find((it: any) => it?.module_id === item?.id)\r\n                                      ?.permissions?.includes('read') ?? false\r\n                                  }\r\n                                />\r\n                              </label>\r\n                            )}\r\n                          </td>\r\n                          <td className='text-center'>\r\n                            {item.permissions.includes(RolePermissions.CREATE) && (\r\n                              <label className='form-check form-check-custom form-check-solid max-w-100 mx-auto'>\r\n                                <input\r\n                                  className='form-check-input'\r\n                                  type='checkbox'\r\n                                  onChange={() => handleCheck(item?.id, 'create')}\r\n                                  checked={\r\n                                    formik?.values?.module_permissions\r\n                                      ?.find((it: any) => it?.module_id === item?.id)\r\n                                      ?.permissions?.includes('create') ?? false\r\n                                  }\r\n                                />\r\n                              </label>\r\n                            )}\r\n                          </td>\r\n                          <td className='text-center'>\r\n                            {item.permissions.includes(RolePermissions.UPDATE) && (\r\n                              <label className='form-check form-check-custom form-check-solid max-w-100 mx-auto'>\r\n                                <input\r\n                                  className='form-check-input'\r\n                                  type='checkbox'\r\n                                  onChange={() => handleCheck(item?.id, 'update')}\r\n                                  checked={\r\n                                    formik?.values?.module_permissions\r\n                                      ?.find((it: any) => it?.module_id === item?.id)\r\n                                      ?.permissions?.includes('update') ?? false\r\n                                  }\r\n                                />\r\n                              </label>\r\n                            )}\r\n                          </td>\r\n                          <td className='text-center'>\r\n                            {item.permissions.includes(RolePermissions.DELETE) && (\r\n                              <label className='form-check form-check-custom form-check-solid max-w-100 mx-auto'>\r\n                                <input\r\n                                  className='form-check-input'\r\n                                  type='checkbox'\r\n                                  onChange={() => handleCheck(item?.id, 'delete')}\r\n                                  checked={\r\n                                    formik?.values?.module_permissions\r\n                                      ?.find((it: any) => it?.module_id === item?.id)\r\n                                      ?.permissions?.includes('delete') ?? false\r\n                                  }\r\n                                />\r\n                              </label>\r\n                            )}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  ))\r\n                : null}\r\n            </table>\r\n          </div>\r\n\r\n          <div className='border-top pt-10 cardfooter-btns'>\r\n            {/* <button\r\n              type='button'\r\n              className={`btn btn-lg btn-light fw-bolder me-4`}\r\n              disabled={formik.isSubmitting}\r\n              onClick={() => history.push(RoleManagementScreens.ROLE_LIST.buildPath(section))}\r\n            >\r\n              Kembali\r\n            </button> */}\r\n            <button\r\n              type='submit'\r\n              className='btn btn-lg btn-secondary fw-bolder me-4'\r\n              disabled={\r\n                formik.isSubmitting ||\r\n                !formik?.values?.module_permissions?.filter(\r\n                  (item: any) => item?.permissions?.length\r\n                ).length\r\n              }\r\n            >\r\n              <span className='indicator-label'>Simpan</span>\r\n              {formik.isSubmitting && (\r\n                <span className='indicator-progress'>\r\n                  Mohon Tunggu...\r\n                  <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                </span>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","const RoleManagementScreens = {\r\n  ROLE_ADMIN: {\r\n    PATH: '/role-management/role-admin',\r\n  },\r\n  ROLE_USER_CORPORATE: {\r\n    PATH: '/role-management/role-user-corporate',\r\n  },\r\n  ROLE_USER_BRAND: {\r\n    PATH: '/role-management/role-user-brand',\r\n  },\r\n  ROLE_USER_STORE: {\r\n    PATH: '/role-management/role-user-store',\r\n  },\r\n  ROLE_LIST: {\r\n    PATH: '/manage-admin/',\r\n  },\r\n  ROLE_REGISTER: {\r\n    PATH: '/role-management/:section/register',\r\n  },\r\n  ROLE_DETAIL: {\r\n    PATH: '/role-management/:section/detail/:id',\r\n  },\r\n  SPECIAL_ROLES: {\r\n    PATH: '/role-management/special-roles',\r\n  },\r\n  DETAIL_SPECIAL_ROLES: {\r\n    PATH: '/role-management/special-roles/detail/:id',\r\n    buildPath: (id: string) => `/role-management/special-roles/detail/${id}`,\r\n  },\r\n}\r\n\r\nexport default RoleManagementScreens\r\n","/* eslint-disable unused-imports/no-unused-imports */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {useFormik} from 'formik'\r\nimport React, {useCallback, useEffect, useMemo, useState} from 'react'\r\nimport * as Yup from 'yup'\r\nimport {getDetailRole, getModules, updateRole} from '../redux/RoleCRUD'\r\nimport {RoleModel, RoleModulesModel, RolePermissions} from '../models/Role'\r\nimport {useHistory, useParams} from 'react-router'\r\nimport {PageTitle} from 'src/_metronic/layout/core'\r\nimport {getTitle} from 'src/app/utils/title-utils'\r\nimport {handlePlatform, handleSectionCapitalize} from '../utils'\r\nimport RoleManagementScreens from '../Screens'\r\nimport {useHeaderToast} from 'src/app/components/ToastComponent'\r\nimport {getErrorMessage} from 'src/app/utils/api-utils'\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  module_permissions: [],\r\n}\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string().required('Nama Role wajib diisi.'),\r\n  module_permissions: Yup.array(),\r\n})\r\n\r\nexport const RoleDetail = () => {\r\n  // States\r\n  const [data, setData] = useState<RoleModel | undefined>(undefined)\r\n  const [modules, setModules] = useState<RoleModulesModel[]>([])\r\n\r\n  // Variables\r\n  const {section, id}: any = useParams()\r\n  const history = useHistory()\r\n  const {addPageToasts} = useHeaderToast()\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    validateOnBlur: false,\r\n    validateOnChange: false,\r\n    onSubmit: (values: any, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      setTimeout(async () => {\r\n        try {\r\n          const tmp: any = {}\r\n          tmp.platform = handlePlatform(section)\r\n          tmp.name = values.name\r\n          tmp.status = 'ACTIVE'\r\n          tmp.module_permissions = values.module_permissions\r\n\r\n          await updateRole(id, tmp)\r\n          setSubmitting(false)\r\n          history.push(RoleManagementScreens.ROLE_LIST.PATH, {\r\n            message: 'Data berhasil disimpan',\r\n          })\r\n        } catch (error) {\r\n          setSubmitting(false)\r\n          addPageToasts({\r\n            scheme: 'danger',\r\n            text: getErrorMessage(error, true) || 'Update Role gagal.',\r\n          })\r\n        }\r\n      }, 1000)\r\n    },\r\n  })\r\n\r\n  // Handlers\r\n  const [updateChecked, setUpdateChecked] = useState<Number>()\r\n  const handleCheck = (id: string, field: 'read' | 'create' | 'update' | 'delete') => {\r\n    const module_permissions: {module_id: string; permissions: string[]}[] =\r\n      formik.values.module_permissions\r\n    const index = module_permissions.findIndex((it: any) => it.module_id === id)\r\n    if (module_permissions[index].permissions.includes(field)) {\r\n      module_permissions[index].permissions = module_permissions[index].permissions.filter(\r\n        (item) => item !== field\r\n      )\r\n    } else {\r\n      module_permissions[index].permissions.push(field)\r\n    }\r\n    formik.setFieldValue('module_permissions', module_permissions)\r\n    setUpdateChecked(Date.now())\r\n  }\r\n\r\n  const isAllChecked = useMemo(() => {\r\n    try {\r\n      let index = -1\r\n      return modules.every((module) => {\r\n        return module.modules.every((item) => {\r\n          index++\r\n          return (\r\n            formik.values.module_permissions[index].permissions.length === item.permissions.length\r\n          )\r\n        })\r\n      })\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [modules, updateChecked])\r\n  const setIsAllChecked = useCallback(\r\n    (checked: boolean) => {\r\n      const module_permissions: any[] = []\r\n      modules.forEach((module) => {\r\n        module.modules.forEach((item) => {\r\n          module_permissions.push({\r\n            module_id: item.id,\r\n            permissions: checked ? [...item.permissions] : [],\r\n          })\r\n        })\r\n      })\r\n      formik.setFieldValue('module_permissions', module_permissions)\r\n      setUpdateChecked(Date.now())\r\n    },\r\n    [modules]\r\n  )\r\n\r\n  // Hooks\r\n  useEffect(() => {\r\n    const getListModule = async () => {\r\n      try {\r\n        let platform = handlePlatform(section)\r\n        const res = await getModules({page: 1, limit: 999999, platform})\r\n        setModules(res.data.data?.items ?? [])\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    getListModule()\r\n  }, [section])\r\n\r\n  useEffect(() => {\r\n    const getRole = async () => {\r\n      try {\r\n        const res: any = await getDetailRole(id)\r\n        Array.isArray(res.data.data) ? setData(res.data.data[0]) : setData(res.data.data)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    if (section && id) {\r\n      getRole()\r\n    }\r\n  }, [section, id])\r\n\r\n  useEffect(() => {\r\n    if (data && modules) {\r\n      if (data.name) formik.setFieldValue('name', data.name)\r\n      const module_permissions: any[] = []\r\n\r\n      modules.map((module) => {\r\n        module.modules.map((item) => {\r\n          module_permissions.push({module_id: item.id, permissions: []})\r\n        })\r\n      })\r\n\r\n      data.module_permissions.map((item) => {\r\n        item.modules.map((module) => {\r\n          const index = module_permissions.findIndex((it) => it.module_id === module.id)\r\n          module_permissions[index] = {module_id: module.id, permissions: module.active_permissions}\r\n        })\r\n      })\r\n\r\n      formik.setFieldValue('module_permissions', module_permissions)\r\n      setUpdateChecked(Date.now())\r\n    }\r\n  }, [data, modules])\r\n\r\n  //start::TITLE_FUNC\r\n  const pageTitle = useMemo(() => 'Detail Role', [])\r\n\r\n  const breadcrumbs = useMemo(\r\n    () => [\r\n      {\r\n        isActive: false,\r\n        path: `/role-management/${section}`,\r\n        title: `List ${handleSectionCapitalize(section)}`,\r\n      },\r\n      {isActive: false, path: '', title: '', isSeparator: true},\r\n    ],\r\n    [section]\r\n  )\r\n\r\n  useEffect(() => {\r\n    document.title = getTitle(pageTitle)\r\n  }, [])\r\n  //end::TITLE_FUNC\r\n\r\n  return (\r\n    <div className='card'>\r\n      <PageTitle breadcrumbs={breadcrumbs}>{pageTitle}</PageTitle>\r\n      <div className='card-body'>\r\n        <form className='form w-100' onSubmit={formik.handleSubmit} noValidate>\r\n          <div className='mb-10 row'>\r\n            <div className='col-12'>\r\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\r\n                Nama Role*\r\n              </label>\r\n              <input\r\n                {...formik.getFieldProps('name')}\r\n                type='text'\r\n                className='form-control form-control-lg form-control-solid'\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='mb-10'>\r\n            <label className='form-check form-check-custom form-check-solid w-150px'>\r\n              <input\r\n                className='form-check-input'\r\n                type='checkbox'\r\n                onChange={() => setIsAllChecked(!isAllChecked)}\r\n                checked={isAllChecked}\r\n              />\r\n              <span className='form-check-label fw-bold fs-6 min-w-100'>Centang semua akses</span>\r\n            </label>\r\n          </div>\r\n\r\n          <div className='mb-10'>\r\n            <table className='table gy-4 gs-3'>\r\n              <thead>\r\n                <tr className='fw-bold fs-6 text-gray-800'>\r\n                  <th>Modul</th>\r\n                  <th className='text-center'>Read</th>\r\n                  <th className='text-center'>Create</th>\r\n                  <th className='text-center'>Update</th>\r\n                  <th className='text-center'>Delete</th>\r\n                </tr>\r\n              </thead>\r\n              {modules.length\r\n                ? modules.map((module) => (\r\n                    <tbody key={`module_${module?.id}`}>\r\n                      {module.modules.length ? (\r\n                        <tr>\r\n                          <td colSpan={5} className='text-gray-500'>\r\n                            {module.name}\r\n                          </td>\r\n                        </tr>\r\n                      ) : null}\r\n                      {module.modules.map((item) => (\r\n                        <tr key={`module_item_${item.id}`}>\r\n                          <td className='fw-bold fs-7 text-gray-800'>{item.name}</td>\r\n                          <td className='text-center'>\r\n                            {item.permissions.includes(RolePermissions.READ) && (\r\n                              <label className='form-check form-check-custom form-check-solid max-w-100 mx-auto'>\r\n                                <input\r\n                                  className='form-check-input'\r\n                                  type='checkbox'\r\n                                  onChange={() => handleCheck(item.id, 'read')}\r\n                                  checked={\r\n                                    formik?.values?.module_permissions\r\n                                      ?.find((it: any) => it?.module_id === item?.id)\r\n                                      ?.permissions?.includes('read') ?? false\r\n                                  }\r\n                                />\r\n                              </label>\r\n                            )}\r\n                          </td>\r\n                          <td className='text-center'>\r\n                            {item.permissions.includes(RolePermissions.CREATE) && (\r\n                              <label className='form-check form-check-custom form-check-solid max-w-100 mx-auto'>\r\n                                <input\r\n                                  className='form-check-input'\r\n                                  type='checkbox'\r\n                                  onChange={() => handleCheck(item?.id, 'create')}\r\n                                  checked={\r\n                                    formik?.values?.module_permissions\r\n                                      ?.find((it: any) => it?.module_id === item?.id)\r\n                                      ?.permissions?.includes('create') ?? false\r\n                                  }\r\n                                />\r\n                              </label>\r\n                            )}\r\n                          </td>\r\n                          <td className='text-center'>\r\n                            {item.permissions.includes(RolePermissions.UPDATE) && (\r\n                              <label className='form-check form-check-custom form-check-solid max-w-100 mx-auto'>\r\n                                <input\r\n                                  className='form-check-input'\r\n                                  type='checkbox'\r\n                                  onChange={() => handleCheck(item?.id, 'update')}\r\n                                  checked={\r\n                                    formik?.values?.module_permissions\r\n                                      ?.find((it: any) => it?.module_id === item?.id)\r\n                                      ?.permissions?.includes('update') ?? false\r\n                                  }\r\n                                />\r\n                              </label>\r\n                            )}\r\n                          </td>\r\n                          <td className='text-center'>\r\n                            {item.permissions.includes(RolePermissions.DELETE) && (\r\n                              <label className='form-check form-check-custom form-check-solid max-w-100 mx-auto'>\r\n                                <input\r\n                                  className='form-check-input'\r\n                                  type='checkbox'\r\n                                  onChange={() => handleCheck(item?.id, 'delete')}\r\n                                  checked={\r\n                                    formik?.values?.module_permissions\r\n                                      ?.find((it: any) => it?.module_id === item?.id)\r\n                                      ?.permissions?.includes('delete') ?? false\r\n                                  }\r\n                                />\r\n                              </label>\r\n                            )}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  ))\r\n                : null}\r\n            </table>\r\n          </div>\r\n\r\n          <div className='border-top pt-10 cardfooter-btns'>\r\n            <button\r\n              type='button'\r\n              className={`btn btn-lg btn-light fw-bolder me-4`}\r\n              disabled={formik.isSubmitting}\r\n              onClick={() => history.push(RoleManagementScreens.ROLE_LIST.PATH)}\r\n            >\r\n              Kembali\r\n            </button>\r\n            <button\r\n              type='submit'\r\n              className='btn btn-lg btn-secondary fw-bolder me-4'\r\n              disabled={\r\n                formik.isSubmitting ||\r\n                !formik?.values?.module_permissions?.filter(\r\n                  (item: any) => item?.permissions?.length\r\n                ).length\r\n              }\r\n            >\r\n              <span className='indicator-label'>Simpan</span>\r\n              {formik.isSubmitting && (\r\n                <span className='indicator-progress'>\r\n                  Mohon Tunggu...\r\n                  <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                </span>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import {Action} from 'redux'\r\nimport persistReducer from 'redux-persist/es/persistReducer'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nnamespace RolesRedux {\r\n  const STORAGE_KEY = 'hermes-roles'\r\n\r\n  export interface ActionWithPayload<T> extends Action {\r\n    payload?: T\r\n  }\r\n\r\n  export const actionTypes = {\r\n    GetListRole: '[Get List Role] Action',\r\n    IsLoading: '[IsLoading Role] Action',\r\n    SetMessage: '[Set Message Role] Action',\r\n  }\r\n\r\n  const initialBrandState: IRoleState = {\r\n    data: undefined,\r\n    isLoading: false,\r\n    message: '',\r\n  }\r\n\r\n  export interface IRoleState {\r\n    data?: any\r\n    isLoading?: boolean\r\n    message?: string\r\n  }\r\n\r\n  export const reducer = persistReducer(\r\n    {\r\n      storage,\r\n      key: STORAGE_KEY,\r\n      whitelist: ['roles', 'isLoading', 'message'],\r\n    },\r\n    (state: IRoleState = initialBrandState, action: ActionWithPayload<IRoleState> = {type: ''}) => {\r\n      const data = action.payload?.data\r\n      const isLoading = action.payload?.isLoading\r\n      const message = action.payload?.message\r\n\r\n      switch (action.type) {\r\n        case actionTypes.GetListRole:\r\n          return {...state, data, isLoading: false}\r\n        case actionTypes.IsLoading:\r\n          return {...state, isLoading}\r\n        case actionTypes.SetMessage:\r\n          return {...state, message}\r\n        default:\r\n          return state\r\n      }\r\n    }\r\n  )\r\n\r\n  export const actions = {\r\n    getListRole: (data: any) => ({\r\n      type: actionTypes.GetListRole,\r\n      payload: {data},\r\n    }),\r\n    setIsLoading: (isLoading: boolean) => ({\r\n      type: actionTypes.IsLoading,\r\n      payload: {isLoading},\r\n    }),\r\n    setMessage: (message: string) => ({type: actionTypes.SetMessage, payload: {message}}),\r\n  }\r\n}\r\n\r\nexport default RolesRedux\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, {useState, useEffect, MouseEventHandler, useMemo} from 'react'\r\nimport InlineSVG from 'react-inlinesvg/esm'\r\nimport {Link, useHistory, useParams} from 'react-router-dom'\r\nimport useDebounce from 'src/app/hooks/useDebounce'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport {getRoles, deleteRole as onDeleteRole} from '../redux/RoleCRUD'\r\nimport {RootState} from 'src/setup'\r\nimport RolesRedux from '../redux/RolesRedux'\r\nimport {PageTitle} from 'src/_metronic/layout/core'\r\nimport {getTitle} from 'src/app/utils/title-utils'\r\nimport Pagination from 'src/app/components/Pagination'\r\nimport {RoleModel, RolePermissionModel, RolePermissionModuleModel} from '../models/Role'\r\nimport {Modal} from 'react-bootstrap-v5'\r\nimport {KTSVG} from 'src/_metronic/helpers'\r\nimport {getPermissionModule, handlePlatform, handleSectionCapitalize} from '../utils'\r\nimport {usePermissions} from 'src/app/hooks/permissions-hook'\r\nimport {useHeaderToast} from 'src/app/components/ToastComponent'\r\nimport {getErrorMessage} from 'src/app/utils/api-utils'\r\n\r\nexport const RoleList = () => {\r\n  // States\r\n  const [filter, setFilter] = useState({\r\n    search: '',\r\n    status: '',\r\n    limit: 10,\r\n    platform: '',\r\n  })\r\n  const [page, setPage] = useState(1)\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const [deleteItem, setDeleteItem] = useState<RoleModel | undefined>(undefined)\r\n  const [loading, setLoading] = useState(false)\r\n  const [isFailed, setIsFailed] = useState('')\r\n  const [showDelete, setShowDelete] = useState(false)\r\n\r\n  // Variables\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const {addPageToasts} = useHeaderToast()\r\n  const {section}: any = useParams()\r\n  const {data, isLoading}: any = useSelector<RootState>(({roles}) => roles, shallowEqual)\r\n  const filterDebounce = useDebounce(filter, 500)\r\n  const module = useMemo(() => getPermissionModule(section), [section])\r\n  const {hasAccess} = usePermissions({code: module})\r\n\r\n  // Handlers\r\n  const handleChange = (event: any) => {\r\n    const {name, value} = event.target\r\n\r\n    setFilter((state) => ({...state, [name]: value}))\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    if (deleteItem?.id) {\r\n      setLoading(true)\r\n      setTimeout(() => {\r\n        onDeleteRole(deleteItem?.id)\r\n          .then(() => {\r\n            getList()\r\n            addPageToasts({scheme: 'info', text: 'Role berhasil dihapus'})\r\n            setLoading(false)\r\n            setDeleteItem(undefined)\r\n            setShowDelete(false)\r\n          })\r\n          .catch((error) => {\r\n            const message = getErrorMessage(error, true) || 'Role gagal dihapus'\r\n            setShowDelete(true)\r\n            setIsFailed(message)\r\n            setLoading(false)\r\n          })\r\n      }, 1000)\r\n    }\r\n  }\r\n\r\n  const getList = () => {\r\n    dispatch(RolesRedux.actions.getListRole(undefined))\r\n    dispatch(RolesRedux.actions.setIsLoading(true))\r\n    setTimeout(async () => {\r\n      try {\r\n        const params: any = {page}\r\n        const {limit, search, status, platform} = filter\r\n        if (platform) params.platform = platform\r\n        if (limit) params.limit = limit\r\n        if (search) params.search = search\r\n        if (status) params.status = status\r\n\r\n        const result = await getRoles(params)\r\n        const list = result.data.data\r\n\r\n        dispatch(RolesRedux.actions.getListRole(list))\r\n        setErrorMessage('')\r\n      } catch (error) {\r\n        setErrorMessage('Error, try to refresh the page')\r\n        dispatch(RolesRedux.actions.getListRole(undefined))\r\n      }\r\n    }, 1000)\r\n  }\r\n\r\n  // Hooks\r\n  useEffect(() => {\r\n    if (section) setFilter((state) => ({...state, platform: handlePlatform(section)}))\r\n  }, [section])\r\n\r\n  //start::TITLE_FUNC\r\n  const titleAlt = useMemo(() => handleSectionCapitalize(section), [section])\r\n  const pageTitle = useMemo(() => `List ${titleAlt}`, [titleAlt])\r\n\r\n  useEffect(() => {\r\n    document.title = getTitle(pageTitle)\r\n  }, [pageTitle])\r\n  //end::TITLE_FUNC\r\n\r\n  useEffect(() => {\r\n    setPage(1)\r\n  }, [filterDebounce])\r\n\r\n  useEffect(() => {\r\n    if (filter.platform) getList()\r\n  }, [filterDebounce, page])\r\n\r\n  useEffect(() => {\r\n    const locationState: any = history.location.state\r\n    if (locationState?.message) {\r\n      addPageToasts({scheme: 'info', text: locationState?.message})\r\n      setTimeout(() => {\r\n        history.replace({state: {}})\r\n      }, 5000)\r\n    }\r\n  }, [history.location.state])\r\n\r\n  return (\r\n    <div className='position-relative'>\r\n      <PageTitle description={pageTitle}>{titleAlt}</PageTitle>\r\n      <ModalDelete\r\n        show={showDelete}\r\n        handleClose={() => {\r\n          setShowDelete(false)\r\n          setIsFailed('')\r\n        }}\r\n        handleProcess={handleDelete}\r\n        item={deleteItem}\r\n        loading={loading}\r\n        isFailed={isFailed}\r\n        section={handleSectionCapitalize(section)}\r\n      />\r\n\r\n      <div className='card'>\r\n        <div className='card-header d-flex align-items-center justify-conten-between'>\r\n          <h1>List {handleSectionCapitalize(section)}</h1>\r\n          <div className='card-toolbar'>\r\n            {hasAccess({access: 'create'}) ? (\r\n              <button\r\n                onClick={() => history.push(`/role-management/${section}/register`)}\r\n                type='button'\r\n                className='btn btn-sm btn-secondary fw-bold fs-6'\r\n              >\r\n                Tambah Role\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className='card-body'>\r\n          <div className='d-flex flex-column flex-lg-row'>\r\n            <div className='mb-4 w-lg-200px w-100 position-relative'>\r\n              <InlineSVG\r\n                src={'/media/icons/efood/IconSearch.svg'}\r\n                className='position-absolute translate-middle-y top-50 ms-4 pe-none'\r\n              />\r\n              <input\r\n                placeholder='Cari'\r\n                className='form-control form-control-lg form-control-solid ps-13'\r\n                type='text'\r\n                autoComplete='off'\r\n                onChange={handleChange}\r\n                name='search'\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className='overflow-auto position-relative mb-5'>\r\n            {isLoading && <div className='overlay-light'></div>}\r\n            <table className='table table-striped gy-7 gs-7 mt-10'>\r\n              <thead>\r\n                <tr className='fw-bold fs-6 text-gray-600 border-bottom border-gray-200'>\r\n                  <th>No.</th>\r\n                  <th style={{minWidth: 100}}>Action</th>\r\n                  <th className='min-w-100'>Nama Role</th>\r\n                  <th>Akses</th>\r\n                </tr>\r\n              </thead>\r\n              {section ? (\r\n                <tbody>\r\n                  {data?.items?.length ? (\r\n                    data?.items?.map((item: RoleModel, index: number) => (\r\n                      <tr key={`${item.name}_${index}`} className='fw-bold fs-6'>\r\n                        <td className='pt-9'>{(page - 1) * (filter?.limit || 10) + index + 1}</td>\r\n                        <td>\r\n                          <div className='d-flex'>\r\n                            {hasAccess({access: 'update'}) ? (\r\n                              <Link to={`/role-management/${section}/detail/${item.id}`}>\r\n                                <InlineSVG src='/media/icons/efood/IconEdit.svg' />\r\n                              </Link>\r\n                            ) : null}\r\n                            {hasAccess({access: 'delete'}) && !item?.special_role?.name ? (\r\n                              <button\r\n                                className='btn btn-transparent p-0 ms-5'\r\n                                onClick={() => {\r\n                                  setShowDelete(true)\r\n                                  setDeleteItem(item)\r\n                                }}\r\n                              >\r\n                                <InlineSVG src='/media/icons/efood/IconDelete.svg' />\r\n                              </button>\r\n                            ) : null}\r\n                          </div>\r\n                        </td>\r\n                        <td className='pt-9'>{item?.name}</td>\r\n                        <td>\r\n                          {item?.module_permissions?.map((permission: RolePermissionModel) => (\r\n                            <div key={`permission_${permission?.id}`}>\r\n                              <div className='pt-2'>{permission?.name}</div>\r\n                              {permission?.modules?.map((module: RolePermissionModuleModel) => (\r\n                                <div\r\n                                  key={`module_${module?.name}`}\r\n                                  className='d-flex align-items-center'\r\n                                >\r\n                                  <div className='w-200px fw-normal'>\r\n                                    <span className='min-w-100'>{module?.name}</span>\r\n                                  </div>\r\n                                  <div className='ps-5 fw-normal'>\r\n                                    <span className='min-w-100'>\r\n                                      : {module?.active_permissions?.join(', ')}\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          ))}\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan={7} className='text-center fw-bold fs-6 bg-light'>\r\n                        {isLoading ? 'Loading' : errorMessage ? errorMessage : 'Data Kosong'}\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              ) : null}\r\n            </table>\r\n          </div>\r\n          <Pagination\r\n            loading={isLoading}\r\n            page={page}\r\n            limit={Number(filter.limit || 10)}\r\n            setPage={setPage}\r\n            setPerPage={(limit) => setFilter({...filter, limit})}\r\n            maxData={data?.total_item || 0}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface ModalDeleteModel {\r\n  show: boolean\r\n  handleClose: MouseEventHandler<HTMLDivElement | HTMLButtonElement>\r\n  handleProcess: MouseEventHandler<HTMLDivElement | HTMLButtonElement>\r\n  loading?: boolean\r\n  item?: RoleModel\r\n  isFailed?: string\r\n  section?: string\r\n}\r\n\r\nconst ModalDelete = ({\r\n  show,\r\n  handleClose,\r\n  handleProcess,\r\n  loading,\r\n  item,\r\n  isFailed,\r\n  section,\r\n}: ModalDeleteModel) => {\r\n  return (\r\n    <Modal\r\n      id='kt_modal_create_app'\r\n      tabIndex={-1}\r\n      aria-hidden='true'\r\n      dialogClassName='modal-dialog-centered mw-500px h-auto'\r\n      show={show}\r\n      onHide={handleClose}\r\n      centered\r\n    >\r\n      <div className='modal-header pt-8 pb-5 px-10 d-flex justify-content-between border-bottom-1'>\r\n        {/* begin::Close */}\r\n        {isFailed ? <h1>Gagal Menghapus Role</h1> : <h1>Hapus Role</h1>}\r\n        <div className='btn btn-icon btn-sm btn-transparent' onClick={handleClose}>\r\n          <KTSVG className='svg-icon-2' path='/media/icons/duotune/arrows/arr061.svg' />\r\n        </div>\r\n        {/* end::Close */}\r\n      </div>\r\n      <div className='modal-body px-10 py-10'>\r\n        {isFailed ? (\r\n          isFailed?.toLowerCase()?.includes('tidak ditemukan') ? (\r\n            <span>{isFailed}</span>\r\n          ) : (\r\n            <span>\r\n              Gagal menghapus role karena masih ada {section} dengan role{' '}\r\n              <span className='fw-bolder fs-6'>{item?.name}</span>. Ubah data User atau Hapus User\r\n              terlebih dahulu sebelum menghapus role.\r\n            </span>\r\n          )\r\n        ) : (\r\n          <span>\r\n            Apakah Anda yakin ingin menghapus role{' '}\r\n            <span className='fw-bolder fs-6'>{item?.name}</span>?\r\n          </span>\r\n        )}\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <div className='d-flex pb-lg-0'>\r\n          {!isFailed && (\r\n            <button\r\n              type='submit'\r\n              id='kt_password_reset_submit'\r\n              className='btn btn-lg btn-light fw-bolder d-block me-4'\r\n              onClick={handleProcess}\r\n              disabled={loading}\r\n            >\r\n              <span className='indicator-label text-secondary'>Hapus</span>\r\n              {loading && (\r\n                <span className='indicator-progress'>\r\n                  Mohon Tunggu...\r\n                  <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                </span>\r\n              )}\r\n            </button>\r\n          )}\r\n          <button\r\n            type='button'\r\n            id='kt_login_password_reset_form_cancel_button'\r\n            className='btn btn-lg btn-secondary fw-bolder'\r\n            onClick={handleClose}\r\n          >\r\n            Kembali\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, {useState, useEffect} from 'react'\r\nimport InlineSVG from 'react-inlinesvg/esm'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport useDebounce from 'src/app/hooks/useDebounce'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport {getSpecialRoles} from '../redux/RoleCRUD'\r\nimport {RootState} from 'src/setup'\r\nimport RolesRedux from '../redux/RolesRedux'\r\nimport {PageTitle} from 'src/_metronic/layout/core'\r\nimport {getTitle} from 'src/app/utils/title-utils'\r\nimport {usePermissions} from 'src/app/hooks/permissions-hook'\r\nimport {SpecialRoleModel} from '../models/SpecialRole'\r\nimport RoleManagementScreens from '../Screens'\r\nimport {useHeaderToast} from 'src/app/components/ToastComponent'\r\n\r\nexport const SpecialRoleList = () => {\r\n  // States\r\n  const [search, setSearch] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n\r\n  // Variables\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const {addPageToasts} = useHeaderToast()\r\n  const {data, isLoading}: any = useSelector<RootState>(({roles}) => roles, shallowEqual)\r\n  const searchDebounce = useDebounce(search, 500)\r\n  const {hasAccess} = usePermissions({code: 'user_role_special_role'})\r\n\r\n  // Handlers\r\n  const handleSearch = (event: any) => {\r\n    const {value} = event.target\r\n    setSearch(value)\r\n  }\r\n\r\n  const getList = () => {\r\n    dispatch(RolesRedux.actions.getListRole(undefined))\r\n    dispatch(RolesRedux.actions.setIsLoading(true))\r\n    setTimeout(async () => {\r\n      try {\r\n        const params: any = {page: 1, limit: 999999}\r\n        if (search) params.search = search\r\n\r\n        const result = await getSpecialRoles(params)\r\n        const list = result.data.data as any\r\n\r\n        dispatch(RolesRedux.actions.getListRole(list))\r\n        setErrorMessage('')\r\n      } catch (error) {\r\n        setErrorMessage('Error, try to refresh the page')\r\n        dispatch(RolesRedux.actions.getListRole(undefined))\r\n      }\r\n    }, 1000)\r\n  }\r\n\r\n  // Hooks\r\n  useEffect(() => {\r\n    getList()\r\n  }, [searchDebounce])\r\n\r\n  useEffect(() => {\r\n    document.title = getTitle('List Special Roles')\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const locationState = history.location.state as any\r\n    if (locationState?.message) {\r\n      addPageToasts({scheme: 'info', text: locationState?.message})\r\n      setTimeout(() => {\r\n        history.replace({state: {}})\r\n      }, 5000)\r\n    }\r\n  }, [history.location.state])\r\n\r\n  useEffect(() => {\r\n    if (!hasAccess({access: 'read'})) {\r\n      history.push('/dashboard')\r\n    }\r\n  }, [hasAccess({access: 'read'})])\r\n\r\n  return (\r\n    <div className='position-relative'>\r\n      <PageTitle description='List Special Roles'>Special Roles</PageTitle>\r\n\r\n      <div className='card'>\r\n        <div className='card-header d-flex align-items-center justify-conten-between'>\r\n          <h1>List Special Roles</h1>\r\n        </div>\r\n        <div className='card-body'>\r\n          <div className='d-flex flex-column flex-lg-row'>\r\n            <div className='mb-4 w-lg-200px w-100 position-relative'>\r\n              <InlineSVG\r\n                src={'/media/icons/efood/IconSearch.svg'}\r\n                className='position-absolute translate-middle-y top-50 ms-4 pe-none'\r\n              />\r\n              <input\r\n                placeholder='Cari'\r\n                className='form-control form-control-lg form-control-solid ps-13'\r\n                type='text'\r\n                autoComplete='off'\r\n                onChange={handleSearch}\r\n                name='search'\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className='overflow-auto position-relative mb-5'>\r\n            {isLoading && <div className='overlay-light'></div>}\r\n            <table className='table table-striped gy-5 gs-7 mt-5'>\r\n              <thead>\r\n                <tr className='fw-bold fs-6 text-gray-600 border-bottom border-gray-200'>\r\n                  <th>No.</th>\r\n                  <th style={{minWidth: 100}}>Action</th>\r\n                  <th className='min-w-100'>Nama Special Role</th>\r\n                  <th>Role</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data?.length ? (\r\n                  data?.map((item: SpecialRoleModel, index: number) => (\r\n                    <tr key={`${item.name}_${index}`} className='fw-bold fs-6 align-middle'>\r\n                      <td>{index + 1}</td>\r\n                      <td>\r\n                        <div className='d-flex'>\r\n                          {hasAccess({access: 'update'}) ? (\r\n                            <Link\r\n                              to={RoleManagementScreens.DETAIL_SPECIAL_ROLES.buildPath(item?.id)}\r\n                            >\r\n                              <InlineSVG src='/media/icons/efood/IconEdit.svg' />\r\n                            </Link>\r\n                          ) : null}\r\n                        </div>\r\n                      </td>\r\n                      <td>{item?.name}</td>\r\n                      <td>{item?.role?.name}</td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan={7} className='text-center fw-bold fs-6 bg-light'>\r\n                      {isLoading ? 'Loading' : errorMessage ? errorMessage : 'Data Kosong'}\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import {useFormik} from 'formik'\r\nimport React, {useEffect, useState} from 'react'\r\nimport {Link, useHistory, useParams} from 'react-router-dom'\r\nimport {useHeaderToast} from 'src/app/components/ToastComponent'\r\nimport * as Yup from 'yup'\r\nimport {PageTitle} from 'src/_metronic/layout/core'\r\nimport RoleManagementScreens from '../Screens'\r\nimport {usePermissions} from 'src/app/hooks/permissions-hook'\r\nimport {getTitle} from 'src/app/utils/title-utils'\r\nimport {getDetailSpecialRole, getRoles, setUpdateSpecialRole} from '../redux/RoleCRUD'\r\nimport {SpecialRoleModel} from '../models/SpecialRole'\r\nimport {getErrorMessage} from 'src/app/utils/api-utils'\r\nimport Select from 'react-select'\r\nimport {LabelValueProps, ReactSelectMetronicTheme} from 'src/app/components/CustomReactSelect'\r\nimport {SelectComponentsConfig} from 'react-select'\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  role: undefined,\r\n}\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string(),\r\n  role: Yup.object()\r\n    .shape({\r\n      value: Yup.string(),\r\n      label: Yup.string(),\r\n    })\r\n    .required('Role wajib diisi'),\r\n})\r\n\r\nconst SpecialRoleDetail = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [roles, setRoles] = useState<LabelValueProps[]>([])\r\n\r\n  const history = useHistory()\r\n  const {id}: any = useParams()\r\n  const {addPageToasts} = useHeaderToast()\r\n  const {canAccessPage} = usePermissions({code: 'user_role_special_role', access: 'update'})\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validateOnBlur: false,\r\n    validateOnChange: false,\r\n    validationSchema,\r\n    onSubmit: (values: any, {setStatus, setSubmitting}) => {\r\n      setLoading(true)\r\n      setSubmitting(true)\r\n\r\n      setUpdateSpecialRole(id, {role_id: values.role.value})\r\n        .then(() => {\r\n          history.push(RoleManagementScreens.SPECIAL_ROLES.PATH, {\r\n            message: 'Data berhasil disimpan.',\r\n          })\r\n          setSubmitting(false)\r\n        })\r\n        .catch((error: any) => {\r\n          addPageToasts({scheme: 'danger', text: 'Data gagal disimpan.'})\r\n          setLoading(false)\r\n          setSubmitting(false)\r\n        })\r\n    },\r\n  })\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    getDetailSpecialRole(id)\r\n      .then((res) => {\r\n        const data: SpecialRoleModel | undefined = res.data.data\r\n\r\n        if (data?.name) formik.setFieldValue('name', data?.name)\r\n        if (data?.role)\r\n          formik.setFieldValue('role', {value: data?.role?.id, label: data?.role?.name})\r\n        setLoading(false)\r\n      })\r\n      .catch((error) => {\r\n        addPageToasts({\r\n          scheme: 'danger',\r\n          text: getErrorMessage(error) || 'Gagal mendapatkan detail special role.',\r\n        })\r\n        setLoading(false)\r\n        return\r\n      })\r\n  }, [id])\r\n\r\n  useEffect(() => {\r\n    document.title = getTitle('Detail Special Role')\r\n\r\n    getRoles({page: 1, limit: 999999})\r\n      .then((res) => {\r\n        const options = res.data.data?.items?.map((item) => ({value: item?.id, label: item?.name}))\r\n        setRoles(options as LabelValueProps[])\r\n      })\r\n      .catch((err) => {\r\n        return\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <PageTitle\r\n        description='Detail Special Role'\r\n        breadcrumbs={[\r\n          {\r\n            isActive: false,\r\n            title: 'List Special Roles',\r\n            path: RoleManagementScreens.SPECIAL_ROLES.PATH,\r\n          },\r\n          {\r\n            isSeparator: true,\r\n            isActive: false,\r\n            title: '',\r\n            path: '',\r\n          },\r\n        ]}\r\n      >\r\n        Detail Special Role\r\n      </PageTitle>\r\n      <div className='card'>\r\n        <div className='card-body'>\r\n          <form noValidate onSubmit={formik.handleSubmit}>\r\n            <div className='row'>\r\n              <div className='col-12 col-md-6 mb-10'>\r\n                <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>\r\n                  Nama Special Role\r\n                </label>\r\n                <input\r\n                  placeholder=''\r\n                  {...formik.getFieldProps('name')}\r\n                  className='form-control form-control-lg form-control-solid'\r\n                  type='text'\r\n                  onChange={({target}) => formik.setFieldValue('name', target.value)}\r\n                  disabled\r\n                  maxLength={150}\r\n                />\r\n              </div>\r\n              <div className='col-12 col-md-6 mb-10'>\r\n                <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>Role*</label>\r\n                <Select\r\n                  placeholder='Pilih Role'\r\n                  key={`brand-${formik.values.deeplink_type}`}\r\n                  cacheOptions\r\n                  defaultOptions\r\n                  components={\r\n                    ReactSelectMetronicTheme as SelectComponentsConfig<LabelValueProps, false>\r\n                  }\r\n                  options={roles}\r\n                  value={formik.values.role}\r\n                  onChange={(value) => formik.setFieldValue('role', value)}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='border-top pt-10 cardfooter-btns'>\r\n              <Link\r\n                type='button'\r\n                className='btn btn-lg btn-light fw-bolder me-4'\r\n                to={RoleManagementScreens.SPECIAL_ROLES.PATH}\r\n              >\r\n                Kembali\r\n              </Link>\r\n\r\n              {canAccessPage && (\r\n                <button\r\n                  type='submit'\r\n                  className='btn btn-lg btn-secondary fw-bolder'\r\n                  disabled={loading || formik.isSubmitting}\r\n                >\r\n                  <span className='indicator-label'>Simpan</span>\r\n                  {formik.isSubmitting && (\r\n                    <span className='indicator-progress'>\r\n                      Mohon Tunggu...\r\n                      <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                    </span>\r\n                  )}\r\n                </button>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SpecialRoleDetail\r\n","import React from 'react'\r\nimport {Route, Switch} from 'react-router-dom'\r\nimport {RoleRegister} from './page/RoleRegister'\r\nimport {RoleDetail} from './page/RoleDetail'\r\nimport {RoleList} from './page/RoleList'\r\nimport RoleManagementScreens from './Screens'\r\nimport {SpecialRoleList} from './page/SpecialRoleList'\r\nimport SpecialRoleDetail from './page/SpecialRoleDetail'\r\n\r\nconst ManageAdminRoutes: React.FC = () => {\r\n  return (\r\n    <Switch>\r\n      <Route\r\n        path={RoleManagementScreens.DETAIL_SPECIAL_ROLES.PATH}\r\n        component={SpecialRoleDetail}\r\n        exact\r\n      />\r\n      <Route path={RoleManagementScreens.SPECIAL_ROLES.PATH} component={SpecialRoleList} exact />\r\n      <Route path={RoleManagementScreens.ROLE_LIST.PATH} component={RoleList} exact />\r\n      <Route path={RoleManagementScreens.ROLE_DETAIL.PATH} component={RoleDetail} exact />\r\n      <Route path={RoleManagementScreens.ROLE_REGISTER.PATH} component={RoleRegister} exact />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default ManageAdminRoutes\r\n"],"sourceRoot":""}