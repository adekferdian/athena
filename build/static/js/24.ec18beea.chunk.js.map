{"version":3,"sources":["app/hooks/pagination-hook.ts","app/components/Pagination.tsx","app/utils/hook-utils.ts","app/modules/games/redux/GamesCRUD.ts","app/modules/games/Screens.ts","app/modules/games/components/DeleteGamesModal.tsx","app/modules/games/page/GamesList.tsx","app/modules/games/GamesRoutes.tsx"],"names":["usePagination","loadData","defaultState","useState","state","setState","setPage","useCallback","page","prev","refreshing","total","Math","ceil","limit","loading","setQuery","builder","query","setLimit","callback","isActive","source","axios","CancelToken","runner","extractState","localState","token","cancel","useEffect","Pagination","setPerPage","maxData","pageNum","useMemo","pageList","result","normalizedPage","min","max","i","push","undefined","className","src","autoComplete","value","onChange","e","Number","currentTarget","length","onClick","map","x","dispatcher","Promise","r","url","getGamesList","search","statuses","get","params","GamesScreens","GAMES_LIST","PATH","TITLE","ADD_GAMES","EDIT_GAMES","DeleteGamesModal","show","handleClose","data","onDelete","Modal","tabIndex","onHide","centered","path","name","type","GamesList","props","addPageToasts","useHeaderToast","history","useHistory","showDeleteModal","setShowDeleteModal","handleDeleteData","setHandleDeleteData","cancelToken","fetchCall","status","games","error","current_page","items","document","title","getTitle","to","pathname","role_id","target","placeholder","colSpan","index","description","gamer_types","style","minWidth","id","cursor","backgroundColor","delete","then","catch","err","scheme","text","getErrorMessage","GamesRoutes","component","from","exact"],"mappings":"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","file":"static/js/24.ec18beea.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport {useCallback, useEffect, useState} from 'react'\r\nimport {extractState} from '../utils/hook-utils'\r\n\r\nexport type PaginationState<T, Q> = {\r\n  loading: boolean\r\n  refreshing: boolean\r\n  error: boolean\r\n  page: number\r\n  data: T[]\r\n  limit: number\r\n  total: number\r\n  query: Q\r\n}\r\n\r\nexport function usePagination<T, Q>(\r\n  loadData: (\r\n    state: PaginationState<T, Q>,\r\n    setState: React.Dispatch<React.SetStateAction<PaginationState<T, Q>>>,\r\n    isActive: () => boolean,\r\n    token: any\r\n  ) => any,\r\n  defaultState: PaginationState<T, Q>\r\n) {\r\n  const [state, setState] = useState(defaultState)\r\n  const setPage = useCallback((page: number) => {\r\n    setState((prev) => {\r\n      if (prev.refreshing || (prev.total > 0 && !Math.ceil(prev.total / prev.limit))) return prev\r\n      return {\r\n        ...prev,\r\n        loading: true,\r\n        refreshing: false,\r\n        page,\r\n      }\r\n    })\r\n  }, [])\r\n  const setQuery = useCallback((builder: (query: Q) => Q) => {\r\n    setState((prev) => ({\r\n      ...prev,\r\n      loading: true,\r\n      refreshing: true,\r\n      page: 1,\r\n      total: 0,\r\n      query: builder(prev.query),\r\n    }))\r\n  }, [])\r\n  const setLimit = useCallback((limit: number) => {\r\n    setState((prev) => ({\r\n      ...prev,\r\n      loading: true,\r\n      refreshing: true,\r\n      page: 1,\r\n      total: 0,\r\n      limit,\r\n    }))\r\n  }, [])\r\n  const callback = useCallback(() => {\r\n    let isActive = true\r\n    const source = axios.CancelToken.source()\r\n    const runner = async () => {\r\n      const localState = await extractState(setState)\r\n      if (!localState.loading && !localState.refreshing) return\r\n      loadData(localState, setState, () => isActive, source.token)\r\n    }\r\n    runner()\r\n    return () => {\r\n      isActive = false\r\n      source.cancel()\r\n    }\r\n  }, [loadData])\r\n  useEffect(callback, [state.loading, state.refreshing])\r\n  return {\r\n    state,\r\n    setPage,\r\n    setQuery,\r\n    setLimit,\r\n    setState,\r\n  }\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {FC, useMemo} from 'react'\r\nimport InlineSVG from 'react-inlinesvg/esm'\r\n\r\ntype PaginationProps = {\r\n  loading: boolean\r\n  limit: number\r\n  setPerPage: (number: number) => void\r\n  page: number\r\n  setPage: (number: number) => void\r\n  maxData: number\r\n}\r\n\r\nconst Pagination: FC<PaginationProps> = ({loading, limit, setPerPage, page, setPage, maxData}) => {\r\n  const pageNum = useMemo(() => Math.ceil(maxData / limit), [maxData, limit])\r\n  const pageList = useMemo(() => {\r\n    const result: (number | undefined)[] = []\r\n    if (pageNum === 0) return result\r\n    const normalizedPage = Math.min(pageNum, Math.max(0, page))\r\n    if (pageNum < 8)\r\n      for (let i = 1; i <= pageNum; i++) {\r\n        result.push(i)\r\n      }\r\n    else {\r\n      if (normalizedPage > 4) result.push(1, undefined, Math.min(normalizedPage, pageNum - 3) - 1)\r\n      else result.push(1, 2, 3, 4)\r\n      if (normalizedPage + 3 < pageNum) {\r\n        if (normalizedPage > 4) result.push(normalizedPage)\r\n        result.push(Math.max(normalizedPage, 4) + 1, undefined, pageNum)\r\n      } else result.push(pageNum - 3, pageNum - 2, pageNum - 1, pageNum)\r\n    }\r\n    return result\r\n  }, [pageNum, page])\r\n  return (\r\n    <div className='d-flex flex-wrap'>\r\n      <div className='mb-4 w-md-auto w-100 d-flex align-items-center'>\r\n        <div className='position-relative'>\r\n          <InlineSVG\r\n            src={'/media/icons/efood/IconChevronDown.svg'}\r\n            className='position-absolute translate-middle-y top-50 me-4 end-0 pe-none'\r\n          />\r\n          <select\r\n            className='form-control form-control-sm form-control-solid pe-13'\r\n            autoComplete='off'\r\n            value={limit}\r\n            onChange={(e) => setPerPage(Number(e.currentTarget.value))}\r\n          >\r\n            <option>10</option>\r\n            <option>20</option>\r\n            <option>50</option>\r\n            <option>100</option>\r\n          </select>\r\n        </div>\r\n        {loading || maxData === 0 ? null : (\r\n          <span className='ms-5 flex-shrink-0'>\r\n            Menampilkan {(page - 1) * limit + 1}-{Math.min(maxData, (page - 1) * limit + limit)}{' '}\r\n            dari {maxData} entri\r\n          </span>\r\n        )}\r\n      </div>\r\n      {pageList.length > 0 ? (\r\n        <ul className='pagination flex-nowrap flex-fill justify-content-md-end'>\r\n          <li className={`page-item previous ${page === 1 ? 'disabled' : ''}`}>\r\n            <button onClick={() => setPage(page - 1)} className='page-link'>\r\n              <i className='previous'></i>\r\n            </button>\r\n          </li>\r\n          {pageList.map((x, i) =>\r\n            x === undefined ? (\r\n              <li className='page-item disabled' key={`${i}-dot`}>\r\n                <button className='page-link'>...</button>\r\n              </li>\r\n            ) : (\r\n              <li className={`page-item ${page === x ? 'active' : ''}`} key={x}>\r\n                <button onClick={() => setPage(x)} className='page-link'>\r\n                  {x}\r\n                </button>\r\n              </li>\r\n            )\r\n          )}\r\n          <li className={`page-item next ${page === pageNum ? 'disabled' : ''}`}>\r\n            <button onClick={() => setPage(page + 1)} className='page-link'>\r\n              <i className='next'></i>\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n","import React from 'react'\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const extractState = <T>(dispatcher: React.Dispatch<React.SetStateAction<T>>) =>\r\n  new Promise((r: (value: T) => void) => {\r\n    dispatcher((value) => {\r\n      r(value)\r\n      return value\r\n    })\r\n  })\r\n","import axios from 'axios'\r\nimport {BaseResponse, BaseResponse2, Pagination2} from 'src/app/models/api.types'\r\nimport {Games} from '../models/Games'\r\n\r\nexport const url = `/api/v1/game`\r\n\r\ntype GamesListParam = {\r\n  page: number\r\n  limit: number\r\n  search?: string\r\n  statuses?: string[]\r\n  // role_id?: string\r\n  // cancelToken?: any\r\n}\r\nexport function createGames(\r\n  description: string,\r\n  status: number,\r\n  logo: string,\r\n  gamer_types_ids: string\r\n) {\r\n  return axios.post(url, {\r\n    description: description,\r\n    status: status,\r\n    logo: logo,\r\n    gamer_types_ids: gamer_types_ids,\r\n  })\r\n}\r\n\r\nexport function updateGames(\r\n  id: string,\r\n  description: string,\r\n  status: number,\r\n  logo: string,\r\n  gamer_types_ids: string\r\n) {\r\n  return axios.put(url + `/${id}`, {\r\n    description: description,\r\n    status: status,\r\n    logo: logo,\r\n    gamer_types_ids: gamer_types_ids,\r\n  })\r\n}\r\n\r\nexport function deleteGames(id: string) {\r\n  return axios.delete(url + `/${id}`)\r\n}\r\n\r\nexport function getGamesDetail(id: string) {\r\n  return axios.get<BaseResponse<Games>>(url + `/${id}`)\r\n}\r\n\r\nexport function getGamesList({\r\n  page,\r\n  limit,\r\n  search,\r\n  statuses,\r\n}: // role_id,\r\n// cancelToken,\r\nGamesListParam) {\r\n  return axios.get<BaseResponse2<Pagination2<Games>>>(url, {\r\n    params: {\r\n      page,\r\n      limit,\r\n      search,\r\n      // role_id,\r\n      statuses,\r\n    },\r\n    // cancelToken,\r\n  })\r\n}\r\n","const GamesScreens = {\r\n  GAMES_LIST: {\r\n    PATH: '/GAMES/list',\r\n    TITLE: 'List of Game',\r\n  },\r\n  ADD_GAMES: {\r\n    PATH: '/games/add/',\r\n    TITLE: 'Add Game',\r\n  },\r\n  EDIT_GAMES: {\r\n    PATH: '/games/edit/:id',\r\n    TITLE: 'Edit Game',\r\n  },\r\n}\r\n\r\nexport default GamesScreens\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react'\r\nimport {Modal} from 'react-bootstrap-v5'\r\nimport {KTSVG} from 'src/_metronic/helpers'\r\n\r\ntype Props = {\r\n  show: boolean\r\n  data: any\r\n  handleClose: () => void\r\n  onDelete: () => void | any\r\n}\r\n\r\nconst DeleteGamesModal: React.FC<Props> = ({show, handleClose, data, onDelete}) => {\r\n  return (\r\n    <Modal aria-hidden='true' tabIndex='-1' show={show} onHide={handleClose} centered>\r\n      <div className='modal-header d-flex align-items-center justify-content-between'>\r\n        <h3 className='d-flex align-items-center'>Delete</h3>\r\n\r\n        {/* begin::Close */}\r\n        <div className='btn btn-icon btn-sm btn-active-light-primary ms-2' onClick={handleClose}>\r\n          <KTSVG path='/media/icons/duotune/arrows/arr061.svg' className='svg-icon-2' />\r\n        </div>\r\n        {/* end::Close */}\r\n      </div>\r\n\r\n      <div className='modal-body'>\r\n        <div className='fv-row mb-10'>\r\n          <div className='mb-4'>\r\n            Are you sure want to delete <span className='fw-bolder'>{data?.name}</span> from list\r\n            games?\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button type='button' onClick={onDelete} className={`btn btn-lg btn-light fw-bolder`}>\r\n          <span className='text-secondary'>Delete</span>\r\n        </button>{' '}\r\n        <button\r\n          type='button'\r\n          className={`btn btn-lg btn-secondary fw-bolder me-4`}\r\n          onClick={handleClose}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DeleteGamesModal\r\n","/* esGAMESlint-disable react-hooks/exhaustive-deps */\r\nimport React, {FC, useCallback, useEffect, useState} from 'react'\r\nimport InlineSVG from 'react-inlinesvg/esm'\r\nimport Pagination from 'src/app/components/Pagination'\r\nimport {usePagination} from 'src/app/hooks/pagination-hook'\r\nimport {PageTitle} from 'src/_metronic/layout/core'\r\nimport {getTitle} from 'src/app/utils/title-utils'\r\nimport {deleteGames, getGamesList} from '../redux/GamesCRUD'\r\nimport {Games} from '../models/Games'\r\nimport GamesScreens from '../Screens'\r\nimport {useHistory} from 'react-router-dom'\r\nimport DeleteGamesModal from '../components/DeleteGamesModal'\r\nimport {useHeaderToast} from 'src/app/components/ToastComponent'\r\nimport {Link} from 'react-router-dom'\r\nimport {getErrorMessage} from 'src/app/utils/api-utils'\r\n\r\nconst GamesList: FC = (props: any) => {\r\n  const {addPageToasts} = useHeaderToast()\r\n  // const {hasAccess} = usePermissions({code: 'user_list_admin'})\r\n  const history = useHistory()\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false)\r\n  const [handleDeleteData, setHandleDeleteData] = useState<any>(null)\r\n  // const {success}: any = useSelector<RootState>(({admin}) => admin, shallowEqual)\r\n  const {state, setLimit, setPage, setQuery} = usePagination<Games, any>(\r\n    useCallback((state, setState, isActive, cancelToken) => {\r\n      const fetchCall = async () => {\r\n        try {\r\n          const statuses: string[] = []\r\n          if (state.query.status) {\r\n            statuses.push(state.query.status)\r\n          } else {\r\n            statuses.push('ACTIVE')\r\n            statuses.push('INACTIVE')\r\n          }\r\n\r\n          const games = await getGamesList({\r\n            page: state.page,\r\n            limit: state.limit,\r\n            search: state.query.search,\r\n            // role_id: state.query.role_id !== '' ? state.query.role_id : undefined,\r\n            statuses,\r\n            // cancelToken,\r\n          })\r\n          if (isActive()) {\r\n            setState((prev) => ({\r\n              ...prev,\r\n              loading: false,\r\n              refreshing: false,\r\n              error: false,\r\n              page: games.data.data?.current_page ?? 1,\r\n              data: games.data.data?.items ?? [],\r\n              total: games.data.data?.total ?? 0,\r\n            }))\r\n          }\r\n        } catch (e) {\r\n          if (isActive()) {\r\n            setState((prev) => ({\r\n              ...prev,\r\n              loading: false,\r\n              error: true,\r\n              data: [],\r\n            }))\r\n          }\r\n        }\r\n      }\r\n\r\n      fetchCall()\r\n    }, []),\r\n    {\r\n      loading: false,\r\n      refreshing: false,\r\n      error: false,\r\n      page: 0,\r\n      data: [] as Games[],\r\n      total: 0,\r\n      limit: 10,\r\n      query: {},\r\n    }\r\n  )\r\n  // const searchFn = useDebounceEffect(\r\n  //   useCallback(\r\n  //     (text: string) => {\r\n  //       setQuery((prev) => ({\r\n  //         ...prev,\r\n  //         search: text,\r\n  //       }))\r\n  //     },\r\n  //     [setQuery]\r\n  //   ),\r\n  //   500\r\n  // )\r\n  // const gamesStatus = (label: any) => {\r\n  //   switch (label) {\r\n  //     case GamesStatus.INACTIVE:\r\n  //       return <span className='badge badge-light-dark text-gray-600'>Inactive</span>\r\n  //     default:\r\n  //       return <span className='badge badge-light-success'>Active</span>\r\n  //   }\r\n  // }\r\n  useEffect(() => {\r\n    document.title = getTitle('List of Verified')\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setPage(1)\r\n  }, [setPage])\r\n\r\n  // useEffect(() => {\r\n  //   getRoleList({page: 1, limit: 100, platform: RolePlatform.ZEUS}).then((value) => {\r\n  //     const items: any = value.data.data?.items\r\n  //     setFilterRole([...items?.map((it: any) => ({value: it.id, label: it.name}))] ?? [])\r\n  //   })\r\n  // }, [])\r\n\r\n  // useEffect(() => {\r\n  //   if (success) {\r\n  //     setTimeout(() => dispatch(AdminRedux.actions.setSuccess('')), 5000)\r\n  //   }\r\n  // }, [success])\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>Manage Games</PageTitle>\r\n      <div className='card shadow-sm'>\r\n        {/* <AlertSuccess\r\n          // message={success}\r\n          message='success'\r\n          handleClose={() => {}}\r\n          // handleClose={() => dispatch(AdminRedux.actions.setSuccess(''))}\r\n        /> */}\r\n        <div className='card-header d-flex align-items-center justify-content-between'>\r\n          <div className='flex-fill fs-2 fw-bolder'>{GamesScreens.GAMES_LIST.TITLE}</div>\r\n          <div className='card-toolbar'>\r\n            <Link\r\n              to={{\r\n                pathname: `/games/add/1`,\r\n                // state: categoryDetail,\r\n              }}\r\n              className='btn btn-sm btn-secondary fw-bold fs-6'\r\n            >\r\n              Add Games\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className='card-body'>\r\n          {/* begin::Search */}\r\n          <div className='d-flex flex-wrap align-items-center'>\r\n            <div className='w-lg-auto w-100 d-flex align-items-center'>\r\n              <span className='me-5 ms-lg-4 flex-shrink-0'>Filter</span>\r\n              <div className='position-relative w-lg-200px w-100'>\r\n                <InlineSVG\r\n                  src={'/media/icons/efood/IconChevronDown.svg'}\r\n                  className='position-absolute translate-middle-y top-50 me-4 end-0 pe-none'\r\n                />\r\n                <select\r\n                  className='form-control form-control-lg form-control-solid pe-13'\r\n                  autoComplete='off'\r\n                  value={state.query.role_id}\r\n                  onChange={(e) =>\r\n                    setQuery((prev) => ({\r\n                      ...prev,\r\n                      role_id: e.target.value,\r\n                    }))\r\n                  }\r\n                >\r\n                  <option value={''}>Choose</option>\r\n                  {/* {filterRole.map((data: any, index: any) => {\r\n                    return (\r\n                      <option key={index} value={data.value}>\r\n                        {data.label}\r\n                      </option>\r\n                    )\r\n                  })} */}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className='w-lg-200px w-100 position-relative'>\r\n              <InlineSVG\r\n                src={'/media/icons/efood/IconSearch.svg'}\r\n                className='position-absolute translate-middle-y top-50 ms-4 pe-none'\r\n              />\r\n              <input\r\n                placeholder='Search'\r\n                className='form-control form-control-lg form-control-solid ps-13'\r\n                type='text'\r\n                autoComplete='off'\r\n                // onChange={(e) => searchFn(e.currentTarget.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          {/* end::Search */}\r\n          {/* begin::Table */}\r\n          <div className='position-relative'>\r\n            <div className='table-responsive my-8'>\r\n              <table className='table table-striped table-hover gx-4 gy-4'>\r\n                <thead className='text-gray fw-700'>\r\n                  <tr>\r\n                    <th>NO</th>\r\n                    <th>GAMES NAME</th>\r\n                    <th>TYPE</th>\r\n                    <th>STATUS</th>\r\n                    <th>ACTION</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {state.data.length === 0 ? (\r\n                    <tr>\r\n                      <td colSpan={9} className='text-center'>\r\n                        {state.loading\r\n                          ? 'Loading'\r\n                          : state.error\r\n                          ? 'Error, try to refresh the page'\r\n                          : 'Data Kosong'}\r\n                      </td>\r\n                    </tr>\r\n                  ) : (\r\n                    state.data.map((value, index) => (\r\n                      <tr key={value.id}>\r\n                        <td className='align-middle'>\r\n                          {(state.page - 1) * state.limit + index + 1}\r\n                        </td>\r\n                        <td className='align-middle'>{value.description}</td>\r\n                        <td className='align-middle'>{value.gamer_types}</td>\r\n                        <td className='align-middle'> {value.status}</td>\r\n                        <td className='align-middle' style={{minWidth: 125}}>\r\n                          {/* {hasAccess({access: 'update'}) ? ( */}\r\n                          <button\r\n                            type='button'\r\n                            className='btn-transparent me-3'\r\n                            onClick={() =>\r\n                              // dispatch(AdminRedux.actions.getDetailAdmin('', ''))\r\n                              history.push(`/games/add/${value.id}`)\r\n                            }\r\n                          >\r\n                            <InlineSVG src={'/media/icons/edit.svg'} />\r\n                          </button>\r\n                          {/* ) : null} */}\r\n                          {/* {hasAccess({access: 'delete'}) ? ( */}\r\n                          <div\r\n                            className='d-inline'\r\n                            onClick={() => {\r\n                              setHandleDeleteData(value)\r\n                              setShowDeleteModal(true)\r\n                            }}\r\n                            style={{cursor: 'pointer'}}\r\n                          >\r\n                            <InlineSVG src='/media/icons/trash.svg' />\r\n                          </div>\r\n                          {/* ) : null} */}\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            {/* start::Loader */}\r\n            {state.data.length > 0 && state.loading ? (\r\n              <div\r\n                className='position-absolute top-0 start-0 end-0 bottom-0'\r\n                style={{backgroundColor: 'rgba(255,255,255,0.7)'}}\r\n              />\r\n            ) : null}\r\n            {/* end::Loader */}\r\n          </div>\r\n          {/* end::Table */}\r\n          <Pagination\r\n            loading={state.loading}\r\n            page={state.page}\r\n            limit={state.limit}\r\n            setPage={setPage}\r\n            setPerPage={setLimit}\r\n            maxData={state.total}\r\n          />\r\n        </div>\r\n        <DeleteGamesModal\r\n          onDelete={() => {\r\n            deleteGames(handleDeleteData?.id ?? '')\r\n              .then(() => {\r\n                // dispatch(AdminRedux.actions.setSuccess('User berhasil dihapus.'))\r\n                setShowDeleteModal(false)\r\n                setPage(state.page)\r\n              })\r\n              .catch((err) => {\r\n                setShowDeleteModal(false)\r\n                addPageToasts({scheme: 'danger', text: getErrorMessage(err, true)})\r\n              })\r\n          }}\r\n          show={showDeleteModal}\r\n          handleClose={() => setShowDeleteModal(false)}\r\n          data={handleDeleteData}\r\n        />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport {GamesList}\r\n","import React from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {GamesList} from './page/GamesList'\r\n// import {AddGames} from './page/AddGames'\r\n// import {EditGames} from './page/EditGames'\r\nimport GamesScreens from './Screens'\r\n\r\nconst GamesRoutes: React.FC = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path={GamesScreens.GAMES_LIST.PATH} component={GamesList} />\r\n      {/* <Route path={GamesScreens.ADD_GAMES.PATH} component={AddGames} />\r\n      <Route path={GamesScreens.EDIT_GAMES.PATH} component={EditGames} /> */}\r\n      <Redirect from='/games' exact={true} to={GamesScreens.GAMES_LIST.PATH} />\r\n      <Redirect to={GamesScreens.GAMES_LIST.PATH} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default GamesRoutes\r\n"],"sourceRoot":""}