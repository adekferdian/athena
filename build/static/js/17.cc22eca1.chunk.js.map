{"version":3,"sources":["app/components/CustomReactSelect.tsx","app/components/AlertSuccess.tsx","app/hooks/pagination-hook.ts","app/components/Pagination.tsx","app/utils/hook-utils.ts","app/modules/school/redux/SchoolCRUD.ts","app/modules/school/Screens.ts","app/modules/school/components/DeleteSchoolModal.tsx","app/modules/school/page/SchoolList.tsx","app/modules/school/page/AddSchool.tsx","app/modules/school/page/EditSchool.tsx","app/modules/school/SchoolRoutes.tsx"],"names":["ReactSelectMetronicTheme","Control","children","isFocused","isDisabled","rest","className","clsx","focus","disabled","IndicatorSeparator","AlertSuccess","message","handleClose","role","style","left","top","right","zIndex","path","onClick","usePagination","loadData","defaultState","useState","state","setState","setPage","useCallback","page","prev","refreshing","total","Math","ceil","limit","loading","setQuery","builder","query","setLimit","callback","isActive","source","axios","CancelToken","runner","extractState","localState","token","cancel","useEffect","Pagination","setPerPage","maxData","pageNum","useMemo","pageList","result","normalizedPage","min","max","i","push","undefined","src","autoComplete","value","onChange","e","Number","currentTarget","length","map","x","dispatcher","Promise","r","url","getSchoolDetail","id","get","getSchoolList","search","statuses","params","SchoolScreens","SCHOOL_LIST","PATH","TITLE","ADD_SCHOOL","EDIT_SCHOOL","DeleteSchoolModal","show","data","onDelete","Modal","tabIndex","onHide","centered","name","type","SchoolList","props","addPageToasts","useHeaderToast","history","useHistory","showDeleteModal","setShowDeleteModal","handleDeleteData","setHandleDeleteData","cancelToken","fetchCall","status","school","error","current_page","items","document","title","getTitle","to","pathname","role_id","target","placeholder","colSpan","index","description","minWidth","cursor","backgroundColor","delete","then","catch","err","scheme","text","getErrorMessage","initialValues","AddSchool","success","setSuccess","selectedStatus","setSelectedStatus","formik","useFormik","validateOnBlur","validateOnChange","onSubmit","values","setStatus","setSubmitting","setTimeout","post","goBack","pageTitle","breadcrumbs","isSeparator","handleSubmit","noValidate","getFieldProps","cacheOptions","defaultOptions","components","options","label","setFieldValue","isSubmitting","EditSchool","setSchool","useParams","put","updateSchool","getData","detail","SchoolRoutes","component","from","exact"],"mappings":"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","file":"static/js/17.cc22eca1.chunk.js","sourcesContent":["import clsx from 'clsx'\r\nimport React from 'react'\r\nimport {components, ControlProps, GroupTypeBase, OptionTypeBase} from 'react-select'\r\n\r\nconst Control = <\r\n  OptionType extends OptionTypeBase,\r\n  IsMulti extends boolean,\r\n  GroupType extends GroupTypeBase<OptionType> = GroupTypeBase<OptionType>\r\n>({\r\n  children,\r\n  isFocused,\r\n  isDisabled,\r\n  ...rest\r\n}: ControlProps<OptionType, IsMulti, GroupType>) => (\r\n  <components.Control\r\n    className={clsx('form-control border-0 form-control-lg-select form-control-solid', {\r\n      focus: isFocused,\r\n      disabled: isDisabled,\r\n    })}\r\n    isFocused\r\n    isDisabled\r\n    {...rest}\r\n  >\r\n    {children}\r\n  </components.Control>\r\n)\r\n\r\nconst IndicatorSeparator = () => null\r\n\r\nexport interface LabelValueProps {\r\n  label?: string\r\n  value?: string\r\n}\r\n\r\nexport interface LabelValuePropsAny {\r\n  label?: string\r\n  value?: any\r\n}\r\n\r\nexport const ReactSelectMetronicTheme = {\r\n  Control,\r\n  IndicatorSeparator,\r\n}\r\n","import React, {MouseEventHandler} from 'react'\r\nimport {KTSVG} from 'src/_metronic/helpers'\r\n\r\ninterface AlertSuccessProps {\r\n  message?: string\r\n  handleClose: MouseEventHandler<HTMLDivElement>\r\n}\r\n\r\nconst AlertSuccess = ({message, handleClose}: AlertSuccessProps) => {\r\n  if (!message) return null\r\n\r\n  return (\r\n    <div\r\n      className='alert_success position-absolute'\r\n      role='alert'\r\n      style={{left: 0, top: 0, right: 0, zIndex: 2}}\r\n    >\r\n      <div className='d-flex align-items-center'>\r\n        <div className='btn btn-icon btn-sm btn-transparent'>\r\n          <KTSVG className='svg-icon-2' path='/media/icons/efood/ButtonSuccess.svg' />\r\n        </div>\r\n        <p>{message}</p>\r\n      </div>\r\n      <div className='btn btn-icon btn-sm btn-transparent' onClick={handleClose}>\r\n        <KTSVG className='svg-icon-2' path='/media/icons/efood/ButtonClose.svg' />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlertSuccess\r\n","import axios from 'axios'\r\nimport {useCallback, useEffect, useState} from 'react'\r\nimport {extractState} from '../utils/hook-utils'\r\n\r\nexport type PaginationState<T, Q> = {\r\n  loading: boolean\r\n  refreshing: boolean\r\n  error: boolean\r\n  page: number\r\n  data: T[]\r\n  limit: number\r\n  total: number\r\n  query: Q\r\n}\r\n\r\nexport function usePagination<T, Q>(\r\n  loadData: (\r\n    state: PaginationState<T, Q>,\r\n    setState: React.Dispatch<React.SetStateAction<PaginationState<T, Q>>>,\r\n    isActive: () => boolean,\r\n    token: any\r\n  ) => any,\r\n  defaultState: PaginationState<T, Q>\r\n) {\r\n  const [state, setState] = useState(defaultState)\r\n  const setPage = useCallback((page: number) => {\r\n    setState((prev) => {\r\n      if (prev.refreshing || (prev.total > 0 && !Math.ceil(prev.total / prev.limit))) return prev\r\n      return {\r\n        ...prev,\r\n        loading: true,\r\n        refreshing: false,\r\n        page,\r\n      }\r\n    })\r\n  }, [])\r\n  const setQuery = useCallback((builder: (query: Q) => Q) => {\r\n    setState((prev) => ({\r\n      ...prev,\r\n      loading: true,\r\n      refreshing: true,\r\n      page: 1,\r\n      total: 0,\r\n      query: builder(prev.query),\r\n    }))\r\n  }, [])\r\n  const setLimit = useCallback((limit: number) => {\r\n    setState((prev) => ({\r\n      ...prev,\r\n      loading: true,\r\n      refreshing: true,\r\n      page: 1,\r\n      total: 0,\r\n      limit,\r\n    }))\r\n  }, [])\r\n  const callback = useCallback(() => {\r\n    let isActive = true\r\n    const source = axios.CancelToken.source()\r\n    const runner = async () => {\r\n      const localState = await extractState(setState)\r\n      if (!localState.loading && !localState.refreshing) return\r\n      loadData(localState, setState, () => isActive, source.token)\r\n    }\r\n    runner()\r\n    return () => {\r\n      isActive = false\r\n      source.cancel()\r\n    }\r\n  }, [loadData])\r\n  useEffect(callback, [state.loading, state.refreshing])\r\n  return {\r\n    state,\r\n    setPage,\r\n    setQuery,\r\n    setLimit,\r\n    setState,\r\n  }\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {FC, useMemo} from 'react'\r\nimport InlineSVG from 'react-inlinesvg/esm'\r\n\r\ntype PaginationProps = {\r\n  loading: boolean\r\n  limit: number\r\n  setPerPage: (number: number) => void\r\n  page: number\r\n  setPage: (number: number) => void\r\n  maxData: number\r\n}\r\n\r\nconst Pagination: FC<PaginationProps> = ({loading, limit, setPerPage, page, setPage, maxData}) => {\r\n  const pageNum = useMemo(() => Math.ceil(maxData / limit), [maxData, limit])\r\n  const pageList = useMemo(() => {\r\n    const result: (number | undefined)[] = []\r\n    if (pageNum === 0) return result\r\n    const normalizedPage = Math.min(pageNum, Math.max(0, page))\r\n    if (pageNum < 8)\r\n      for (let i = 1; i <= pageNum; i++) {\r\n        result.push(i)\r\n      }\r\n    else {\r\n      if (normalizedPage > 4) result.push(1, undefined, Math.min(normalizedPage, pageNum - 3) - 1)\r\n      else result.push(1, 2, 3, 4)\r\n      if (normalizedPage + 3 < pageNum) {\r\n        if (normalizedPage > 4) result.push(normalizedPage)\r\n        result.push(Math.max(normalizedPage, 4) + 1, undefined, pageNum)\r\n      } else result.push(pageNum - 3, pageNum - 2, pageNum - 1, pageNum)\r\n    }\r\n    return result\r\n  }, [pageNum, page])\r\n  return (\r\n    <div className='d-flex flex-wrap'>\r\n      <div className='mb-4 w-md-auto w-100 d-flex align-items-center'>\r\n        <div className='position-relative'>\r\n          <InlineSVG\r\n            src={'/media/icons/efood/IconChevronDown.svg'}\r\n            className='position-absolute translate-middle-y top-50 me-4 end-0 pe-none'\r\n          />\r\n          <select\r\n            className='form-control form-control-sm form-control-solid pe-13'\r\n            autoComplete='off'\r\n            value={limit}\r\n            onChange={(e) => setPerPage(Number(e.currentTarget.value))}\r\n          >\r\n            <option>10</option>\r\n            <option>20</option>\r\n            <option>50</option>\r\n            <option>100</option>\r\n          </select>\r\n        </div>\r\n        {loading || maxData === 0 ? null : (\r\n          <span className='ms-5 flex-shrink-0'>\r\n            Menampilkan {(page - 1) * limit + 1}-{Math.min(maxData, (page - 1) * limit + limit)}{' '}\r\n            dari {maxData} entri\r\n          </span>\r\n        )}\r\n      </div>\r\n      {pageList.length > 0 ? (\r\n        <ul className='pagination flex-nowrap flex-fill justify-content-md-end'>\r\n          <li className={`page-item previous ${page === 1 ? 'disabled' : ''}`}>\r\n            <button onClick={() => setPage(page - 1)} className='page-link'>\r\n              <i className='previous'></i>\r\n            </button>\r\n          </li>\r\n          {pageList.map((x, i) =>\r\n            x === undefined ? (\r\n              <li className='page-item disabled' key={`${i}-dot`}>\r\n                <button className='page-link'>...</button>\r\n              </li>\r\n            ) : (\r\n              <li className={`page-item ${page === x ? 'active' : ''}`} key={x}>\r\n                <button onClick={() => setPage(x)} className='page-link'>\r\n                  {x}\r\n                </button>\r\n              </li>\r\n            )\r\n          )}\r\n          <li className={`page-item next ${page === pageNum ? 'disabled' : ''}`}>\r\n            <button onClick={() => setPage(page + 1)} className='page-link'>\r\n              <i className='next'></i>\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n","import React from 'react'\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const extractState = <T>(dispatcher: React.Dispatch<React.SetStateAction<T>>) =>\r\n  new Promise((r: (value: T) => void) => {\r\n    dispatcher((value) => {\r\n      r(value)\r\n      return value\r\n    })\r\n  })\r\n","import axios from 'axios'\r\nimport {BaseResponse, BaseResponse2, Pagination2} from 'src/app/models/api.types'\r\nimport {School} from '../models/School'\r\n\r\nexport const url = `/api/v1/school`\r\n\r\ntype SchoolListParam = {\r\n  page: number\r\n  limit: number\r\n  search?: string\r\n  statuses?: string[]\r\n  // role_id?: string\r\n  // cancelToken?: any\r\n}\r\n\r\nexport function createSchool(description: string, status: number) {\r\n  return axios.post(url, {description: description, status: status})\r\n}\r\n\r\nexport function updateSchool(id: string, description: string, status: number) {\r\n  return axios.put(url + `/${id}`, {description: description, status: status})\r\n}\r\n\r\nexport function deleteSchool(id: string) {\r\n  return axios.delete(url + `/${id}`)\r\n}\r\n\r\nexport function getSchoolDetail(id: string) {\r\n  return axios.get<BaseResponse<School>>(url + `/${id}`)\r\n}\r\n\r\nexport function getSchoolList({\r\n  page,\r\n  limit,\r\n  search,\r\n  statuses,\r\n}: // role_id,\r\n// cancelToken,\r\nSchoolListParam) {\r\n  return axios.get<BaseResponse2<Pagination2<School>>>(url, {\r\n    params: {\r\n      page,\r\n      limit,\r\n      search,\r\n      // role_id,\r\n      statuses,\r\n    },\r\n    // cancelToken,\r\n  })\r\n}\r\n","const SchoolScreens = {\r\n  SCHOOL_LIST: {\r\n    PATH: '/school/list',\r\n    TITLE: 'List of School',\r\n  },\r\n  ADD_SCHOOL: {\r\n    PATH: '/school/add/:id',\r\n    TITLE: 'Add School',\r\n  },\r\n  EDIT_SCHOOL: {\r\n    PATH: '/school/edit/:id',\r\n    TITLE: 'Edit School',\r\n  },\r\n}\r\n\r\nexport default SchoolScreens\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react'\r\nimport {Modal} from 'react-bootstrap-v5'\r\nimport {KTSVG} from 'src/_metronic/helpers'\r\n\r\ntype Props = {\r\n  show: boolean\r\n  data: any\r\n  handleClose: () => void\r\n  onDelete: () => void | any\r\n}\r\n\r\nconst DeleteSchoolModal: React.FC<Props> = ({show, handleClose, data, onDelete}) => {\r\n  return (\r\n    <Modal aria-hidden='true' tabIndex='-1' show={show} onHide={handleClose} centered>\r\n      <div className='modal-header d-flex align-items-center justify-content-between'>\r\n        <h3 className='d-flex align-items-center'>Delete</h3>\r\n\r\n        {/* begin::Close */}\r\n        <div className='btn btn-icon btn-sm btn-active-light-primary ms-2' onClick={handleClose}>\r\n          <KTSVG path='/media/icons/duotune/arrows/arr061.svg' className='svg-icon-2' />\r\n        </div>\r\n        {/* end::Close */}\r\n      </div>\r\n\r\n      <div className='modal-body'>\r\n        <div className='fv-row mb-10'>\r\n          <div className='mb-4'>\r\n            Are you sure want to delete <span className='fw-bolder'>{data?.name}</span> from list\r\n            school?\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button type='button' onClick={onDelete} className={`btn btn-lg btn-light fw-bolder`}>\r\n          <span className='text-secondary'>Delete</span>\r\n        </button>{' '}\r\n        <button\r\n          type='button'\r\n          className={`btn btn-lg btn-secondary fw-bolder me-4`}\r\n          onClick={handleClose}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DeleteSchoolModal\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, {FC, useCallback, useEffect, useState} from 'react'\r\nimport InlineSVG from 'react-inlinesvg/esm'\r\nimport Pagination from 'src/app/components/Pagination'\r\nimport {usePagination} from 'src/app/hooks/pagination-hook'\r\nimport {PageTitle} from 'src/_metronic/layout/core'\r\nimport {getTitle} from 'src/app/utils/title-utils'\r\nimport {deleteSchool, getSchoolList} from '../redux/SchoolCRUD'\r\nimport {School} from '../models/School'\r\nimport SchoolScreens from '../Screens'\r\nimport {\r\n  useHistory,\r\n} from 'react-router-dom'\r\nimport DeleteSchoolModal from '../components/DeleteSchoolModal'\r\nimport {useHeaderToast} from 'src/app/components/ToastComponent'\r\nimport {Link} from 'react-router-dom'\r\nimport {getErrorMessage} from 'src/app/utils/api-utils'\r\nconst SchoolList: FC = (props: any) => {\r\n  const {addPageToasts} = useHeaderToast()\r\n   const history = useHistory()\r\n  \r\n  const [showDeleteModal, setShowDeleteModal] = useState(false)\r\n  const [handleDeleteData, setHandleDeleteData] = useState<any>(null)\r\n  // const {success}: any = useSelector<RootState>(({admin}) => admin, shallowEqual)\r\n  const {state, setLimit, setPage, setQuery} = usePagination<School, any>(\r\n    useCallback((state, setState, isActive, cancelToken) => {\r\n      const fetchCall = async () => {\r\n        try {\r\n          const statuses: string[] = []\r\n          if (state.query.status) {\r\n            statuses.push(state.query.status)\r\n          } else {\r\n            statuses.push('ACTIVE')\r\n            statuses.push('INACTIVE')\r\n          }\r\n\r\n          const school = await getSchoolList({\r\n            page: state.page,\r\n            limit: state.limit,\r\n            search: state.query.search,\r\n            // role_id: state.query.role_id !== '' ? state.query.role_id : undefined,\r\n            statuses,\r\n            // cancelToken,\r\n          })\r\n          if (isActive()) {\r\n            setState((prev) => ({\r\n              ...prev,\r\n              loading: false,\r\n              refreshing: false,\r\n              error: false,\r\n              page: school.data.data?.current_page ?? 1,\r\n              total: school.data.data?.total ?? 0,\r\n              data: school.data.data?.items ?? [],\r\n            }))\r\n          }\r\n        } catch (e) {\r\n          if (isActive()) {\r\n            setState((prev) => ({\r\n              ...prev,\r\n              loading: false,\r\n              error: true,\r\n              data: [],\r\n            }))\r\n          }\r\n        }\r\n      }\r\n\r\n      fetchCall()\r\n    }, []),\r\n    {\r\n      loading: false,\r\n      refreshing: false,\r\n      error: false,\r\n      page: 0,\r\n      data: [] as School[],\r\n      total: 0,\r\n      limit: 10,\r\n      query: {},\r\n    }\r\n  )\r\n  // const schoolStatus = (label: any) => {\r\n  //   switch (label) {\r\n  //     case SchoolStatus.INACTIVE:\r\n  //       return <span className='badge badge-light-dark text-gray-600'>Inactive</span>\r\n  //     default:\r\n  //       return <span className='badge badge-light-success'>Active</span>\r\n  //   }\r\n  // }\r\n  useEffect(() => {\r\n    document.title = getTitle('List of Verified')\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setPage(1)\r\n  }, [setPage])\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>Manage School</PageTitle>\r\n      <div className='card shadow-sm'>\r\n        {/* <AlertSuccess\r\n          // message={success}\r\n          message='success'\r\n          handleClose={() => {}}\r\n          // handleClose={() => dispatch(AdminRedux.actions.setSuccess(''))}\r\n        /> */}\r\n        <div className='card-header d-flex align-items-center justify-content-between'>\r\n          <div className='flex-fill fs-2 fw-bolder'>{SchoolScreens.SCHOOL_LIST.TITLE}</div>\r\n          <div className='card-toolbar'>\r\n            <Link\r\n              to={{\r\n                pathname: `/school/add/1`,\r\n                // state: categoryDetail,\r\n              }}\r\n              className='btn btn-sm btn-secondary fw-bold fs-6'\r\n            >\r\n              Add School\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className='card-body'>\r\n          {/* begin::Search */}\r\n          <div className='d-flex flex-wrap align-items-center'>\r\n            <div className='w-lg-auto w-100 d-flex align-items-center'>\r\n              <span className='me-5 ms-lg-4 flex-shrink-0'>Filter</span>\r\n              <div className='position-relative w-lg-200px w-100'>\r\n                <InlineSVG\r\n                  src={'/media/icons/efood/IconChevronDown.svg'}\r\n                  className='position-absolute translate-middle-y top-50 me-4 end-0 pe-none'\r\n                />\r\n                <select\r\n                  className='form-control form-control-lg form-control-solid pe-13'\r\n                  autoComplete='off'\r\n                  value={state.query.role_id}\r\n                  onChange={(e) =>\r\n                    setQuery((prev) => ({\r\n                      ...prev,\r\n                      role_id: e.target.value,\r\n                    }))\r\n                  }\r\n                >\r\n                  <option value={''}>Choose</option>\r\n                  {/* {filterRole.map((data: any, index: any) => {\r\n                    return (\r\n                      <option key={index} value={data.value}>\r\n                        {data.label}\r\n                      </option>\r\n                    )\r\n                  })} */}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className='w-lg-200px w-100 position-relative'>\r\n              <InlineSVG\r\n                src={'/media/icons/efood/IconSearch.svg'}\r\n                className='position-absolute translate-middle-y top-50 ms-4 pe-none'\r\n              />\r\n              <input\r\n                placeholder='Search'\r\n                className='form-control form-control-lg form-control-solid ps-13'\r\n                type='text'\r\n                autoComplete='off'\r\n                // onChange={(e) => searchFn(e.currentTarget.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          {/* end::Search */}\r\n          {/* begin::Table */}\r\n          <div className='position-relative'>\r\n            <div className='table-responsive my-8'>\r\n              <table className='table table-striped table-hover gx-4 gy-4'>\r\n                <thead className='text-gray fw-700'>\r\n                  <tr>\r\n                    <th>NO</th>\r\n                    <th>SCHOOL</th>\r\n                    <th>STATUS</th>\r\n                    <th>ACTION</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {state.data.length === 0 ? (\r\n                    <tr>\r\n                      <td colSpan={9} className='text-center'>\r\n                        {state.loading\r\n                          ? 'Loading'\r\n                          : state.error\r\n                          ? 'Error, try to refresh the page'\r\n                          : 'Data Kosong'}\r\n                      </td>\r\n                    </tr>\r\n                  ) : (\r\n                    state.data.map((value, index) => (\r\n                      <tr key={value.id}>\r\n                        <td className='align-middle'>\r\n                          {(state.page - 1) * state.limit + index + 1}\r\n                        </td>\r\n                        <td className='align-middle'>{value.description}</td>\r\n                        <td className='align-middle'>\r\n                          {' '}\r\n                          {value.status === 1 ? 'inactive' : 'active'}\r\n                        </td>\r\n                        <td className='align-middle' style={{minWidth: 125}}>\r\n                          {/* {hasAccess({access: 'update'}) ? ( */}\r\n                          <button\r\n                            type='button'\r\n                            className='btn-transparent me-3'\r\n                            onClick={() =>\r\n                              // dispatch(AdminRedux.actions.getDetailAdmin('', ''))\r\n                              history.push(`/school/edit/${value.id}`)\r\n                            }\r\n                          >\r\n                            <InlineSVG src={'/media/icons/edit.svg'} />\r\n                          </button>\r\n                          {/* ) : null} */}\r\n                          {/* {hasAccess({access: 'delete'}) ? ( */}\r\n                          <div\r\n                            className='d-inline'\r\n                            onClick={() => {\r\n                              setHandleDeleteData(value)\r\n                              setShowDeleteModal(true)\r\n                            }}\r\n                            style={{cursor: 'pointer'}}\r\n                          >\r\n                            <InlineSVG src='/media/icons/trash.svg' />\r\n                          </div>\r\n                          {/* ) : null} */}\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            {/* start::Loader */}\r\n            {state.data.length > 0 && state.loading ? (\r\n              <div\r\n                className='position-absolute top-0 start-0 end-0 bottom-0'\r\n                style={{backgroundColor: 'rgba(255,255,255,0.7)'}}\r\n              />\r\n            ) : null}\r\n            {/* end::Loader */}\r\n          </div>\r\n          {/* end::Table */}\r\n          <Pagination\r\n            loading={state.loading}\r\n            page={state.page}\r\n            limit={state.limit}\r\n            setPage={setPage}\r\n            setPerPage={setLimit}\r\n            maxData={state.total}\r\n          />\r\n        </div>\r\n        <DeleteSchoolModal\r\n          onDelete={() => {\r\n            deleteSchool(handleDeleteData?.id ?? '')\r\n              .then(() => {\r\n                // dispatch(AdminRedux.actions.setSuccess('User berhasil dihapus.'))\r\n                setShowDeleteModal(false)\r\n                setPage(state.page)\r\n              })\r\n              .catch((err) => {\r\n                setShowDeleteModal(false)\r\n                addPageToasts({scheme: 'danger', text: getErrorMessage(err, true)})\r\n              })\r\n          }}\r\n          show={showDeleteModal}\r\n          handleClose={() => setShowDeleteModal(false)}\r\n          data={handleDeleteData}\r\n        />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport {SchoolList}\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {useFormik} from 'formik'\r\nimport React, {useEffect, useMemo, useState} from 'react'\r\nimport {useHistory} from 'react-router'\r\nimport {PageTitle} from 'src/_metronic/layout/core'\r\nimport {getTitle} from 'src/app/utils/title-utils'\r\nimport AlertSuccess from 'src/app/components/AlertSuccess'\r\nimport SchoolScreens from '../Screens'\r\nimport Select from 'react-select'\r\nimport {ReactSelectMetronicTheme} from 'src/app/components/CustomReactSelect'\r\nimport {SelectComponentsConfig} from 'react-select'\r\nimport { createSchool } from '../redux/SchoolCRUD'\r\n\r\nconst initialValues = {\r\n  description: '',\r\n  status: '',\r\n}\r\n\r\nexport const AddSchool = () => {\r\n  // States\r\n  const [success, setSuccess] = useState('')\r\n  const [selectedStatus, setSelectedStatus] = useState<{label: string; value: string} | undefined>()\r\n  const statList = [\r\n    {label: 'active', value: 1},\r\n    {label: 'inactive', value: 0},\r\n  ]\r\n  // Variables\r\n  const history = useHistory()\r\n  // const {data}: any = useSelector<RootState>(({admin}) => admin, shallowEqual)\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validateOnBlur: false,\r\n    validateOnChange: false,\r\n    onSubmit: (values: any, {setStatus, setSubmitting}) => {\r\n      setSubmitting(true)\r\n      setTimeout(() => {\r\n        \r\n        createSchool(values.description, values.status)\r\n          .then(() => {\r\n            // dispatch(AdminRedux.actions.setSuccess('Data berhasil disimpan.'))\r\n            history.goBack()\r\n          })\r\n          .catch(() => {\r\n            setSubmitting(false)\r\n            setStatus('Add School gagal.')\r\n          })\r\n      }, 1000)\r\n    },\r\n  })\r\n\r\n  //start::TITLE_FUNC\r\n  const pageTitle = useMemo(() => SchoolScreens.ADD_SCHOOL.TITLE, [])\r\n\r\n  const breadcrumbs = useMemo(\r\n    () => [\r\n      {\r\n        isActive: false,\r\n        path: SchoolScreens.ADD_SCHOOL.PATH,\r\n        title: SchoolScreens.ADD_SCHOOL.TITLE,\r\n      },\r\n      {isActive: false, path: '', title: '', isSeparator: true},\r\n    ],\r\n    []\r\n  )\r\n\r\n  useEffect(() => {\r\n    document.title = getTitle(pageTitle)\r\n  }, [])\r\n  //end::TITLE_FUNC\r\n\r\n  return (\r\n    <div className='card'>\r\n      <PageTitle breadcrumbs={breadcrumbs}>{pageTitle}</PageTitle>\r\n      <div className='card-body'>\r\n        <AlertSuccess message={success} handleClose={() => setSuccess('')} />\r\n        <form className='form w-100' onSubmit={formik.handleSubmit} noValidate>\r\n          <div className='mb-10 row'>\r\n            <div className='col-12 col-md-6 mb-10 mb-md-0'>\r\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>School</label>\r\n              <input\r\n                {...formik.getFieldProps('description')}\r\n                type='text'\r\n                className='form-control form-control-lg form-control-solid'\r\n                tabIndex={1}\r\n              />\r\n            </div>\r\n            <div className='col-12 col-md-6'>\r\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>Status*</label>\r\n              <Select\r\n                placeholder='All Status'\r\n                cacheOptions\r\n                defaultOptions\r\n                components={ReactSelectMetronicTheme as SelectComponentsConfig<any, true>}\r\n                value={selectedStatus}\r\n                options={statList}\r\n                onChange={(value: any) => {\r\n                  setSelectedStatus(value)\r\n                  formik.setFieldValue('status', value.value)\r\n                }}\r\n                tabIndex='5'\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='border-top pt-10 cardfooter-btns'>\r\n            <button\r\n              type='button'\r\n              className={`btn btn-lg btn-light fw-bolder me-4`}\r\n              onClick={() => history.goBack()}\r\n              tabIndex={8}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type='submit'\r\n              className='btn btn-lg btn-secondary fw-bolder me-4'\r\n              disabled={formik.isSubmitting}\r\n              tabIndex={9}\r\n            >\r\n              <span className='indicator-label'>Save</span>\r\n              {formik.isSubmitting && (\r\n                <span className='indicator-progress'>\r\n                  Mohon Tunggu...\r\n                  <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                </span>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {useFormik} from 'formik'\r\nimport React, {useEffect, useMemo, useState} from 'react'\r\nimport {useHistory} from 'react-router'\r\nimport {PageTitle} from 'src/_metronic/layout/core'\r\nimport {getTitle} from 'src/app/utils/title-utils'\r\n// import {RolePlatform} from '../../role-management/models/Role'\r\nimport AlertSuccess from 'src/app/components/AlertSuccess'\r\nimport SchoolScreens from '../Screens'\r\nimport {useParams} from 'react-router-dom'\r\nimport Select from 'react-select'\r\nimport {ReactSelectMetronicTheme} from 'src/app/components/CustomReactSelect'\r\nimport {SelectComponentsConfig} from 'react-select'\r\nimport {getSchoolDetail, updateSchool} from '../redux/SchoolCRUD'\r\n\r\nconst initialValues = {\r\n  school: '',\r\n  status: '',\r\n}\r\n\r\n\r\nexport const EditSchool = () => {\r\n  // States\r\n  const [school, setSchool] = useState('')\r\n  const [success, setSuccess] = useState('')\r\n  const [selectedStatus, setSelectedStatus] = useState<{label: string; value: number} | undefined>()\r\n  const statList = [\r\n    {label: 'active', value: 1},\r\n    {label: 'inactive', value: 0},\r\n  ]\r\n  // Variables\r\n  const {id} = useParams<any>()\r\n  const history = useHistory()\r\n  // const {data}: any = useSelector<RootState>(({admin}) => admin, shallowEqual)\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validateOnBlur: false,\r\n    validateOnChange: false,\r\n    onSubmit: (values: any, {setStatus, setSubmitting}) => {\r\n      setSubmitting(true)\r\n      setTimeout(() => {\r\n        updateSchool(id, school, selectedStatus?.value ?? values.status)\r\n          .then(() => {\r\n            // dispatch(SchoolRedux.actions.setSuccess('Data berhasil disimpan.'))\r\n            history.goBack()\r\n          })\r\n          .catch(() => {\r\n            setSubmitting(false)\r\n            setStatus('Update School gagal.')\r\n          })\r\n      }, 1000)\r\n    },\r\n  })\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const detail = await getSchoolDetail(id)\r\n        setSchool(detail.data.data?.description ?? '')\r\n        detail.data.data?.status === 0\r\n          ? setSelectedStatus({label: 'inactive', value: detail.data.data?.status})\r\n          : setSelectedStatus({label: 'active', value: detail.data.data?.status ?? 1})\r\n\r\n        formik.setFieldValue('school', detail.data.data?.description)\r\n        formik.setFieldValue('status', selectedStatus)\r\n      } catch (error) {}\r\n    }\r\n\r\n    getData()\r\n  }, [id])\r\n  //start::TITLE_FUNC\r\n  const pageTitle = useMemo(() => SchoolScreens.ADD_SCHOOL.TITLE, [])\r\n\r\n  const breadcrumbs = useMemo(\r\n    () => [\r\n      {\r\n        isActive: false,\r\n        path: SchoolScreens.SCHOOL_LIST.PATH,\r\n        title: SchoolScreens.SCHOOL_LIST.TITLE,\r\n      },\r\n      {isActive: false, path: '', title: '', isSeparator: true},\r\n    ],\r\n    []\r\n  )\r\n\r\n  useEffect(() => {\r\n    document.title = getTitle(pageTitle)\r\n  }, [])\r\n  //end::TITLE_FUNC\r\n\r\n  return (\r\n    <div className='card'>\r\n      <PageTitle breadcrumbs={breadcrumbs}>{pageTitle}</PageTitle>\r\n      <div className='card-body'>\r\n        <AlertSuccess message={success} handleClose={() => setSuccess('')} />\r\n        <form className='form w-100' onSubmit={formik.handleSubmit} noValidate>\r\n          <div className='mb-10 row'>\r\n            <div className='col-12 col-md-6 mb-10 mb-md-0'>\r\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>School</label>\r\n              <input\r\n                {...formik.getFieldProps('school')}\r\n                type='text'\r\n                className='form-control form-control-lg form-control-solid'\r\n                onChange={(value: any) => {\r\n                  formik.setFieldValue('school', value.target.value)\r\n                  setSchool(value.target.value)\r\n                }}\r\n              />\r\n            </div>\r\n            <div className='col-12 col-md-6'>\r\n              <label className='flex-fill form-label fs-6 fw-bolder text-gray-800'>Status*</label>\r\n              <Select\r\n                placeholder='All Status'\r\n                cacheOptions\r\n                defaultOptions\r\n                components={ReactSelectMetronicTheme as SelectComponentsConfig<any, true>}\r\n                value={selectedStatus}\r\n                options={statList}\r\n                onChange={(value: any) => {\r\n                  setSelectedStatus(value)\r\n                  formik.setFieldValue('status', value.value)\r\n                }}\r\n                tabIndex='5'\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='border-top pt-10 cardfooter-btns'>\r\n            <button\r\n              type='button'\r\n              className={`btn btn-lg btn-light fw-bolder me-4`}\r\n              onClick={() => history.goBack()}\r\n              tabIndex={8}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type='submit'\r\n              className='btn btn-lg btn-secondary fw-bolder me-4'\r\n              disabled={formik.isSubmitting}\r\n              tabIndex={9}\r\n            >\r\n              <span className='indicator-label'>Save</span>\r\n              {formik.isSubmitting && (\r\n                <span className='indicator-progress'>\r\n                  Mohon Tunggu...\r\n                  <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                </span>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {SchoolList} from './page/SchoolList'\r\nimport {AddSchool} from './page/AddSchool'\r\nimport {EditSchool} from './page/EditSchool'\r\nimport SchoolScreens from './Screens'\r\n\r\nconst SchoolRoutes: React.FC = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path={SchoolScreens.SCHOOL_LIST.PATH} component={SchoolList} />\r\n      <Route path={SchoolScreens.ADD_SCHOOL.PATH} component={AddSchool} />\r\n      <Route path={SchoolScreens.EDIT_SCHOOL.PATH} component={EditSchool} />\r\n      <Redirect from='/gender' exact={true} to={SchoolScreens.SCHOOL_LIST.PATH} />\r\n      <Redirect to={SchoolScreens.SCHOOL_LIST.PATH} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default SchoolRoutes\r\n"],"sourceRoot":""}